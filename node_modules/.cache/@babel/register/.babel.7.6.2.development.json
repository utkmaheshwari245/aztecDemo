{
  "{\"sourceRoot\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"filename\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocol.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocol.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocol.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocol.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
        "sourceFileName": "testAztecProtocol.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _devUtils = _interopRequireDefault(require(\"@aztec/dev-utils\"));\n\nvar aztec = require('aztec.js');\n\nvar secp256k1 = require('@aztec/secp256k1');\n\nvar ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\n\nvar MINT_PROOF = _devUtils[\"default\"].proofs.MINT_PROOF;\nvar JoinSplitProof = aztec.JoinSplitProof,\n    MintProof = aztec.MintProof;\ncontract('Test Aztec Privacy Protocol', function (accounts) {\n  var alice = secp256k1.generateAccount();\n  var bob = secp256k1.generateAccount();\n  it('Test Unilateral Transfer using Aztec protocol',\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee() {\n    var ZkAssetMintableInstance, zeroValueNote, alice100Note, proof1, data1, alice75Note, bob25Note, proof2, data2, signatures2;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ZkAssetMintable.deployed();\n\n          case 2:\n            ZkAssetMintableInstance = _context.sent;\n            console.log('Mint Aztec Note worth 100 for Alice');\n            _context.next = 6;\n            return aztec.note.createZeroValueNote();\n\n          case 6:\n            zeroValueNote = _context.sent;\n            _context.next = 9;\n            return aztec.note.create(alice.publicKey, 100);\n\n          case 9:\n            alice100Note = _context.sent;\n            proof1 = new MintProof(zeroValueNote, alice100Note, [alice100Note], ZkAssetMintableInstance.address);\n            data1 = proof1.encodeABI();\n            _context.next = 14;\n            return ZkAssetMintableInstance.confidentialMint(MINT_PROOF, data1);\n\n          case 14:\n            console.log('Transfer Aztec Note worth 25 from Alice to Bob');\n            _context.next = 17;\n            return aztec.note.create(alice.publicKey, 75);\n\n          case 17:\n            alice75Note = _context.sent;\n            _context.next = 20;\n            return aztec.note.create(bob.publicKey, 25);\n\n          case 20:\n            bob25Note = _context.sent;\n            proof2 = new JoinSplitProof([alice100Note], [alice75Note, bob25Note], accounts[0], 0, accounts[0]);\n            data2 = proof2.encodeABI(ZkAssetMintableInstance.address);\n            signatures2 = proof2.constructSignatures(ZkAssetMintableInstance.address, [alice]);\n            _context.next = 26;\n            return ZkAssetMintableInstance.confidentialTransfer(data2, signatures2);\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3RBenRlY1Byb3RvY29sLmpzIl0sIm5hbWVzIjpbImF6dGVjIiwicmVxdWlyZSIsInNlY3AyNTZrMSIsIlprQXNzZXRNaW50YWJsZSIsImFydGlmYWN0cyIsIk1JTlRfUFJPT0YiLCJ1dGlscyIsInByb29mcyIsIkpvaW5TcGxpdFByb29mIiwiTWludFByb29mIiwiY29udHJhY3QiLCJhY2NvdW50cyIsImFsaWNlIiwiZ2VuZXJhdGVBY2NvdW50IiwiYm9iIiwiaXQiLCJkZXBsb3llZCIsIlprQXNzZXRNaW50YWJsZUluc3RhbmNlIiwiY29uc29sZSIsImxvZyIsIm5vdGUiLCJjcmVhdGVaZXJvVmFsdWVOb3RlIiwiemVyb1ZhbHVlTm90ZSIsImNyZWF0ZSIsInB1YmxpY0tleSIsImFsaWNlMTAwTm90ZSIsInByb29mMSIsImFkZHJlc3MiLCJkYXRhMSIsImVuY29kZUFCSSIsImNvbmZpZGVudGlhbE1pbnQiLCJhbGljZTc1Tm90ZSIsImJvYjI1Tm90ZSIsInByb29mMiIsImRhdGEyIiwic2lnbmF0dXJlczIiLCJjb25zdHJ1Y3RTaWduYXR1cmVzIiwiY29uZmlkZW50aWFsVHJhbnNmZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBRUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUFyQjs7QUFDQSxJQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxrQkFBRCxDQUF6Qjs7QUFFQSxJQUFNRSxlQUFlLEdBQUdDLFNBQVMsQ0FBQ0gsT0FBVixDQUFrQix1QkFBbEIsQ0FBeEI7O0lBRWlCSSxVLEdBQWVDLG9CLENBQXpCQyxNLENBQVVGLFU7SUFDVkcsYyxHQUE2QlIsSyxDQUE3QlEsYztJQUFnQkMsUyxHQUFhVCxLLENBQWJTLFM7QUFFdkJDLFFBQVEsQ0FBQyw2QkFBRCxFQUFnQyxVQUFBQyxRQUFRLEVBQUk7QUFDaEQsTUFBTUMsS0FBSyxHQUFHVixTQUFTLENBQUNXLGVBQVYsRUFBZDtBQUNBLE1BQU1DLEdBQUcsR0FBR1osU0FBUyxDQUFDVyxlQUFWLEVBQVo7QUFFQUUsRUFBQUEsRUFBRSxDQUFDLCtDQUFEO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBQWtEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ1ZaLGVBQWUsQ0FBQ2EsUUFBaEIsRUFEVTs7QUFBQTtBQUMxQ0MsWUFBQUEsdUJBRDBDO0FBR2hEQyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxxQ0FBWjtBQUhnRDtBQUFBLG1CQUlwQm5CLEtBQUssQ0FBQ29CLElBQU4sQ0FBV0MsbUJBQVgsRUFKb0I7O0FBQUE7QUFJMUNDLFlBQUFBLGFBSjBDO0FBQUE7QUFBQSxtQkFLckJ0QixLQUFLLENBQUNvQixJQUFOLENBQVdHLE1BQVgsQ0FBa0JYLEtBQUssQ0FBQ1ksU0FBeEIsRUFBbUMsR0FBbkMsQ0FMcUI7O0FBQUE7QUFLMUNDLFlBQUFBLFlBTDBDO0FBTTFDQyxZQUFBQSxNQU4wQyxHQU1qQyxJQUFJakIsU0FBSixDQUFjYSxhQUFkLEVBQTZCRyxZQUE3QixFQUEyQyxDQUFDQSxZQUFELENBQTNDLEVBQTJEUix1QkFBdUIsQ0FBQ1UsT0FBbkYsQ0FOaUM7QUFPMUNDLFlBQUFBLEtBUDBDLEdBT2xDRixNQUFNLENBQUNHLFNBQVAsRUFQa0M7QUFBQTtBQUFBLG1CQVExQ1osdUJBQXVCLENBQUNhLGdCQUF4QixDQUF5Q3pCLFVBQXpDLEVBQXFEdUIsS0FBckQsQ0FSMEM7O0FBQUE7QUFVaERWLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdEQUFaO0FBVmdEO0FBQUEsbUJBV3RCbkIsS0FBSyxDQUFDb0IsSUFBTixDQUFXRyxNQUFYLENBQWtCWCxLQUFLLENBQUNZLFNBQXhCLEVBQW1DLEVBQW5DLENBWHNCOztBQUFBO0FBVzFDTyxZQUFBQSxXQVgwQztBQUFBO0FBQUEsbUJBWXhCL0IsS0FBSyxDQUFDb0IsSUFBTixDQUFXRyxNQUFYLENBQWtCVCxHQUFHLENBQUNVLFNBQXRCLEVBQWlDLEVBQWpDLENBWndCOztBQUFBO0FBWTFDUSxZQUFBQSxTQVowQztBQWExQ0MsWUFBQUEsTUFiMEMsR0FhakMsSUFBSXpCLGNBQUosQ0FBbUIsQ0FBQ2lCLFlBQUQsQ0FBbkIsRUFBbUMsQ0FBQ00sV0FBRCxFQUFjQyxTQUFkLENBQW5DLEVBQTZEckIsUUFBUSxDQUFDLENBQUQsQ0FBckUsRUFBMEUsQ0FBMUUsRUFBNkVBLFFBQVEsQ0FBQyxDQUFELENBQXJGLENBYmlDO0FBYzFDdUIsWUFBQUEsS0FkMEMsR0FjbENELE1BQU0sQ0FBQ0osU0FBUCxDQUFpQlosdUJBQXVCLENBQUNVLE9BQXpDLENBZGtDO0FBZTFDUSxZQUFBQSxXQWYwQyxHQWU1QkYsTUFBTSxDQUFDRyxtQkFBUCxDQUEyQm5CLHVCQUF1QixDQUFDVSxPQUFuRCxFQUE0RCxDQUFDZixLQUFELENBQTVELENBZjRCO0FBQUE7QUFBQSxtQkFnQjFDSyx1QkFBdUIsQ0FBQ29CLG9CQUF4QixDQUE2Q0gsS0FBN0MsRUFBb0RDLFdBQXBELENBaEIwQzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFsRCxHQUFGO0FBa0JILENBdEJPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3V0a21haGVzaHdhcmkyNDUvV29yay9Qcm9qZWN0cy9teUF6dGVjL3Rlc3QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXRpbHMgZnJvbSAnQGF6dGVjL2Rldi11dGlscyc7XG5cbmNvbnN0IGF6dGVjID0gcmVxdWlyZSgnYXp0ZWMuanMnKTtcbmNvbnN0IHNlY3AyNTZrMSA9IHJlcXVpcmUoJ0BhenRlYy9zZWNwMjU2azEnKTtcblxuY29uc3QgWmtBc3NldE1pbnRhYmxlID0gYXJ0aWZhY3RzLnJlcXVpcmUoJy4vWmtBc3NldE1pbnRhYmxlLnNvbCcpO1xuXG5jb25zdCB7cHJvb2ZzIDoge01JTlRfUFJPT0Z9fSA9IHV0aWxzO1xuY29uc3Qge0pvaW5TcGxpdFByb29mLCBNaW50UHJvb2Z9ID0gYXp0ZWM7XG5cbmNvbnRyYWN0KCdUZXN0IEF6dGVjIFByaXZhY3kgUHJvdG9jb2wnLCBhY2NvdW50cyA9PiB7XG4gICAgY29uc3QgYWxpY2UgPSBzZWNwMjU2azEuZ2VuZXJhdGVBY2NvdW50KCk7XG4gICAgY29uc3QgYm9iID0gc2VjcDI1NmsxLmdlbmVyYXRlQWNjb3VudCgpO1xuXG4gICAgaXQoJ1Rlc3QgVW5pbGF0ZXJhbCBUcmFuc2ZlciB1c2luZyBBenRlYyBwcm90b2NvbCcsIGFzeW5jKCkgPT4ge1xuICAgICAgICBjb25zdCBaa0Fzc2V0TWludGFibGVJbnN0YW5jZSA9IGF3YWl0IFprQXNzZXRNaW50YWJsZS5kZXBsb3llZCgpO1xuICBcbiAgICAgICAgY29uc29sZS5sb2coJ01pbnQgQXp0ZWMgTm90ZSB3b3J0aCAxMDAgZm9yIEFsaWNlJyk7XG4gICAgICAgIGNvbnN0IHplcm9WYWx1ZU5vdGUgPSBhd2FpdCBhenRlYy5ub3RlLmNyZWF0ZVplcm9WYWx1ZU5vdGUoKTtcbiAgICAgICAgY29uc3QgYWxpY2UxMDBOb3RlID0gYXdhaXQgYXp0ZWMubm90ZS5jcmVhdGUoYWxpY2UucHVibGljS2V5LCAxMDApO1xuICAgICAgICBjb25zdCBwcm9vZjEgPSBuZXcgTWludFByb29mKHplcm9WYWx1ZU5vdGUsIGFsaWNlMTAwTm90ZSwgW2FsaWNlMTAwTm90ZV0sIFprQXNzZXRNaW50YWJsZUluc3RhbmNlLmFkZHJlc3MpO1xuICAgICAgICBjb25zdCBkYXRhMSA9IHByb29mMS5lbmNvZGVBQkkoKTtcbiAgICAgICAgYXdhaXQgWmtBc3NldE1pbnRhYmxlSW5zdGFuY2UuY29uZmlkZW50aWFsTWludChNSU5UX1BST09GLCBkYXRhMSk7XG5cbiAgICAgICAgY29uc29sZS5sb2coJ1RyYW5zZmVyIEF6dGVjIE5vdGUgd29ydGggMjUgZnJvbSBBbGljZSB0byBCb2InKTtcbiAgICAgICAgY29uc3QgYWxpY2U3NU5vdGUgPSBhd2FpdCBhenRlYy5ub3RlLmNyZWF0ZShhbGljZS5wdWJsaWNLZXksIDc1KTtcbiAgICAgICAgY29uc3QgYm9iMjVOb3RlID0gYXdhaXQgYXp0ZWMubm90ZS5jcmVhdGUoYm9iLnB1YmxpY0tleSwgMjUpO1xuICAgICAgICBjb25zdCBwcm9vZjIgPSBuZXcgSm9pblNwbGl0UHJvb2YoW2FsaWNlMTAwTm90ZV0sIFthbGljZTc1Tm90ZSwgYm9iMjVOb3RlXSwgYWNjb3VudHNbMF0sIDAsIGFjY291bnRzWzBdKTtcbiAgICAgICAgY29uc3QgZGF0YTIgPSBwcm9vZjIuZW5jb2RlQUJJKFprQXNzZXRNaW50YWJsZUluc3RhbmNlLmFkZHJlc3MpO1xuICAgICAgICBjb25zdCBzaWduYXR1cmVzMiA9IHByb29mMi5jb25zdHJ1Y3RTaWduYXR1cmVzKFprQXNzZXRNaW50YWJsZUluc3RhbmNlLmFkZHJlc3MsIFthbGljZV0pO1xuICAgICAgICBhd2FpdCBaa0Fzc2V0TWludGFibGVJbnN0YW5jZS5jb25maWRlbnRpYWxUcmFuc2ZlcihkYXRhMiwgc2lnbmF0dXJlczIpO1xuICAgIH0pO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "testAztecProtocol.js"
      ],
      "names": [
        "aztec",
        "require",
        "secp256k1",
        "ZkAssetMintable",
        "artifacts",
        "MINT_PROOF",
        "utils",
        "proofs",
        "JoinSplitProof",
        "MintProof",
        "contract",
        "accounts",
        "alice",
        "generateAccount",
        "bob",
        "it",
        "deployed",
        "ZkAssetMintableInstance",
        "console",
        "log",
        "note",
        "createZeroValueNote",
        "zeroValueNote",
        "create",
        "publicKey",
        "alice100Note",
        "proof1",
        "address",
        "data1",
        "encodeABI",
        "confidentialMint",
        "alice75Note",
        "bob25Note",
        "proof2",
        "data2",
        "signatures2",
        "constructSignatures",
        "confidentialTransfer"
      ],
      "mappings": ";;;;;;;;AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AAEA,IAAME,eAAe,GAAGC,SAAS,CAACH,OAAV,CAAkB,uBAAlB,CAAxB;;IAEiBI,U,GAAeC,oB,CAAzBC,M,CAAUF,U;IACVG,c,GAA6BR,K,CAA7BQ,c;IAAgBC,S,GAAaT,K,CAAbS,S;AAEvBC,QAAQ,CAAC,6BAAD,EAAgC,UAAAC,QAAQ,EAAI;AAChD,MAAMC,KAAK,GAAGV,SAAS,CAACW,eAAV,EAAd;AACA,MAAMC,GAAG,GAAGZ,SAAS,CAACW,eAAV,EAAZ;AAEAE,EAAAA,EAAE,CAAC,+CAAD;AAAA;AAAA;AAAA;AAAA,+BAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACVZ,eAAe,CAACa,QAAhB,EADU;;AAAA;AAC1CC,YAAAA,uBAD0C;AAGhDC,YAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AAHgD;AAAA,mBAIpBnB,KAAK,CAACoB,IAAN,CAAWC,mBAAX,EAJoB;;AAAA;AAI1CC,YAAAA,aAJ0C;AAAA;AAAA,mBAKrBtB,KAAK,CAACoB,IAAN,CAAWG,MAAX,CAAkBX,KAAK,CAACY,SAAxB,EAAmC,GAAnC,CALqB;;AAAA;AAK1CC,YAAAA,YAL0C;AAM1CC,YAAAA,MAN0C,GAMjC,IAAIjB,SAAJ,CAAca,aAAd,EAA6BG,YAA7B,EAA2C,CAACA,YAAD,CAA3C,EAA2DR,uBAAuB,CAACU,OAAnF,CANiC;AAO1CC,YAAAA,KAP0C,GAOlCF,MAAM,CAACG,SAAP,EAPkC;AAAA;AAAA,mBAQ1CZ,uBAAuB,CAACa,gBAAxB,CAAyCzB,UAAzC,EAAqDuB,KAArD,CAR0C;;AAAA;AAUhDV,YAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AAVgD;AAAA,mBAWtBnB,KAAK,CAACoB,IAAN,CAAWG,MAAX,CAAkBX,KAAK,CAACY,SAAxB,EAAmC,EAAnC,CAXsB;;AAAA;AAW1CO,YAAAA,WAX0C;AAAA;AAAA,mBAYxB/B,KAAK,CAACoB,IAAN,CAAWG,MAAX,CAAkBT,GAAG,CAACU,SAAtB,EAAiC,EAAjC,CAZwB;;AAAA;AAY1CQ,YAAAA,SAZ0C;AAa1CC,YAAAA,MAb0C,GAajC,IAAIzB,cAAJ,CAAmB,CAACiB,YAAD,CAAnB,EAAmC,CAACM,WAAD,EAAcC,SAAd,CAAnC,EAA6DrB,QAAQ,CAAC,CAAD,CAArE,EAA0E,CAA1E,EAA6EA,QAAQ,CAAC,CAAD,CAArF,CAbiC;AAc1CuB,YAAAA,KAd0C,GAclCD,MAAM,CAACJ,SAAP,CAAiBZ,uBAAuB,CAACU,OAAzC,CAdkC;AAe1CQ,YAAAA,WAf0C,GAe5BF,MAAM,CAACG,mBAAP,CAA2BnB,uBAAuB,CAACU,OAAnD,EAA4D,CAACf,KAAD,CAA5D,CAf4B;AAAA;AAAA,mBAgB1CK,uBAAuB,CAACoB,oBAAxB,CAA6CH,KAA7C,EAAoDC,WAApD,CAhB0C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlD,GAAF;AAkBH,CAtBO,CAAR",
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "sourcesContent": [
        "import utils from '@aztec/dev-utils';\n\nconst aztec = require('aztec.js');\nconst secp256k1 = require('@aztec/secp256k1');\n\nconst ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\n\nconst {proofs : {MINT_PROOF}} = utils;\nconst {JoinSplitProof, MintProof} = aztec;\n\ncontract('Test Aztec Privacy Protocol', accounts => {\n    const alice = secp256k1.generateAccount();\n    const bob = secp256k1.generateAccount();\n\n    it('Test Unilateral Transfer using Aztec protocol', async() => {\n        const ZkAssetMintableInstance = await ZkAssetMintable.deployed();\n  \n        console.log('Mint Aztec Note worth 100 for Alice');\n        const zeroValueNote = await aztec.note.createZeroValueNote();\n        const alice100Note = await aztec.note.create(alice.publicKey, 100);\n        const proof1 = new MintProof(zeroValueNote, alice100Note, [alice100Note], ZkAssetMintableInstance.address);\n        const data1 = proof1.encodeABI();\n        await ZkAssetMintableInstance.confidentialMint(MINT_PROOF, data1);\n\n        console.log('Transfer Aztec Note worth 25 from Alice to Bob');\n        const alice75Note = await aztec.note.create(alice.publicKey, 75);\n        const bob25Note = await aztec.note.create(bob.publicKey, 25);\n        const proof2 = new JoinSplitProof([alice100Note], [alice75Note, bob25Note], accounts[0], 0, accounts[0]);\n        const data2 = proof2.encodeABI(ZkAssetMintableInstance.address);\n        const signatures2 = proof2.constructSignatures(ZkAssetMintableInstance.address, [alice]);\n        await ZkAssetMintableInstance.confidentialTransfer(data2, signatures2);\n    });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571126124900
  },
  "{\"sourceRoot\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"filename\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocolWithERC20.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocolWithERC20.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocolWithERC20.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocolWithERC20.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
        "sourceFileName": "testAztecProtocolWithERC20.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _devUtils = _interopRequireDefault(require(\"@aztec/dev-utils\"));\n\nvar aztec = require('aztec.js');\n\nvar secp256k1 = require('@aztec/secp256k1');\n\nvar Ace = artifacts.require('./Ace.sol');\n\nvar ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\n\nvar ERC20Mintable = artifacts.require('./ERC20Mintable.sol');\n\nvar MINT_PROOF = _devUtils[\"default\"].proofs.MINT_PROOF;\nvar JoinSplitProof = aztec.JoinSplitProof,\n    MintProof = aztec.MintProof;\ncontract('Test Aztec Privacy Protocol with ERC20 tokens', function (accounts) {\n  it('Test Unilateral Transfer of ERC20 tokens using Aztec protocol',\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee() {\n    var AceInstance, ZkAssetMintableInstance, ERC20MintableInstance, aliceEthereumAccount, bobEthereumAccount, aliceAztecAccount, bobAztecAccount, transferAmount, zeroValueNote, alice0Note, alice25Note, proof2, data2, signatures2, bob0Note, proof3, data3, signatures3;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Ace.deployed();\n\n          case 2:\n            AceInstance = _context.sent;\n            _context.next = 5;\n            return ZkAssetMintable.deployed();\n\n          case 5:\n            ZkAssetMintableInstance = _context.sent;\n            _context.next = 8;\n            return ERC20Mintable.deployed();\n\n          case 8:\n            ERC20MintableInstance = _context.sent;\n            aliceEthereumAccount = accounts[1];\n            bobEthereumAccount = accounts[2];\n            aliceAztecAccount = secp256k1.generateAccount();\n            bobAztecAccount = secp256k1.generateAccount();\n            transferAmount = 25; //initialize\n\n            _context.next = 16;\n            return ERC20MintableInstance.mint(aliceEthereumAccount, 100);\n\n          case 16:\n            _context.next = 18;\n            return ERC20MintableInstance.mint(bobEthereumAccount, 0);\n\n          case 18:\n            _context.next = 20;\n            return aztec.note.createZeroValueNote();\n\n          case 20:\n            zeroValueNote = _context.sent;\n            _context.next = 23;\n            return aztec.note.create(aliceAztecAccount.publicKey, 0);\n\n          case 23:\n            alice0Note = _context.sent;\n            _context.next = 26;\n            return ZkAssetMintableInstance.confidentialMint(MINT_PROOF, new MintProof(zeroValueNote, alice0Note, [alice0Note], ZkAssetMintableInstance.address).encodeABI());\n\n          case 26:\n            _context.t0 = console;\n            _context.next = 29;\n            return ERC20MintableInstance.balanceOf(aliceEthereumAccount);\n\n          case 29:\n            _context.t1 = _context.sent;\n            _context.t2 = 'Alice\\'s balance : ' + _context.t1;\n\n            _context.t0.log.call(_context.t0, _context.t2);\n\n            _context.t3 = console;\n            _context.next = 35;\n            return ERC20MintableInstance.balanceOf(bobEthereumAccount);\n\n          case 35:\n            _context.t4 = _context.sent;\n            _context.t5 = 'Bob\\'s balance : ' + _context.t4;\n\n            _context.t3.log.call(_context.t3, _context.t5);\n\n            //step 1\n            console.log('Convert Alice\\'s ERC20 Tokens worth ' + transferAmount + ' to Alice\\'s Aztec Note worth ' + transferAmount);\n            _context.next = 41;\n            return aztec.note.create(aliceAztecAccount.publicKey, transferAmount);\n\n          case 41:\n            alice25Note = _context.sent;\n            proof2 = new JoinSplitProof([alice0Note], [alice25Note], accounts[0], -transferAmount, aliceEthereumAccount);\n            data2 = proof2.encodeABI(ZkAssetMintableInstance.address);\n            signatures2 = proof2.constructSignatures(ZkAssetMintableInstance.address, [aliceAztecAccount]);\n            _context.next = 47;\n            return ERC20MintableInstance.approve(AceInstance.address, transferAmount, {\n              from: aliceEthereumAccount\n            });\n\n          case 47:\n            _context.next = 49;\n            return AceInstance.publicApprove(ZkAssetMintableInstance.address, proof2.hash, transferAmount, {\n              from: aliceEthereumAccount\n            });\n\n          case 49:\n            _context.next = 51;\n            return ZkAssetMintableInstance.confidentialTransfer(data2, signatures2);\n\n          case 51:\n            _context.t6 = console;\n            _context.next = 54;\n            return ERC20MintableInstance.balanceOf(aliceEthereumAccount);\n\n          case 54:\n            _context.t7 = _context.sent;\n            _context.t8 = 'Alice\\'s balance : ' + _context.t7;\n\n            _context.t6.log.call(_context.t6, _context.t8);\n\n            _context.t9 = console;\n            _context.next = 60;\n            return ERC20MintableInstance.balanceOf(bobEthereumAccount);\n\n          case 60:\n            _context.t10 = _context.sent;\n            _context.t11 = 'Bob\\'s balance : ' + _context.t10;\n\n            _context.t9.log.call(_context.t9, _context.t11);\n\n            //step 2\n            console.log('Convert Alice\\'s Aztec Note worth ' + transferAmount + ' to Bob\\'s ERC20 Tokens worth ' + transferAmount);\n            _context.next = 66;\n            return aztec.note.create(bobAztecAccount.publicKey, 0);\n\n          case 66:\n            bob0Note = _context.sent;\n            proof3 = new JoinSplitProof([alice25Note], [bob0Note], accounts[0], transferAmount, bobEthereumAccount);\n            data3 = proof3.encodeABI(ZkAssetMintableInstance.address);\n            signatures3 = proof3.constructSignatures(ZkAssetMintableInstance.address, [aliceAztecAccount]);\n            _context.next = 72;\n            return ZkAssetMintableInstance.confidentialTransfer(data3, signatures3);\n\n          case 72:\n            _context.t12 = console;\n            _context.next = 75;\n            return ERC20MintableInstance.balanceOf(aliceEthereumAccount);\n\n          case 75:\n            _context.t13 = _context.sent;\n            _context.t14 = 'Alice\\'s balance : ' + _context.t13;\n\n            _context.t12.log.call(_context.t12, _context.t14);\n\n            _context.t15 = console;\n            _context.next = 81;\n            return ERC20MintableInstance.balanceOf(bobEthereumAccount);\n\n          case 81:\n            _context.t16 = _context.sent;\n            _context.t17 = 'Bob\\'s balance : ' + _context.t16;\n\n            _context.t15.log.call(_context.t15, _context.t17);\n\n          case 84:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "testAztecProtocolWithERC20.js"
      ],
      "names": [
        "aztec",
        "require",
        "secp256k1",
        "Ace",
        "artifacts",
        "ZkAssetMintable",
        "ERC20Mintable",
        "MINT_PROOF",
        "utils",
        "proofs",
        "JoinSplitProof",
        "MintProof",
        "contract",
        "accounts",
        "it",
        "deployed",
        "AceInstance",
        "ZkAssetMintableInstance",
        "ERC20MintableInstance",
        "aliceEthereumAccount",
        "bobEthereumAccount",
        "aliceAztecAccount",
        "generateAccount",
        "bobAztecAccount",
        "transferAmount",
        "mint",
        "note",
        "createZeroValueNote",
        "zeroValueNote",
        "create",
        "publicKey",
        "alice0Note",
        "confidentialMint",
        "address",
        "encodeABI",
        "console",
        "balanceOf",
        "log",
        "alice25Note",
        "proof2",
        "data2",
        "signatures2",
        "constructSignatures",
        "approve",
        "from",
        "publicApprove",
        "hash",
        "confidentialTransfer",
        "bob0Note",
        "proof3",
        "data3",
        "signatures3"
      ],
      "mappings": ";;;;;;;;AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AAEA,IAAME,GAAG,GAAGC,SAAS,CAACH,OAAV,CAAkB,WAAlB,CAAZ;;AACA,IAAMI,eAAe,GAAGD,SAAS,CAACH,OAAV,CAAkB,uBAAlB,CAAxB;;AACA,IAAMK,aAAa,GAAGF,SAAS,CAACH,OAAV,CAAkB,qBAAlB,CAAtB;;IAEiBM,U,GAAeC,oB,CAAzBC,M,CAAUF,U;IACVG,c,GAA6BV,K,CAA7BU,c;IAAgBC,S,GAAaX,K,CAAbW,S;AAEvBC,QAAQ,CAAC,+CAAD,EAAkD,UAAAC,QAAQ,EAAI;AAElEC,EAAAA,EAAE,CAAC,+DAAD;AAAA;AAAA;AAAA;AAAA,+BAAkE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGtCX,GAAG,CAACY,QAAJ,EAHsC;;AAAA;AAG1DC,YAAAA,WAH0D;AAAA;AAAA,mBAI1BX,eAAe,CAACU,QAAhB,EAJ0B;;AAAA;AAI1DE,YAAAA,uBAJ0D;AAAA;AAAA,mBAK5BX,aAAa,CAACS,QAAd,EAL4B;;AAAA;AAK1DG,YAAAA,qBAL0D;AAM1DC,YAAAA,oBAN0D,GAMnCN,QAAQ,CAAC,CAAD,CAN2B;AAO1DO,YAAAA,kBAP0D,GAOrCP,QAAQ,CAAC,CAAD,CAP6B;AAQ1DQ,YAAAA,iBAR0D,GAQtCnB,SAAS,CAACoB,eAAV,EARsC;AAS1DC,YAAAA,eAT0D,GASxCrB,SAAS,CAACoB,eAAV,EATwC;AAU1DE,YAAAA,cAV0D,GAUzC,EAVyC,EAYhE;;AAZgE;AAAA,mBAa1DN,qBAAqB,CAACO,IAAtB,CAA2BN,oBAA3B,EAAiD,GAAjD,CAb0D;;AAAA;AAAA;AAAA,mBAc1DD,qBAAqB,CAACO,IAAtB,CAA2BL,kBAA3B,EAA+C,CAA/C,CAd0D;;AAAA;AAAA;AAAA,mBAepCpB,KAAK,CAAC0B,IAAN,CAAWC,mBAAX,EAfoC;;AAAA;AAe1DC,YAAAA,aAf0D;AAAA;AAAA,mBAgBvC5B,KAAK,CAAC0B,IAAN,CAAWG,MAAX,CAAkBR,iBAAiB,CAACS,SAApC,EAA+C,CAA/C,CAhBuC;;AAAA;AAgB1DC,YAAAA,UAhB0D;AAAA;AAAA,mBAiB1Dd,uBAAuB,CAACe,gBAAxB,CAAyCzB,UAAzC,EAAqD,IAAII,SAAJ,CAAciB,aAAd,EAA6BG,UAA7B,EAAyC,CAACA,UAAD,CAAzC,EAAuDd,uBAAuB,CAACgB,OAA/E,EAAwFC,SAAxF,EAArD,CAjB0D;;AAAA;AAAA,0BAmBhEC,OAnBgE;AAAA;AAAA,mBAmBtBjB,qBAAqB,CAACkB,SAAtB,CAAgCjB,oBAAhC,CAnBsB;;AAAA;AAAA;AAAA,0BAmBpD,qBAnBoD;;AAAA,wBAmBxDkB,GAnBwD;;AAAA,0BAoBhEF,OApBgE;AAAA;AAAA,mBAoBxBjB,qBAAqB,CAACkB,SAAtB,CAAgChB,kBAAhC,CApBwB;;AAAA;AAAA;AAAA,0BAoBpD,mBApBoD;;AAAA,wBAoBxDiB,GApBwD;;AAsBhE;AACAF,YAAAA,OAAO,CAACE,GAAR,CAAY,yCAAyCb,cAAzC,GAA0D,gCAA1D,GAA6FA,cAAzG;AAvBgE;AAAA,mBAwBtCxB,KAAK,CAAC0B,IAAN,CAAWG,MAAX,CAAkBR,iBAAiB,CAACS,SAApC,EAA+CN,cAA/C,CAxBsC;;AAAA;AAwB1Dc,YAAAA,WAxB0D;AAyB1DC,YAAAA,MAzB0D,GAyBjD,IAAI7B,cAAJ,CAAmB,CAACqB,UAAD,CAAnB,EAAiC,CAACO,WAAD,CAAjC,EAAgDzB,QAAQ,CAAC,CAAD,CAAxD,EAA6D,CAACW,cAA9D,EAA8EL,oBAA9E,CAzBiD;AA0B1DqB,YAAAA,KA1B0D,GA0BlDD,MAAM,CAACL,SAAP,CAAiBjB,uBAAuB,CAACgB,OAAzC,CA1BkD;AA2B1DQ,YAAAA,WA3B0D,GA2B5CF,MAAM,CAACG,mBAAP,CAA2BzB,uBAAuB,CAACgB,OAAnD,EAA4D,CAACZ,iBAAD,CAA5D,CA3B4C;AAAA;AAAA,mBA4B1DH,qBAAqB,CAACyB,OAAtB,CAA8B3B,WAAW,CAACiB,OAA1C,EAAmDT,cAAnD,EAAmE;AAACoB,cAAAA,IAAI,EAAEzB;AAAP,aAAnE,CA5B0D;;AAAA;AAAA;AAAA,mBA6B1DH,WAAW,CAAC6B,aAAZ,CAA0B5B,uBAAuB,CAACgB,OAAlD,EAA2DM,MAAM,CAACO,IAAlE,EAAwEtB,cAAxE,EAAwF;AAACoB,cAAAA,IAAI,EAACzB;AAAN,aAAxF,CA7B0D;;AAAA;AAAA;AAAA,mBA8B1DF,uBAAuB,CAAC8B,oBAAxB,CAA6CP,KAA7C,EAAoDC,WAApD,CA9B0D;;AAAA;AAAA,0BAgChEN,OAhCgE;AAAA;AAAA,mBAgCtBjB,qBAAqB,CAACkB,SAAtB,CAAgCjB,oBAAhC,CAhCsB;;AAAA;AAAA;AAAA,0BAgCpD,qBAhCoD;;AAAA,wBAgCxDkB,GAhCwD;;AAAA,0BAiChEF,OAjCgE;AAAA;AAAA,mBAiCxBjB,qBAAqB,CAACkB,SAAtB,CAAgChB,kBAAhC,CAjCwB;;AAAA;AAAA;AAAA,2BAiCpD,mBAjCoD;;AAAA,wBAiCxDiB,GAjCwD;;AAmChE;AACAF,YAAAA,OAAO,CAACE,GAAR,CAAY,uCAAuCb,cAAvC,GAAwD,gCAAxD,GAA2FA,cAAvG;AApCgE;AAAA,mBAqCzCxB,KAAK,CAAC0B,IAAN,CAAWG,MAAX,CAAkBN,eAAe,CAACO,SAAlC,EAA6C,CAA7C,CArCyC;;AAAA;AAqC1DkB,YAAAA,QArC0D;AAsC1DC,YAAAA,MAtC0D,GAsCjD,IAAIvC,cAAJ,CAAmB,CAAC4B,WAAD,CAAnB,EAAkC,CAACU,QAAD,CAAlC,EAA8CnC,QAAQ,CAAC,CAAD,CAAtD,EAA2DW,cAA3D,EAA2EJ,kBAA3E,CAtCiD;AAuC1D8B,YAAAA,KAvC0D,GAuClDD,MAAM,CAACf,SAAP,CAAiBjB,uBAAuB,CAACgB,OAAzC,CAvCkD;AAwC1DkB,YAAAA,WAxC0D,GAwC5CF,MAAM,CAACP,mBAAP,CAA2BzB,uBAAuB,CAACgB,OAAnD,EAA4D,CAACZ,iBAAD,CAA5D,CAxC4C;AAAA;AAAA,mBAyC1DJ,uBAAuB,CAAC8B,oBAAxB,CAA6CG,KAA7C,EAAoDC,WAApD,CAzC0D;;AAAA;AAAA,2BA2ChEhB,OA3CgE;AAAA;AAAA,mBA2CtBjB,qBAAqB,CAACkB,SAAtB,CAAgCjB,oBAAhC,CA3CsB;;AAAA;AAAA;AAAA,2BA2CpD,qBA3CoD;;AAAA,yBA2CxDkB,GA3CwD;;AAAA,2BA4ChEF,OA5CgE;AAAA;AAAA,mBA4CxBjB,qBAAqB,CAACkB,SAAtB,CAAgChB,kBAAhC,CA5CwB;;AAAA;AAAA;AAAA,2BA4CpD,mBA5CoD;;AAAA,yBA4CxDiB,GA5CwD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlE,GAAF;AA8CH,CAhDO,CAAR",
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "sourcesContent": [
        "import utils from '@aztec/dev-utils';\n\nconst aztec = require('aztec.js');\nconst secp256k1 = require('@aztec/secp256k1');\n\nconst Ace = artifacts.require('./Ace.sol');\nconst ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\nconst ERC20Mintable = artifacts.require('./ERC20Mintable.sol');\n\nconst {proofs : {MINT_PROOF}} = utils;\nconst {JoinSplitProof, MintProof} = aztec;\n\ncontract('Test Aztec Privacy Protocol with ERC20 tokens', accounts => {\n\n    it('Test Unilateral Transfer of ERC20 tokens using Aztec protocol', async() => {\n\n        //setup\n        const AceInstance = await Ace.deployed();\n        const ZkAssetMintableInstance = await ZkAssetMintable.deployed();\n        const ERC20MintableInstance = await ERC20Mintable.deployed();\n        const aliceEthereumAccount = accounts[1];\n        const bobEthereumAccount = accounts[2];\n        const aliceAztecAccount = secp256k1.generateAccount();\n        const bobAztecAccount = secp256k1.generateAccount();\n        const transferAmount = 25;\n\n        //initialize\n        await ERC20MintableInstance.mint(aliceEthereumAccount, 100);\n        await ERC20MintableInstance.mint(bobEthereumAccount, 0);\n        const zeroValueNote = await aztec.note.createZeroValueNote();\n        const alice0Note = await aztec.note.create(aliceAztecAccount.publicKey, 0);\n        await ZkAssetMintableInstance.confidentialMint(MINT_PROOF, new MintProof(zeroValueNote, alice0Note, [alice0Note], ZkAssetMintableInstance.address).encodeABI());\n\n        console.log('Alice\\'s balance : ' + await ERC20MintableInstance.balanceOf(aliceEthereumAccount));\n        console.log('Bob\\'s balance : ' + await ERC20MintableInstance.balanceOf(bobEthereumAccount));\n\n        //step 1\n        console.log('Convert Alice\\'s ERC20 Tokens worth ' + transferAmount + ' to Alice\\'s Aztec Note worth ' + transferAmount);\n        const alice25Note = await aztec.note.create(aliceAztecAccount.publicKey, transferAmount);\n        const proof2 = new JoinSplitProof([alice0Note], [alice25Note], accounts[0], -transferAmount, aliceEthereumAccount);\n        const data2 = proof2.encodeABI(ZkAssetMintableInstance.address);\n        const signatures2 = proof2.constructSignatures(ZkAssetMintableInstance.address, [aliceAztecAccount]);\n        await ERC20MintableInstance.approve(AceInstance.address, transferAmount, {from: aliceEthereumAccount});\n        await AceInstance.publicApprove(ZkAssetMintableInstance.address, proof2.hash, transferAmount, {from:aliceEthereumAccount});\n        await ZkAssetMintableInstance.confidentialTransfer(data2, signatures2);\n\n        console.log('Alice\\'s balance : ' + await ERC20MintableInstance.balanceOf(aliceEthereumAccount));\n        console.log('Bob\\'s balance : ' + await ERC20MintableInstance.balanceOf(bobEthereumAccount));\n\n        //step 2\n        console.log('Convert Alice\\'s Aztec Note worth ' + transferAmount + ' to Bob\\'s ERC20 Tokens worth ' + transferAmount);\n        const bob0Note = await aztec.note.create(bobAztecAccount.publicKey, 0);\n        const proof3 = new JoinSplitProof([alice25Note], [bob0Note], accounts[0], transferAmount, bobEthereumAccount);\n        const data3 = proof3.encodeABI(ZkAssetMintableInstance.address);\n        const signatures3 = proof3.constructSignatures(ZkAssetMintableInstance.address, [aliceAztecAccount]);\n        await ZkAssetMintableInstance.confidentialTransfer(data3, signatures3);\n\n        console.log('Alice\\'s balance : ' + await ERC20MintableInstance.balanceOf(aliceEthereumAccount));\n        console.log('Bob\\'s balance : ' + await ERC20MintableInstance.balanceOf(bobEthereumAccount));\n    });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571131768509
  }
}