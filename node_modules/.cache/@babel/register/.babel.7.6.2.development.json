{
  "{\"sourceRoot\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"filename\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test/demo.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/demo.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/demo.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/demo.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
        "sourceFileName": "demo.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _devUtils = _interopRequireDefault(require(\"@aztec/dev-utils\"));\n\nvar aztec = require('aztec.js');\n\nvar secp256k1 = require('@aztec/secp256k1');\n\nvar ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\n\nvar MINT_PROOF = _devUtils[\"default\"].proofs.MINT_PROOF;\nvar JoinSplitProof = aztec.JoinSplitProof,\n    MintProof = aztec.MintProof;\ncontract('Test Aztec Privacy Protocol', function (accounts) {\n  var bob = secp256k1.generateAccount();\n  var sally = secp256k1.generateAccount();\n  it('Simulate Minting and Unilateral Transfer',\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee() {\n    var ZkAssetMintableInstance, bobNote1, currentTotalValueNote, newTotalValueNote, mintedNotes, senderForMinting, mintProof, mintData, mint, bobNote2, sallyNote1, inputNotes, outputNotes, senderForTransfer, publicValue, publicOwner, sendProof, sendProofData, sendProofSignatures, transfer;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ZkAssetMintable.deployed();\n\n          case 2:\n            ZkAssetMintableInstance = _context.sent;\n            console.log('Give Bob notes worth 100');\n            _context.next = 6;\n            return aztec.note.create(bob.publicKey, 100);\n\n          case 6:\n            bobNote1 = _context.sent;\n            _context.next = 9;\n            return aztec.note.createZeroValueNote();\n\n          case 9:\n            currentTotalValueNote = _context.sent;\n            newTotalValueNote = bobNote1;\n            mintedNotes = [bobNote1];\n            senderForMinting = ZkAssetMintableInstance.address;\n            mintProof = new MintProof(currentTotalValueNote, newTotalValueNote, mintedNotes, senderForMinting);\n            mintData = mintProof.encodeABI();\n            _context.next = 17;\n            return ZkAssetMintableInstance.confidentialMint(MINT_PROOF, mintData);\n\n          case 17:\n            mint = _context.sent;\n            console.log(mint.logs);\n            console.log('Successfully given notes worth 100 to Bob');\n            console.log('Transfer notes worth 25 from Bob to Sally');\n            _context.next = 23;\n            return aztec.note.create(bob.publicKey, 75);\n\n          case 23:\n            bobNote2 = _context.sent;\n            _context.next = 26;\n            return aztec.note.create(sally.publicKey, 25);\n\n          case 26:\n            sallyNote1 = _context.sent;\n            inputNotes = [bobNote1];\n            outputNotes = [bobNote2, sallyNote1];\n            senderForTransfer = accounts[0];\n            publicValue = 0;\n            publicOwner = bob.address;\n            sendProof = new JoinSplitProof(inputNotes, outputNotes, senderForTransfer, publicValue, publicOwner);\n            sendProofData = sendProof.encodeABI(ZkAssetMintableInstance.address);\n            sendProofSignatures = sendProof.constructSignatures(ZkAssetMintableInstance.address, [bob]);\n            _context.next = 37;\n            return ZkAssetMintableInstance.confidentialTransfer(sendProofData, sendProofSignatures);\n\n          case 37:\n            transfer = _context.sent;\n            console.log(transfer.logs);\n            console.log('Successfully transferred notes worth 25 from Bob to Sally');\n\n          case 40:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlbW8uanMiXSwibmFtZXMiOlsiYXp0ZWMiLCJyZXF1aXJlIiwic2VjcDI1NmsxIiwiWmtBc3NldE1pbnRhYmxlIiwiYXJ0aWZhY3RzIiwiTUlOVF9QUk9PRiIsInV0aWxzIiwicHJvb2ZzIiwiSm9pblNwbGl0UHJvb2YiLCJNaW50UHJvb2YiLCJjb250cmFjdCIsImFjY291bnRzIiwiYm9iIiwiZ2VuZXJhdGVBY2NvdW50Iiwic2FsbHkiLCJpdCIsImRlcGxveWVkIiwiWmtBc3NldE1pbnRhYmxlSW5zdGFuY2UiLCJjb25zb2xlIiwibG9nIiwibm90ZSIsImNyZWF0ZSIsInB1YmxpY0tleSIsImJvYk5vdGUxIiwiY3JlYXRlWmVyb1ZhbHVlTm90ZSIsImN1cnJlbnRUb3RhbFZhbHVlTm90ZSIsIm5ld1RvdGFsVmFsdWVOb3RlIiwibWludGVkTm90ZXMiLCJzZW5kZXJGb3JNaW50aW5nIiwiYWRkcmVzcyIsIm1pbnRQcm9vZiIsIm1pbnREYXRhIiwiZW5jb2RlQUJJIiwiY29uZmlkZW50aWFsTWludCIsIm1pbnQiLCJsb2dzIiwiYm9iTm90ZTIiLCJzYWxseU5vdGUxIiwiaW5wdXROb3RlcyIsIm91dHB1dE5vdGVzIiwic2VuZGVyRm9yVHJhbnNmZXIiLCJwdWJsaWNWYWx1ZSIsInB1YmxpY093bmVyIiwic2VuZFByb29mIiwic2VuZFByb29mRGF0YSIsInNlbmRQcm9vZlNpZ25hdHVyZXMiLCJjb25zdHJ1Y3RTaWduYXR1cmVzIiwiY29uZmlkZW50aWFsVHJhbnNmZXIiLCJ0cmFuc2ZlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFFQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXJCOztBQUNBLElBQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLGtCQUFELENBQXpCOztBQUVBLElBQU1FLGVBQWUsR0FBR0MsU0FBUyxDQUFDSCxPQUFWLENBQWtCLHVCQUFsQixDQUF4Qjs7SUFDaUJJLFUsR0FBZUMsb0IsQ0FBekJDLE0sQ0FB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QUF0RCxFQUErRCxDQUFDakIsR0FBRCxDQUEvRCxDQXpCZTtBQUFBO0FBQUEsbUJBMEJwQkssdUJBQXVCLENBQUM4QixvQkFBeEIsQ0FBNkNILGFBQTdDLEVBQTREQyxtQkFBNUQsQ0ExQm9COztBQUFBO0FBMEJyQ0csWUFBQUEsUUExQnFDO0FBMkIzQzlCLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZNkIsUUFBUSxDQUFDYixJQUFyQjtBQUNBakIsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkRBQVo7O0FBNUIyQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUE3QyxHQUFGO0FBOEJILENBbENPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3V0a21haGVzaHdhcmkyNDUvV29yay9Qcm9qZWN0cy9teUF6dGVjL3Rlc3QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXRpbHMgZnJvbSAnQGF6dGVjL2Rldi11dGlscyc7XG5cbmNvbnN0IGF6dGVjID0gcmVxdWlyZSgnYXp0ZWMuanMnKTtcbmNvbnN0IHNlY3AyNTZrMSA9IHJlcXVpcmUoJ0BhenRlYy9zZWNwMjU2azEnKTtcblxuY29uc3QgWmtBc3NldE1pbnRhYmxlID0gYXJ0aWZhY3RzLnJlcXVpcmUoJy4vWmtBc3NldE1pbnRhYmxlLnNvbCcpO1xuY29uc3Qge3Byb29mcyA6IHtNSU5UX1BST09GfX0gPSB1dGlscztcbmNvbnN0IHtKb2luU3BsaXRQcm9vZiwgTWludFByb29mfSA9IGF6dGVjO1xuXG5jb250cmFjdCgnVGVzdCBBenRlYyBQcml2YWN5IFByb3RvY29sJywgYWNjb3VudHMgPT4ge1xuICAgIGNvbnN0IGJvYiA9IHNlY3AyNTZrMS5nZW5lcmF0ZUFjY291bnQoKTtcbiAgICBjb25zdCBzYWxseSA9IHNlY3AyNTZrMS5nZW5lcmF0ZUFjY291bnQoKTtcblxuICAgIGl0KCdTaW11bGF0ZSBNaW50aW5nIGFuZCBVbmlsYXRlcmFsIFRyYW5zZmVyJywgYXN5bmMoKSA9PiB7XG4gICAgICAgIGNvbnN0IFprQXNzZXRNaW50YWJsZUluc3RhbmNlID0gYXdhaXQgWmtBc3NldE1pbnRhYmxlLmRlcGxveWVkKCk7XG4gIFxuICAgICAgICBjb25zb2xlLmxvZygnR2l2ZSBCb2Igbm90ZXMgd29ydGggMTAwJyk7XG4gICAgICAgIGNvbnN0IGJvYk5vdGUxID0gYXdhaXQgYXp0ZWMubm90ZS5jcmVhdGUoYm9iLnB1YmxpY0tleSwgMTAwKTtcbiAgICAgICAgY29uc3QgY3VycmVudFRvdGFsVmFsdWVOb3RlID0gYXdhaXQgYXp0ZWMubm90ZS5jcmVhdGVaZXJvVmFsdWVOb3RlKCk7XG4gICAgICAgIGNvbnN0IG5ld1RvdGFsVmFsdWVOb3RlID0gYm9iTm90ZTE7XG4gICAgICAgIGNvbnN0IG1pbnRlZE5vdGVzID0gW2JvYk5vdGUxXTtcbiAgICAgICAgY29uc3Qgc2VuZGVyRm9yTWludGluZyA9IFprQXNzZXRNaW50YWJsZUluc3RhbmNlLmFkZHJlc3M7XG4gICAgICAgIGNvbnN0IG1pbnRQcm9vZiA9IG5ldyBNaW50UHJvb2YoY3VycmVudFRvdGFsVmFsdWVOb3RlLCBuZXdUb3RhbFZhbHVlTm90ZSwgbWludGVkTm90ZXMsIHNlbmRlckZvck1pbnRpbmcpO1xuICAgICAgICBjb25zdCBtaW50RGF0YSA9IG1pbnRQcm9vZi5lbmNvZGVBQkkoKTtcbiAgICAgICAgY29uc3QgbWludCA9IGF3YWl0IFprQXNzZXRNaW50YWJsZUluc3RhbmNlLmNvbmZpZGVudGlhbE1pbnQoTUlOVF9QUk9PRiwgbWludERhdGEpO1xuICAgICAgICBjb25zb2xlLmxvZyhtaW50LmxvZ3MpO1xuICAgICAgICBjb25zb2xlLmxvZygnU3VjY2Vzc2Z1bGx5IGdpdmVuIG5vdGVzIHdvcnRoIDEwMCB0byBCb2InKTtcblxuICAgICAgICBjb25zb2xlLmxvZygnVHJhbnNmZXIgbm90ZXMgd29ydGggMjUgZnJvbSBCb2IgdG8gU2FsbHknKTtcbiAgICAgICAgY29uc3QgYm9iTm90ZTIgPSBhd2FpdCBhenRlYy5ub3RlLmNyZWF0ZShib2IucHVibGljS2V5LCA3NSk7XG4gICAgICAgIGNvbnN0IHNhbGx5Tm90ZTEgPSBhd2FpdCBhenRlYy5ub3RlLmNyZWF0ZShzYWxseS5wdWJsaWNLZXksIDI1KTtcbiAgICAgICAgY29uc3QgaW5wdXROb3RlcyA9IFtib2JOb3RlMV07XG4gICAgICAgIGNvbnN0IG91dHB1dE5vdGVzID0gW2JvYk5vdGUyLCBzYWxseU5vdGUxXTtcbiAgICAgICAgY29uc3Qgc2VuZGVyRm9yVHJhbnNmZXIgPSBhY2NvdW50c1swXTtcbiAgICAgICAgY29uc3QgcHVibGljVmFsdWUgPSAwO1xuICAgICAgICBjb25zdCBwdWJsaWNPd25lciA9IGJvYi5hZGRyZXNzO1xuICAgICAgICBjb25zdCBzZW5kUHJvb2YgPSBuZXcgSm9pblNwbGl0UHJvb2YoaW5wdXROb3Rlcywgb3V0cHV0Tm90ZXMsIHNlbmRlckZvclRyYW5zZmVyLCBwdWJsaWNWYWx1ZSwgcHVibGljT3duZXIpO1xuICAgICAgICBjb25zdCBzZW5kUHJvb2ZEYXRhID0gc2VuZFByb29mLmVuY29kZUFCSShaa0Fzc2V0TWludGFibGVJbnN0YW5jZS5hZGRyZXNzKTtcbiAgICAgICAgY29uc3Qgc2VuZFByb29mU2lnbmF0dXJlcyA9IHNlbmRQcm9vZi5jb25zdHJ1Y3RTaWduYXR1cmVzKFprQXNzZXRNaW50YWJsZUluc3RhbmNlLmFkZHJlc3MsIFtib2JdKTtcbiAgICAgICAgY29uc3QgdHJhbnNmZXIgPSBhd2FpdCBaa0Fzc2V0TWludGFibGVJbnN0YW5jZS5jb25maWRlbnRpYWxUcmFuc2ZlcihzZW5kUHJvb2ZEYXRhLCBzZW5kUHJvb2ZTaWduYXR1cmVzKTtcbiAgICAgICAgY29uc29sZS5sb2codHJhbnNmZXIubG9ncyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdTdWNjZXNzZnVsbHkgdHJhbnNmZXJyZWQgbm90ZXMgd29ydGggMjUgZnJvbSBCb2IgdG8gU2FsbHknKTtcbiAgICB9KTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "demo.js"
      ],
      "names": [
        "aztec",
        "require",
        "secp256k1",
        "ZkAssetMintable",
        "artifacts",
        "MINT_PROOF",
        "utils",
        "proofs",
        "JoinSplitProof",
        "MintProof",
        "contract",
        "accounts",
        "bob",
        "generateAccount",
        "sally",
        "it",
        "deployed",
        "ZkAssetMintableInstance",
        "console",
        "log",
        "note",
        "create",
        "publicKey",
        "bobNote1",
        "createZeroValueNote",
        "currentTotalValueNote",
        "newTotalValueNote",
        "mintedNotes",
        "senderForMinting",
        "address",
        "mintProof",
        "mintData",
        "encodeABI",
        "confidentialMint",
        "mint",
        "logs",
        "bobNote2",
        "sallyNote1",
        "inputNotes",
        "outputNotes",
        "senderForTransfer",
        "publicValue",
        "publicOwner",
        "sendProof",
        "sendProofData",
        "sendProofSignatures",
        "constructSignatures",
        "confidentialTransfer",
        "transfer"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "sourcesContent": [
        "import utils from '@aztec/dev-utils';\n\nconst aztec = require('aztec.js');\nconst secp256k1 = require('@aztec/secp256k1');\n\nconst ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\nconst {proofs : {MINT_PROOF}} = utils;\nconst {JoinSplitProof, MintProof} = aztec;\n\ncontract('Test Aztec Privacy Protocol', accounts => {\n    const bob = secp256k1.generateAccount();\n    const sally = secp256k1.generateAccount();\n\n    it('Simulate Minting and Unilateral Transfer', async() => {\n        const ZkAssetMintableInstance = await ZkAssetMintable.deployed();\n  \n        console.log('Give Bob notes worth 100');\n        const bobNote1 = await aztec.note.create(bob.publicKey, 100);\n        const currentTotalValueNote = await aztec.note.createZeroValueNote();\n        const newTotalValueNote = bobNote1;\n        const mintedNotes = [bobNote1];\n        const senderForMinting = ZkAssetMintableInstance.address;\n        const mintProof = new MintProof(currentTotalValueNote, newTotalValueNote, mintedNotes, senderForMinting);\n        const mintData = mintProof.encodeABI();\n        const mint = await ZkAssetMintableInstance.confidentialMint(MINT_PROOF, mintData);\n        console.log(mint.logs);\n        console.log('Successfully given notes worth 100 to Bob');\n\n        console.log('Transfer notes worth 25 from Bob to Sally');\n        const bobNote2 = await aztec.note.create(bob.publicKey, 75);\n        const sallyNote1 = await aztec.note.create(sally.publicKey, 25);\n        const inputNotes = [bobNote1];\n        const outputNotes = [bobNote2, sallyNote1];\n        const senderForTransfer = accounts[0];\n        const publicValue = 0;\n        const publicOwner = bob.address;\n        const sendProof = new JoinSplitProof(inputNotes, outputNotes, senderForTransfer, publicValue, publicOwner);\n        const sendProofData = sendProof.encodeABI(ZkAssetMintableInstance.address);\n        const sendProofSignatures = sendProof.constructSignatures(ZkAssetMintableInstance.address, [bob]);\n        const transfer = await ZkAssetMintableInstance.confidentialTransfer(sendProofData, sendProofSignatures);\n        console.log(transfer.logs);\n        console.log('Successfully transferred notes worth 25 from Bob to Sally');\n    });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570089452477
  }
}