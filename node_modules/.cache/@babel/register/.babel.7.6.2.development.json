{
  "{\"sourceRoot\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"filename\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocol.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocol.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocol.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocol.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
        "sourceFileName": "testAztecProtocol.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _devUtils = _interopRequireDefault(require(\"@aztec/dev-utils\"));\n\nvar aztec = require('aztec.js');\n\nvar secp256k1 = require('@aztec/secp256k1');\n\nvar ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\n\nvar MINT_PROOF = _devUtils[\"default\"].proofs.MINT_PROOF;\nvar JoinSplitProof = aztec.JoinSplitProof,\n    MintProof = aztec.MintProof;\ncontract('Test Aztec Privacy Protocol', function (accounts) {\n  var alice = secp256k1.generateAccount();\n  var bob = secp256k1.generateAccount();\n  it('Simulate Minting and Unilateral Transfer',\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee() {\n    var ZkAssetMintableInstance, zeroValueNote, alice100Note, mintProof, mintData, mint, alice75Note, bob25Note, sendProof, sendProofData, sendProofSignatures, transfer;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ZkAssetMintable.deployed();\n\n          case 2:\n            ZkAssetMintableInstance = _context.sent;\n            console.log('Give Alice notes worth 100');\n            _context.next = 6;\n            return aztec.note.createZeroValueNote();\n\n          case 6:\n            zeroValueNote = _context.sent;\n            _context.next = 9;\n            return aztec.note.create(alice.publicKey, 100);\n\n          case 9:\n            alice100Note = _context.sent;\n            mintProof = new MintProof(zeroValueNote, alice100Note, [alice100Note], ZkAssetMintableInstance.address);\n            mintData = mintProof.encodeABI();\n            _context.next = 14;\n            return ZkAssetMintableInstance.confidentialMint(MINT_PROOF, mintData);\n\n          case 14:\n            mint = _context.sent;\n            console.log(mint.receipt);\n            console.log('Successfully given notes worth 100 to Alice');\n            console.log('Transfer notes worth 25 from Alice to Bob');\n            _context.next = 20;\n            return aztec.note.create(alice.publicKey, 75);\n\n          case 20:\n            alice75Note = _context.sent;\n            _context.next = 23;\n            return aztec.note.create(bob.publicKey, 25);\n\n          case 23:\n            bob25Note = _context.sent;\n            sendProof = new JoinSplitProof([alice100Note], [alice75Note, bob25Note], accounts[0], 0, accounts[0]);\n            sendProofData = sendProof.encodeABI(ZkAssetMintableInstance.address);\n            sendProofSignatures = sendProof.constructSignatures(ZkAssetMintableInstance.address, [alice]);\n            _context.next = 29;\n            return ZkAssetMintableInstance.confidentialTransfer(sendProofData, sendProofSignatures);\n\n          case 29:\n            transfer = _context.sent;\n            console.log(transfer.receipt);\n            console.log('Successfully transferred notes worth 25 from Alice to Bob');\n\n          case 32:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3RBenRlY1Byb3RvY29sLmpzIl0sIm5hbWVzIjpbImF6dGVjIiwicmVxdWlyZSIsInNlY3AyNTZrMSIsIlprQXNzZXRNaW50YWJsZSIsImFydGlmYWN0cyIsIk1JTlRfUFJPT0YiLCJ1dGlscyIsInByb29mcyIsIkpvaW5TcGxpdFByb29mIiwiTWludFByb29mIiwiY29udHJhY3QiLCJhY2NvdW50cyIsImFsaWNlIiwiZ2VuZXJhdGVBY2NvdW50IiwiYm9iIiwiaXQiLCJkZXBsb3llZCIsIlprQXNzZXRNaW50YWJsZUluc3RhbmNlIiwiY29uc29sZSIsImxvZyIsIm5vdGUiLCJjcmVhdGVaZXJvVmFsdWVOb3RlIiwiemVyb1ZhbHVlTm90ZSIsImNyZWF0ZSIsInB1YmxpY0tleSIsImFsaWNlMTAwTm90ZSIsIm1pbnRQcm9vZiIsImFkZHJlc3MiLCJtaW50RGF0YSIsImVuY29kZUFCSSIsImNvbmZpZGVudGlhbE1pbnQiLCJtaW50IiwicmVjZWlwdCIsImFsaWNlNzVOb3RlIiwiYm9iMjVOb3RlIiwic2VuZFByb29mIiwic2VuZFByb29mRGF0YSIsInNlbmRQcm9vZlNpZ25hdHVyZXMiLCJjb25zdHJ1Y3RTaWduYXR1cmVzIiwiY29uZmlkZW50aWFsVHJhbnNmZXIiLCJ0cmFuc2ZlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFFQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXJCOztBQUNBLElBQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLGtCQUFELENBQXpCOztBQUVBLElBQU1FLGVBQWUsR0FBR0MsU0FBUyxDQUFDSCxPQUFWLENBQWtCLHVCQUFsQixDQUF4Qjs7SUFDaUJJLFUsR0FBZUMsb0IsQ0FBekJDLE0sQ0FBVUYsVTtJQUNWRyxjLEdBQTZCUixLLENBQTdCUSxjO0lBQWdCQyxTLEdBQWFULEssQ0FBYlMsUztBQUV2QkMsUUFBUSxDQUFDLDZCQUFELEVBQWdDLFVBQUFDLFFBQVEsRUFBSTtBQUNoRCxNQUFNQyxLQUFLLEdBQUdWLFNBQVMsQ0FBQ1csZUFBVixFQUFkO0FBQ0EsTUFBTUMsR0FBRyxHQUFHWixTQUFTLENBQUNXLGVBQVYsRUFBWjtBQUVBRSxFQUFBQSxFQUFFLENBQUMsMENBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQkFBNkM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFDTFosZUFBZSxDQUFDYSxRQUFoQixFQURLOztBQUFBO0FBQ3JDQyxZQUFBQSx1QkFEcUM7QUFHM0NDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDRCQUFaO0FBSDJDO0FBQUEsbUJBSWZuQixLQUFLLENBQUNvQixJQUFOLENBQVdDLG1CQUFYLEVBSmU7O0FBQUE7QUFJckNDLFlBQUFBLGFBSnFDO0FBQUE7QUFBQSxtQkFLaEJ0QixLQUFLLENBQUNvQixJQUFOLENBQVdHLE1BQVgsQ0FBa0JYLEtBQUssQ0FBQ1ksU0FBeEIsRUFBbUMsR0FBbkMsQ0FMZ0I7O0FBQUE7QUFLckNDLFlBQUFBLFlBTHFDO0FBTXJDQyxZQUFBQSxTQU5xQyxHQU16QixJQUFJakIsU0FBSixDQUFjYSxhQUFkLEVBQTZCRyxZQUE3QixFQUEyQyxDQUFDQSxZQUFELENBQTNDLEVBQTJEUix1QkFBdUIsQ0FBQ1UsT0FBbkYsQ0FOeUI7QUFPckNDLFlBQUFBLFFBUHFDLEdBTzFCRixTQUFTLENBQUNHLFNBQVYsRUFQMEI7QUFBQTtBQUFBLG1CQVF4QlosdUJBQXVCLENBQUNhLGdCQUF4QixDQUF5Q3pCLFVBQXpDLEVBQXFEdUIsUUFBckQsQ0FSd0I7O0FBQUE7QUFRckNHLFlBQUFBLElBUnFDO0FBUzNDYixZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVksSUFBSSxDQUFDQyxPQUFqQjtBQUNBZCxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSw2Q0FBWjtBQUVBRCxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwyQ0FBWjtBQVoyQztBQUFBLG1CQWFqQm5CLEtBQUssQ0FBQ29CLElBQU4sQ0FBV0csTUFBWCxDQUFrQlgsS0FBSyxDQUFDWSxTQUF4QixFQUFtQyxFQUFuQyxDQWJpQjs7QUFBQTtBQWFyQ1MsWUFBQUEsV0FicUM7QUFBQTtBQUFBLG1CQWNuQmpDLEtBQUssQ0FBQ29CLElBQU4sQ0FBV0csTUFBWCxDQUFrQlQsR0FBRyxDQUFDVSxTQUF0QixFQUFpQyxFQUFqQyxDQWRtQjs7QUFBQTtBQWNyQ1UsWUFBQUEsU0FkcUM7QUFlckNDLFlBQUFBLFNBZnFDLEdBZXpCLElBQUkzQixjQUFKLENBQW1CLENBQUNpQixZQUFELENBQW5CLEVBQW1DLENBQUNRLFdBQUQsRUFBY0MsU0FBZCxDQUFuQyxFQUE2RHZCLFFBQVEsQ0FBQyxDQUFELENBQXJFLEVBQTBFLENBQTFFLEVBQTZFQSxRQUFRLENBQUMsQ0FBRCxDQUFyRixDQWZ5QjtBQWdCckN5QixZQUFBQSxhQWhCcUMsR0FnQnJCRCxTQUFTLENBQUNOLFNBQVYsQ0FBb0JaLHVCQUF1QixDQUFDVSxPQUE1QyxDQWhCcUI7QUFpQnJDVSxZQUFBQSxtQkFqQnFDLEdBaUJmRixTQUFTLENBQUNHLG1CQUFWLENBQThCckIsdUJBQXVCLENBQUNVLE9BQXRELEVBQStELENBQUNmLEtBQUQsQ0FBL0QsQ0FqQmU7QUFBQTtBQUFBLG1CQWtCcEJLLHVCQUF1QixDQUFDc0Isb0JBQXhCLENBQTZDSCxhQUE3QyxFQUE0REMsbUJBQTVELENBbEJvQjs7QUFBQTtBQWtCckNHLFlBQUFBLFFBbEJxQztBQW1CM0N0QixZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWXFCLFFBQVEsQ0FBQ1IsT0FBckI7QUFDQWQsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkRBQVo7O0FBcEIyQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUE3QyxHQUFGO0FBc0JILENBMUJPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3V0a21haGVzaHdhcmkyNDUvV29yay9Qcm9qZWN0cy9teUF6dGVjL3Rlc3QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXRpbHMgZnJvbSAnQGF6dGVjL2Rldi11dGlscyc7XG5cbmNvbnN0IGF6dGVjID0gcmVxdWlyZSgnYXp0ZWMuanMnKTtcbmNvbnN0IHNlY3AyNTZrMSA9IHJlcXVpcmUoJ0BhenRlYy9zZWNwMjU2azEnKTtcblxuY29uc3QgWmtBc3NldE1pbnRhYmxlID0gYXJ0aWZhY3RzLnJlcXVpcmUoJy4vWmtBc3NldE1pbnRhYmxlLnNvbCcpO1xuY29uc3Qge3Byb29mcyA6IHtNSU5UX1BST09GfX0gPSB1dGlscztcbmNvbnN0IHtKb2luU3BsaXRQcm9vZiwgTWludFByb29mfSA9IGF6dGVjO1xuXG5jb250cmFjdCgnVGVzdCBBenRlYyBQcml2YWN5IFByb3RvY29sJywgYWNjb3VudHMgPT4ge1xuICAgIGNvbnN0IGFsaWNlID0gc2VjcDI1NmsxLmdlbmVyYXRlQWNjb3VudCgpO1xuICAgIGNvbnN0IGJvYiA9IHNlY3AyNTZrMS5nZW5lcmF0ZUFjY291bnQoKTtcblxuICAgIGl0KCdTaW11bGF0ZSBNaW50aW5nIGFuZCBVbmlsYXRlcmFsIFRyYW5zZmVyJywgYXN5bmMoKSA9PiB7XG4gICAgICAgIGNvbnN0IFprQXNzZXRNaW50YWJsZUluc3RhbmNlID0gYXdhaXQgWmtBc3NldE1pbnRhYmxlLmRlcGxveWVkKCk7XG4gIFxuICAgICAgICBjb25zb2xlLmxvZygnR2l2ZSBBbGljZSBub3RlcyB3b3J0aCAxMDAnKTtcbiAgICAgICAgY29uc3QgemVyb1ZhbHVlTm90ZSA9IGF3YWl0IGF6dGVjLm5vdGUuY3JlYXRlWmVyb1ZhbHVlTm90ZSgpO1xuICAgICAgICBjb25zdCBhbGljZTEwME5vdGUgPSBhd2FpdCBhenRlYy5ub3RlLmNyZWF0ZShhbGljZS5wdWJsaWNLZXksIDEwMCk7XG4gICAgICAgIGNvbnN0IG1pbnRQcm9vZiA9IG5ldyBNaW50UHJvb2YoemVyb1ZhbHVlTm90ZSwgYWxpY2UxMDBOb3RlLCBbYWxpY2UxMDBOb3RlXSwgWmtBc3NldE1pbnRhYmxlSW5zdGFuY2UuYWRkcmVzcyk7XG4gICAgICAgIGNvbnN0IG1pbnREYXRhID0gbWludFByb29mLmVuY29kZUFCSSgpO1xuICAgICAgICBjb25zdCBtaW50ID0gYXdhaXQgWmtBc3NldE1pbnRhYmxlSW5zdGFuY2UuY29uZmlkZW50aWFsTWludChNSU5UX1BST09GLCBtaW50RGF0YSk7XG4gICAgICAgIGNvbnNvbGUubG9nKG1pbnQucmVjZWlwdCk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdTdWNjZXNzZnVsbHkgZ2l2ZW4gbm90ZXMgd29ydGggMTAwIHRvIEFsaWNlJyk7XG5cbiAgICAgICAgY29uc29sZS5sb2coJ1RyYW5zZmVyIG5vdGVzIHdvcnRoIDI1IGZyb20gQWxpY2UgdG8gQm9iJyk7XG4gICAgICAgIGNvbnN0IGFsaWNlNzVOb3RlID0gYXdhaXQgYXp0ZWMubm90ZS5jcmVhdGUoYWxpY2UucHVibGljS2V5LCA3NSk7XG4gICAgICAgIGNvbnN0IGJvYjI1Tm90ZSA9IGF3YWl0IGF6dGVjLm5vdGUuY3JlYXRlKGJvYi5wdWJsaWNLZXksIDI1KTtcbiAgICAgICAgY29uc3Qgc2VuZFByb29mID0gbmV3IEpvaW5TcGxpdFByb29mKFthbGljZTEwME5vdGVdLCBbYWxpY2U3NU5vdGUsIGJvYjI1Tm90ZV0sIGFjY291bnRzWzBdLCAwLCBhY2NvdW50c1swXSk7XG4gICAgICAgIGNvbnN0IHNlbmRQcm9vZkRhdGEgPSBzZW5kUHJvb2YuZW5jb2RlQUJJKFprQXNzZXRNaW50YWJsZUluc3RhbmNlLmFkZHJlc3MpO1xuICAgICAgICBjb25zdCBzZW5kUHJvb2ZTaWduYXR1cmVzID0gc2VuZFByb29mLmNvbnN0cnVjdFNpZ25hdHVyZXMoWmtBc3NldE1pbnRhYmxlSW5zdGFuY2UuYWRkcmVzcywgW2FsaWNlXSk7XG4gICAgICAgIGNvbnN0IHRyYW5zZmVyID0gYXdhaXQgWmtBc3NldE1pbnRhYmxlSW5zdGFuY2UuY29uZmlkZW50aWFsVHJhbnNmZXIoc2VuZFByb29mRGF0YSwgc2VuZFByb29mU2lnbmF0dXJlcyk7XG4gICAgICAgIGNvbnNvbGUubG9nKHRyYW5zZmVyLnJlY2VpcHQpO1xuICAgICAgICBjb25zb2xlLmxvZygnU3VjY2Vzc2Z1bGx5IHRyYW5zZmVycmVkIG5vdGVzIHdvcnRoIDI1IGZyb20gQWxpY2UgdG8gQm9iJyk7XG4gICAgfSk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "testAztecProtocol.js"
      ],
      "names": [
        "aztec",
        "require",
        "secp256k1",
        "ZkAssetMintable",
        "artifacts",
        "MINT_PROOF",
        "utils",
        "proofs",
        "JoinSplitProof",
        "MintProof",
        "contract",
        "accounts",
        "alice",
        "generateAccount",
        "bob",
        "it",
        "deployed",
        "ZkAssetMintableInstance",
        "console",
        "log",
        "note",
        "createZeroValueNote",
        "zeroValueNote",
        "create",
        "publicKey",
        "alice100Note",
        "mintProof",
        "address",
        "mintData",
        "encodeABI",
        "confidentialMint",
        "mint",
        "receipt",
        "alice75Note",
        "bob25Note",
        "sendProof",
        "sendProofData",
        "sendProofSignatures",
        "constructSignatures",
        "confidentialTransfer",
        "transfer"
      ],
      "mappings": ";;;;;;;;AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AAEA,IAAME,eAAe,GAAGC,SAAS,CAACH,OAAV,CAAkB,uBAAlB,CAAxB;;IACiBI,U,GAAeC,oB,CAAzBC,M,CAAUF,U;IACVG,c,GAA6BR,K,CAA7BQ,c;IAAgBC,S,GAAaT,K,CAAbS,S;AAEvBC,QAAQ,CAAC,6BAAD,EAAgC,UAAAC,QAAQ,EAAI;AAChD,MAAMC,KAAK,GAAGV,SAAS,CAACW,eAAV,EAAd;AACA,MAAMC,GAAG,GAAGZ,SAAS,CAACW,eAAV,EAAZ;AAEAE,EAAAA,EAAE,CAAC,0CAAD;AAAA;AAAA;AAAA;AAAA,+BAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLZ,eAAe,CAACa,QAAhB,EADK;;AAAA;AACrCC,YAAAA,uBADqC;AAG3CC,YAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAH2C;AAAA,mBAIfnB,KAAK,CAACoB,IAAN,CAAWC,mBAAX,EAJe;;AAAA;AAIrCC,YAAAA,aAJqC;AAAA;AAAA,mBAKhBtB,KAAK,CAACoB,IAAN,CAAWG,MAAX,CAAkBX,KAAK,CAACY,SAAxB,EAAmC,GAAnC,CALgB;;AAAA;AAKrCC,YAAAA,YALqC;AAMrCC,YAAAA,SANqC,GAMzB,IAAIjB,SAAJ,CAAca,aAAd,EAA6BG,YAA7B,EAA2C,CAACA,YAAD,CAA3C,EAA2DR,uBAAuB,CAACU,OAAnF,CANyB;AAOrCC,YAAAA,QAPqC,GAO1BF,SAAS,CAACG,SAAV,EAP0B;AAAA;AAAA,mBAQxBZ,uBAAuB,CAACa,gBAAxB,CAAyCzB,UAAzC,EAAqDuB,QAArD,CARwB;;AAAA;AAQrCG,YAAAA,IARqC;AAS3Cb,YAAAA,OAAO,CAACC,GAAR,CAAYY,IAAI,CAACC,OAAjB;AACAd,YAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AAEAD,YAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AAZ2C;AAAA,mBAajBnB,KAAK,CAACoB,IAAN,CAAWG,MAAX,CAAkBX,KAAK,CAACY,SAAxB,EAAmC,EAAnC,CAbiB;;AAAA;AAarCS,YAAAA,WAbqC;AAAA;AAAA,mBAcnBjC,KAAK,CAACoB,IAAN,CAAWG,MAAX,CAAkBT,GAAG,CAACU,SAAtB,EAAiC,EAAjC,CAdmB;;AAAA;AAcrCU,YAAAA,SAdqC;AAerCC,YAAAA,SAfqC,GAezB,IAAI3B,cAAJ,CAAmB,CAACiB,YAAD,CAAnB,EAAmC,CAACQ,WAAD,EAAcC,SAAd,CAAnC,EAA6DvB,QAAQ,CAAC,CAAD,CAArE,EAA0E,CAA1E,EAA6EA,QAAQ,CAAC,CAAD,CAArF,CAfyB;AAgBrCyB,YAAAA,aAhBqC,GAgBrBD,SAAS,CAACN,SAAV,CAAoBZ,uBAAuB,CAACU,OAA5C,CAhBqB;AAiBrCU,YAAAA,mBAjBqC,GAiBfF,SAAS,CAACG,mBAAV,CAA8BrB,uBAAuB,CAACU,OAAtD,EAA+D,CAACf,KAAD,CAA/D,CAjBe;AAAA;AAAA,mBAkBpBK,uBAAuB,CAACsB,oBAAxB,CAA6CH,aAA7C,EAA4DC,mBAA5D,CAlBoB;;AAAA;AAkBrCG,YAAAA,QAlBqC;AAmB3CtB,YAAAA,OAAO,CAACC,GAAR,CAAYqB,QAAQ,CAACR,OAArB;AACAd,YAAAA,OAAO,CAACC,GAAR,CAAY,2DAAZ;;AApB2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7C,GAAF;AAsBH,CA1BO,CAAR",
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "sourcesContent": [
        "import utils from '@aztec/dev-utils';\n\nconst aztec = require('aztec.js');\nconst secp256k1 = require('@aztec/secp256k1');\n\nconst ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\nconst {proofs : {MINT_PROOF}} = utils;\nconst {JoinSplitProof, MintProof} = aztec;\n\ncontract('Test Aztec Privacy Protocol', accounts => {\n    const alice = secp256k1.generateAccount();\n    const bob = secp256k1.generateAccount();\n\n    it('Simulate Minting and Unilateral Transfer', async() => {\n        const ZkAssetMintableInstance = await ZkAssetMintable.deployed();\n  \n        console.log('Give Alice notes worth 100');\n        const zeroValueNote = await aztec.note.createZeroValueNote();\n        const alice100Note = await aztec.note.create(alice.publicKey, 100);\n        const mintProof = new MintProof(zeroValueNote, alice100Note, [alice100Note], ZkAssetMintableInstance.address);\n        const mintData = mintProof.encodeABI();\n        const mint = await ZkAssetMintableInstance.confidentialMint(MINT_PROOF, mintData);\n        console.log(mint.receipt);\n        console.log('Successfully given notes worth 100 to Alice');\n\n        console.log('Transfer notes worth 25 from Alice to Bob');\n        const alice75Note = await aztec.note.create(alice.publicKey, 75);\n        const bob25Note = await aztec.note.create(bob.publicKey, 25);\n        const sendProof = new JoinSplitProof([alice100Note], [alice75Note, bob25Note], accounts[0], 0, accounts[0]);\n        const sendProofData = sendProof.encodeABI(ZkAssetMintableInstance.address);\n        const sendProofSignatures = sendProof.constructSignatures(ZkAssetMintableInstance.address, [alice]);\n        const transfer = await ZkAssetMintableInstance.confidentialTransfer(sendProofData, sendProofSignatures);\n        console.log(transfer.receipt);\n        console.log('Successfully transferred notes worth 25 from Alice to Bob');\n    });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570799616559
  },
  "{\"sourceRoot\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"filename\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocolWithERC20.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocolWithERC20.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocolWithERC20.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocolWithERC20.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
        "sourceFileName": "testAztecProtocolWithERC20.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _devUtils = _interopRequireDefault(require(\"@aztec/dev-utils\"));\n\nvar aztec = require('aztec.js');\n\nvar secp256k1 = require('@aztec/secp256k1');\n\nvar Ace = artifacts.require('./Ace.sol');\n\nvar ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\n\nvar ERC20Mintable = artifacts.require('./ERC20Mintable.sol');\n\nvar MINT_PROOF = _devUtils[\"default\"].proofs.MINT_PROOF;\nvar JoinSplitProof = aztec.JoinSplitProof,\n    MintProof = aztec.MintProof;\ncontract('Test Aztec Privacy Protocol', function (accounts) {\n  it('Simulate Minting and Unilateral Transfer',\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee() {\n    var AceInstance, ZkAssetMintableInstance, ERC20MintableInstance, alice, bob, zeroValueNote, alice0Note, mintProof, mintData, mint, alice25Note, sendProof, temp, sendProofData, sendProofSignatures, transfer;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Ace.deployed();\n\n          case 2:\n            AceInstance = _context.sent;\n            _context.next = 5;\n            return ZkAssetMintable.deployed();\n\n          case 5:\n            ZkAssetMintableInstance = _context.sent;\n            _context.next = 8;\n            return ERC20Mintable.deployed();\n\n          case 8:\n            ERC20MintableInstance = _context.sent;\n            alice = secp256k1.generateAccount();\n            bob = secp256k1.generateAccount();\n            _context.next = 13;\n            return ERC20MintableInstance.mint(accounts[1], 100);\n\n          case 13:\n            _context.next = 15;\n            return ERC20MintableInstance.mint(accounts[2], 0);\n\n          case 15:\n            _context.next = 17;\n            return ERC20MintableInstance.approve(AceInstance.address, 100, {\n              from: accounts[1]\n            });\n\n          case 17:\n            _context.t0 = console;\n            _context.next = 20;\n            return ERC20MintableInstance.balanceOf(accounts[1]);\n\n          case 20:\n            _context.t1 = _context.sent;\n            _context.t2 = 'Alice : ' + _context.t1;\n\n            _context.t0.log.call(_context.t0, _context.t2);\n\n            _context.t3 = console;\n            _context.next = 26;\n            return ERC20MintableInstance.balanceOf(accounts[2]);\n\n          case 26:\n            _context.t4 = _context.sent;\n            _context.t5 = 'Bob : ' + _context.t4;\n\n            _context.t3.log.call(_context.t3, _context.t5);\n\n            console.log('Give Alice notes worth 0');\n            _context.next = 32;\n            return aztec.note.createZeroValueNote();\n\n          case 32:\n            zeroValueNote = _context.sent;\n            _context.next = 35;\n            return aztec.note.create(alice.publicKey, 0);\n\n          case 35:\n            alice0Note = _context.sent;\n            mintProof = new MintProof(zeroValueNote, alice0Note, [alice0Note], ZkAssetMintableInstance.address);\n            mintData = mintProof.encodeABI();\n            _context.next = 40;\n            return ZkAssetMintableInstance.confidentialMint(MINT_PROOF, mintData);\n\n          case 40:\n            mint = _context.sent;\n            //        console.log(mint.receipt);\n            console.log('Successfully given notes worth 100 to Alice');\n            console.log('Transfer notes worth 25 from Alice to Bob');\n            _context.next = 45;\n            return aztec.note.create(alice.publicKey, 25);\n\n          case 45:\n            alice25Note = _context.sent;\n            sendProof = new JoinSplitProof([alice0Note], [alice25Note], accounts[0], -25, accounts[1]);\n            console.log(sendProof);\n            _context.next = 50;\n            return AceInstance.publicApprove(ZkAssetMintableInstance.address, sendProof.hash, 25, {\n              from: accounts[1]\n            });\n\n          case 50:\n            temp = _context.sent;\n            sendProofData = sendProof.encodeABI(ZkAssetMintableInstance.address);\n            sendProofSignatures = sendProof.constructSignatures(ZkAssetMintableInstance.address, [alice]);\n            _context.next = 55;\n            return ZkAssetMintableInstance.confidentialTransfer(sendProofData, sendProofSignatures);\n\n          case 55:\n            transfer = _context.sent;\n            console.log('Successfully transferred notes worth 25 from Alice to Bob');\n\n          case 57:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "testAztecProtocolWithERC20.js"
      ],
      "names": [
        "aztec",
        "require",
        "secp256k1",
        "Ace",
        "artifacts",
        "ZkAssetMintable",
        "ERC20Mintable",
        "MINT_PROOF",
        "utils",
        "proofs",
        "JoinSplitProof",
        "MintProof",
        "contract",
        "accounts",
        "it",
        "deployed",
        "AceInstance",
        "ZkAssetMintableInstance",
        "ERC20MintableInstance",
        "alice",
        "generateAccount",
        "bob",
        "mint",
        "approve",
        "address",
        "from",
        "console",
        "balanceOf",
        "log",
        "note",
        "createZeroValueNote",
        "zeroValueNote",
        "create",
        "publicKey",
        "alice0Note",
        "mintProof",
        "mintData",
        "encodeABI",
        "confidentialMint",
        "alice25Note",
        "sendProof",
        "publicApprove",
        "hash",
        "temp",
        "sendProofData",
        "sendProofSignatures",
        "constructSignatures",
        "confidentialTransfer",
        "transfer"
      ],
      "mappings": ";;;;;;;;AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AAEA,IAAME,GAAG,GAAGC,SAAS,CAACH,OAAV,CAAkB,WAAlB,CAAZ;;AACA,IAAMI,eAAe,GAAGD,SAAS,CAACH,OAAV,CAAkB,uBAAlB,CAAxB;;AACA,IAAMK,aAAa,GAAGF,SAAS,CAACH,OAAV,CAAkB,qBAAlB,CAAtB;;IAEiBM,U,GAAeC,oB,CAAzBC,M,CAAUF,U;IACVG,c,GAA6BV,K,CAA7BU,c;IAAgBC,S,GAAaX,K,CAAbW,S;AAEvBC,QAAQ,CAAC,6BAAD,EAAgC,UAAAC,QAAQ,EAAI;AAEhDC,EAAAA,EAAE,CAAC,0CAAD;AAAA;AAAA;AAAA;AAAA,+BAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACjBX,GAAG,CAACY,QAAJ,EADiB;;AAAA;AACrCC,YAAAA,WADqC;AAAA;AAAA,mBAELX,eAAe,CAACU,QAAhB,EAFK;;AAAA;AAErCE,YAAAA,uBAFqC;AAAA;AAAA,mBAGPX,aAAa,CAACS,QAAd,EAHO;;AAAA;AAGrCG,YAAAA,qBAHqC;AAKrCC,YAAAA,KALqC,GAK7BjB,SAAS,CAACkB,eAAV,EAL6B;AAMrCC,YAAAA,GANqC,GAM/BnB,SAAS,CAACkB,eAAV,EAN+B;AAAA;AAAA,mBAOrCF,qBAAqB,CAACI,IAAtB,CAA2BT,QAAQ,CAAC,CAAD,CAAnC,EAAwC,GAAxC,CAPqC;;AAAA;AAAA;AAAA,mBAQrCK,qBAAqB,CAACI,IAAtB,CAA2BT,QAAQ,CAAC,CAAD,CAAnC,EAAwC,CAAxC,CARqC;;AAAA;AAAA;AAAA,mBASrCK,qBAAqB,CAACK,OAAtB,CAA8BP,WAAW,CAACQ,OAA1C,EAAmD,GAAnD,EAAwD;AAACC,cAAAA,IAAI,EAAEZ,QAAQ,CAAC,CAAD;AAAf,aAAxD,CATqC;;AAAA;AAAA,0BAU3Ca,OAV2C;AAAA;AAAA,mBAUZR,qBAAqB,CAACS,SAAtB,CAAgCd,QAAQ,CAAC,CAAD,CAAxC,CAVY;;AAAA;AAAA;AAAA,0BAU/B,UAV+B;;AAAA,wBAUnCe,GAVmC;;AAAA,0BAW3CF,OAX2C;AAAA;AAAA,mBAWdR,qBAAqB,CAACS,SAAtB,CAAgCd,QAAQ,CAAC,CAAD,CAAxC,CAXc;;AAAA;AAAA;AAAA,0BAW/B,QAX+B;;AAAA,wBAWnCe,GAXmC;;AAa3CF,YAAAA,OAAO,CAACE,GAAR,CAAY,0BAAZ;AAb2C;AAAA,mBAcf5B,KAAK,CAAC6B,IAAN,CAAWC,mBAAX,EAde;;AAAA;AAcrCC,YAAAA,aAdqC;AAAA;AAAA,mBAelB/B,KAAK,CAAC6B,IAAN,CAAWG,MAAX,CAAkBb,KAAK,CAACc,SAAxB,EAAmC,CAAnC,CAfkB;;AAAA;AAerCC,YAAAA,UAfqC;AAgBrCC,YAAAA,SAhBqC,GAgBzB,IAAIxB,SAAJ,CAAcoB,aAAd,EAA6BG,UAA7B,EAAyC,CAACA,UAAD,CAAzC,EAAuDjB,uBAAuB,CAACO,OAA/E,CAhByB;AAiBrCY,YAAAA,QAjBqC,GAiB1BD,SAAS,CAACE,SAAV,EAjB0B;AAAA;AAAA,mBAkBxBpB,uBAAuB,CAACqB,gBAAxB,CAAyC/B,UAAzC,EAAqD6B,QAArD,CAlBwB;;AAAA;AAkBrCd,YAAAA,IAlBqC;AAmBnD;AACQI,YAAAA,OAAO,CAACE,GAAR,CAAY,6CAAZ;AAEAF,YAAAA,OAAO,CAACE,GAAR,CAAY,2CAAZ;AAtB2C;AAAA,mBAuBjB5B,KAAK,CAAC6B,IAAN,CAAWG,MAAX,CAAkBb,KAAK,CAACc,SAAxB,EAAmC,EAAnC,CAvBiB;;AAAA;AAuBrCM,YAAAA,WAvBqC;AAwBrCC,YAAAA,SAxBqC,GAwBzB,IAAI9B,cAAJ,CAAmB,CAACwB,UAAD,CAAnB,EAAiC,CAACK,WAAD,CAAjC,EAAgD1B,QAAQ,CAAC,CAAD,CAAxD,EAA6D,CAAC,EAA9D,EAAkEA,QAAQ,CAAC,CAAD,CAA1E,CAxByB;AAyB3Ca,YAAAA,OAAO,CAACE,GAAR,CAAYY,SAAZ;AAzB2C;AAAA,mBA0BxBxB,WAAW,CAACyB,aAAZ,CAA0BxB,uBAAuB,CAACO,OAAlD,EAA2DgB,SAAS,CAACE,IAArE,EAA2E,EAA3E,EAA+E;AAACjB,cAAAA,IAAI,EAACZ,QAAQ,CAAC,CAAD;AAAd,aAA/E,CA1BwB;;AAAA;AA0BrC8B,YAAAA,IA1BqC;AA2BrCC,YAAAA,aA3BqC,GA2BrBJ,SAAS,CAACH,SAAV,CAAoBpB,uBAAuB,CAACO,OAA5C,CA3BqB;AA4BrCqB,YAAAA,mBA5BqC,GA4BfL,SAAS,CAACM,mBAAV,CAA8B7B,uBAAuB,CAACO,OAAtD,EAA+D,CAACL,KAAD,CAA/D,CA5Be;AAAA;AAAA,mBA6BpBF,uBAAuB,CAAC8B,oBAAxB,CAA6CH,aAA7C,EAA4DC,mBAA5D,CA7BoB;;AAAA;AA6BrCG,YAAAA,QA7BqC;AA8B3CtB,YAAAA,OAAO,CAACE,GAAR,CAAY,2DAAZ;;AA9B2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7C,GAAF;AAgCH,CAlCO,CAAR",
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "sourcesContent": [
        "import utils from '@aztec/dev-utils';\n\nconst aztec = require('aztec.js');\nconst secp256k1 = require('@aztec/secp256k1');\n\nconst Ace = artifacts.require('./Ace.sol');\nconst ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\nconst ERC20Mintable = artifacts.require('./ERC20Mintable.sol');\n\nconst {proofs : {MINT_PROOF}} = utils;\nconst {JoinSplitProof, MintProof} = aztec;\n\ncontract('Test Aztec Privacy Protocol', accounts => {\n\n    it('Simulate Minting and Unilateral Transfer', async() => {\n        const AceInstance = await Ace.deployed();\n        const ZkAssetMintableInstance = await ZkAssetMintable.deployed();\n        const ERC20MintableInstance = await ERC20Mintable.deployed();\n\n        const alice = secp256k1.generateAccount();\n        const bob = secp256k1.generateAccount();\n        await ERC20MintableInstance.mint(accounts[1], 100);\n        await ERC20MintableInstance.mint(accounts[2], 0);\n        await ERC20MintableInstance.approve(AceInstance.address, 100, {from: accounts[1]});\n        console.log('Alice : ' + await ERC20MintableInstance.balanceOf(accounts[1]));\n        console.log('Bob : ' + await ERC20MintableInstance.balanceOf(accounts[2]));\n\n        console.log('Give Alice notes worth 0');\n        const zeroValueNote = await aztec.note.createZeroValueNote();\n        const alice0Note = await aztec.note.create(alice.publicKey, 0);\n        const mintProof = new MintProof(zeroValueNote, alice0Note, [alice0Note], ZkAssetMintableInstance.address);\n        const mintData = mintProof.encodeABI();\n        const mint = await ZkAssetMintableInstance.confidentialMint(MINT_PROOF, mintData);\n//        console.log(mint.receipt);\n        console.log('Successfully given notes worth 100 to Alice');\n\n        console.log('Transfer notes worth 25 from Alice to Bob');\n        const alice25Note = await aztec.note.create(alice.publicKey, 25);\n        const sendProof = new JoinSplitProof([alice0Note], [alice25Note], accounts[0], -25, accounts[1]);\n        console.log(sendProof);\n        const temp = await AceInstance.publicApprove(ZkAssetMintableInstance.address, sendProof.hash, 25, {from:accounts[1]});\n        const sendProofData = sendProof.encodeABI(ZkAssetMintableInstance.address);\n        const sendProofSignatures = sendProof.constructSignatures(ZkAssetMintableInstance.address, [alice]);\n        const transfer = await ZkAssetMintableInstance.confidentialTransfer(sendProofData, sendProofSignatures);\n        console.log('Successfully transferred notes worth 25 from Alice to Bob');\n    });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571070896923
  }
}