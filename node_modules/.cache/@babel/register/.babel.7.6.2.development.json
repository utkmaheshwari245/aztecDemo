{
  "{\"sourceRoot\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"filename\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocol.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocol.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocol.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocol.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
        "sourceFileName": "testAztecProtocol.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _devUtils = _interopRequireDefault(require(\"@aztec/dev-utils\"));\n\nvar aztec = require('aztec.js');\n\nvar secp256k1 = require('@aztec/secp256k1');\n\nvar ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\n\nvar MINT_PROOF = _devUtils[\"default\"].proofs.MINT_PROOF;\nvar JoinSplitProof = aztec.JoinSplitProof,\n    MintProof = aztec.MintProof;\ncontract('Test Aztec Privacy Protocol', function (accounts) {\n  var alice = secp256k1.generateAccount();\n  var bob = secp256k1.generateAccount();\n  it('Test Unilateral Transfer using Aztec protocol',\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee() {\n    var ZkAssetMintableInstance, zeroValueNote, alice100Note, proof1, data1, alice75Note, bob25Note, proof2, data2, signatures2;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ZkAssetMintable.deployed();\n\n          case 2:\n            ZkAssetMintableInstance = _context.sent;\n            console.log('Mint Aztec Note worth 100 for Alice');\n            _context.next = 6;\n            return aztec.note.createZeroValueNote();\n\n          case 6:\n            zeroValueNote = _context.sent;\n            _context.next = 9;\n            return aztec.note.create(alice.publicKey, 100);\n\n          case 9:\n            alice100Note = _context.sent;\n            proof1 = new MintProof(zeroValueNote, alice100Note, [alice100Note], ZkAssetMintableInstance.address);\n            data1 = proof1.encodeABI();\n            _context.next = 14;\n            return ZkAssetMintableInstance.confidentialMint(MINT_PROOF, data1);\n\n          case 14:\n            console.log('Transfer Aztec Note worth 25 from Alice to Bob');\n            _context.next = 17;\n            return aztec.note.create(alice.publicKey, 75);\n\n          case 17:\n            alice75Note = _context.sent;\n            _context.next = 20;\n            return aztec.note.create(bob.publicKey, 25);\n\n          case 20:\n            bob25Note = _context.sent;\n            proof2 = new JoinSplitProof([alice100Note], [alice75Note, bob25Note], accounts[0], 0, accounts[0]);\n            data2 = proof2.encodeABI(ZkAssetMintableInstance.address);\n            signatures2 = proof2.constructSignatures(ZkAssetMintableInstance.address, [alice]);\n            _context.next = 26;\n            return ZkAssetMintableInstance.confidentialTransfer(data2, signatures2);\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3RBenRlY1Byb3RvY29sLmpzIl0sIm5hbWVzIjpbImF6dGVjIiwicmVxdWlyZSIsInNlY3AyNTZrMSIsIlprQXNzZXRNaW50YWJsZSIsImFydGlmYWN0cyIsIk1JTlRfUFJPT0YiLCJ1dGlscyIsInByb29mcyIsIkpvaW5TcGxpdFByb29mIiwiTWludFByb29mIiwiY29udHJhY3QiLCJhY2NvdW50cyIsImFsaWNlIiwiZ2VuZXJhdGVBY2NvdW50IiwiYm9iIiwiaXQiLCJkZXBsb3llZCIsIlprQXNzZXRNaW50YWJsZUluc3RhbmNlIiwiY29uc29sZSIsImxvZyIsIm5vdGUiLCJjcmVhdGVaZXJvVmFsdWVOb3RlIiwiemVyb1ZhbHVlTm90ZSIsImNyZWF0ZSIsInB1YmxpY0tleSIsImFsaWNlMTAwTm90ZSIsInByb29mMSIsImFkZHJlc3MiLCJkYXRhMSIsImVuY29kZUFCSSIsImNvbmZpZGVudGlhbE1pbnQiLCJhbGljZTc1Tm90ZSIsImJvYjI1Tm90ZSIsInByb29mMiIsImRhdGEyIiwic2lnbmF0dXJlczIiLCJjb25zdHJ1Y3RTaWduYXR1cmVzIiwiY29uZmlkZW50aWFsVHJhbnNmZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBRUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUFyQjs7QUFDQSxJQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxrQkFBRCxDQUF6Qjs7QUFFQSxJQUFNRSxlQUFlLEdBQUdDLFNBQVMsQ0FBQ0gsT0FBVixDQUFrQix1QkFBbEIsQ0FBeEI7O0lBRWlCSSxVLEdBQWVDLG9CLENBQXpCQyxNLENBQVVGLFU7SUFDVkcsYyxHQUE2QlIsSyxDQUE3QlEsYztJQUFnQkMsUyxHQUFhVCxLLENBQWJTLFM7QUFFdkJDLFFBQVEsQ0FBQyw2QkFBRCxFQUFnQyxVQUFBQyxRQUFRLEVBQUk7QUFDaEQsTUFBTUMsS0FBSyxHQUFHVixTQUFTLENBQUNXLGVBQVYsRUFBZDtBQUNBLE1BQU1DLEdBQUcsR0FBR1osU0FBUyxDQUFDVyxlQUFWLEVBQVo7QUFFQUUsRUFBQUEsRUFBRSxDQUFDLCtDQUFEO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBQWtEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ1ZaLGVBQWUsQ0FBQ2EsUUFBaEIsRUFEVTs7QUFBQTtBQUMxQ0MsWUFBQUEsdUJBRDBDO0FBR2hEQyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxxQ0FBWjtBQUhnRDtBQUFBLG1CQUlwQm5CLEtBQUssQ0FBQ29CLElBQU4sQ0FBV0MsbUJBQVgsRUFKb0I7O0FBQUE7QUFJMUNDLFlBQUFBLGFBSjBDO0FBQUE7QUFBQSxtQkFLckJ0QixLQUFLLENBQUNvQixJQUFOLENBQVdHLE1BQVgsQ0FBa0JYLEtBQUssQ0FBQ1ksU0FBeEIsRUFBbUMsR0FBbkMsQ0FMcUI7O0FBQUE7QUFLMUNDLFlBQUFBLFlBTDBDO0FBTTFDQyxZQUFBQSxNQU4wQyxHQU1qQyxJQUFJakIsU0FBSixDQUFjYSxhQUFkLEVBQTZCRyxZQUE3QixFQUEyQyxDQUFDQSxZQUFELENBQTNDLEVBQTJEUix1QkFBdUIsQ0FBQ1UsT0FBbkYsQ0FOaUM7QUFPMUNDLFlBQUFBLEtBUDBDLEdBT2xDRixNQUFNLENBQUNHLFNBQVAsRUFQa0M7QUFBQTtBQUFBLG1CQVExQ1osdUJBQXVCLENBQUNhLGdCQUF4QixDQUF5Q3pCLFVBQXpDLEVBQXFEdUIsS0FBckQsQ0FSMEM7O0FBQUE7QUFVaERWLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdEQUFaO0FBVmdEO0FBQUEsbUJBV3RCbkIsS0FBSyxDQUFDb0IsSUFBTixDQUFXRyxNQUFYLENBQWtCWCxLQUFLLENBQUNZLFNBQXhCLEVBQW1DLEVBQW5DLENBWHNCOztBQUFBO0FBVzFDTyxZQUFBQSxXQVgwQztBQUFBO0FBQUEsbUJBWXhCL0IsS0FBSyxDQUFDb0IsSUFBTixDQUFXRyxNQUFYLENBQWtCVCxHQUFHLENBQUNVLFNBQXRCLEVBQWlDLEVBQWpDLENBWndCOztBQUFBO0FBWTFDUSxZQUFBQSxTQVowQztBQWExQ0MsWUFBQUEsTUFiMEMsR0FhakMsSUFBSXpCLGNBQUosQ0FBbUIsQ0FBQ2lCLFlBQUQsQ0FBbkIsRUFBbUMsQ0FBQ00sV0FBRCxFQUFjQyxTQUFkLENBQW5DLEVBQTZEckIsUUFBUSxDQUFDLENBQUQsQ0FBckUsRUFBMEUsQ0FBMUUsRUFBNkVBLFFBQVEsQ0FBQyxDQUFELENBQXJGLENBYmlDO0FBYzFDdUIsWUFBQUEsS0FkMEMsR0FjbENELE1BQU0sQ0FBQ0osU0FBUCxDQUFpQlosdUJBQXVCLENBQUNVLE9BQXpDLENBZGtDO0FBZTFDUSxZQUFBQSxXQWYwQyxHQWU1QkYsTUFBTSxDQUFDRyxtQkFBUCxDQUEyQm5CLHVCQUF1QixDQUFDVSxPQUFuRCxFQUE0RCxDQUFDZixLQUFELENBQTVELENBZjRCO0FBQUE7QUFBQSxtQkFnQjFDSyx1QkFBdUIsQ0FBQ29CLG9CQUF4QixDQUE2Q0gsS0FBN0MsRUFBb0RDLFdBQXBELENBaEIwQzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFsRCxHQUFGO0FBa0JILENBdEJPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3V0a21haGVzaHdhcmkyNDUvV29yay9Qcm9qZWN0cy9teUF6dGVjL3Rlc3QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXRpbHMgZnJvbSAnQGF6dGVjL2Rldi11dGlscyc7XG5cbmNvbnN0IGF6dGVjID0gcmVxdWlyZSgnYXp0ZWMuanMnKTtcbmNvbnN0IHNlY3AyNTZrMSA9IHJlcXVpcmUoJ0BhenRlYy9zZWNwMjU2azEnKTtcblxuY29uc3QgWmtBc3NldE1pbnRhYmxlID0gYXJ0aWZhY3RzLnJlcXVpcmUoJy4vWmtBc3NldE1pbnRhYmxlLnNvbCcpO1xuXG5jb25zdCB7cHJvb2ZzIDoge01JTlRfUFJPT0Z9fSA9IHV0aWxzO1xuY29uc3Qge0pvaW5TcGxpdFByb29mLCBNaW50UHJvb2Z9ID0gYXp0ZWM7XG5cbmNvbnRyYWN0KCdUZXN0IEF6dGVjIFByaXZhY3kgUHJvdG9jb2wnLCBhY2NvdW50cyA9PiB7XG4gICAgY29uc3QgYWxpY2UgPSBzZWNwMjU2azEuZ2VuZXJhdGVBY2NvdW50KCk7XG4gICAgY29uc3QgYm9iID0gc2VjcDI1NmsxLmdlbmVyYXRlQWNjb3VudCgpO1xuXG4gICAgaXQoJ1Rlc3QgVW5pbGF0ZXJhbCBUcmFuc2ZlciB1c2luZyBBenRlYyBwcm90b2NvbCcsIGFzeW5jKCkgPT4ge1xuICAgICAgICBjb25zdCBaa0Fzc2V0TWludGFibGVJbnN0YW5jZSA9IGF3YWl0IFprQXNzZXRNaW50YWJsZS5kZXBsb3llZCgpO1xuICBcbiAgICAgICAgY29uc29sZS5sb2coJ01pbnQgQXp0ZWMgTm90ZSB3b3J0aCAxMDAgZm9yIEFsaWNlJyk7XG4gICAgICAgIGNvbnN0IHplcm9WYWx1ZU5vdGUgPSBhd2FpdCBhenRlYy5ub3RlLmNyZWF0ZVplcm9WYWx1ZU5vdGUoKTtcbiAgICAgICAgY29uc3QgYWxpY2UxMDBOb3RlID0gYXdhaXQgYXp0ZWMubm90ZS5jcmVhdGUoYWxpY2UucHVibGljS2V5LCAxMDApO1xuICAgICAgICBjb25zdCBwcm9vZjEgPSBuZXcgTWludFByb29mKHplcm9WYWx1ZU5vdGUsIGFsaWNlMTAwTm90ZSwgW2FsaWNlMTAwTm90ZV0sIFprQXNzZXRNaW50YWJsZUluc3RhbmNlLmFkZHJlc3MpO1xuICAgICAgICBjb25zdCBkYXRhMSA9IHByb29mMS5lbmNvZGVBQkkoKTtcbiAgICAgICAgYXdhaXQgWmtBc3NldE1pbnRhYmxlSW5zdGFuY2UuY29uZmlkZW50aWFsTWludChNSU5UX1BST09GLCBkYXRhMSk7XG5cbiAgICAgICAgY29uc29sZS5sb2coJ1RyYW5zZmVyIEF6dGVjIE5vdGUgd29ydGggMjUgZnJvbSBBbGljZSB0byBCb2InKTtcbiAgICAgICAgY29uc3QgYWxpY2U3NU5vdGUgPSBhd2FpdCBhenRlYy5ub3RlLmNyZWF0ZShhbGljZS5wdWJsaWNLZXksIDc1KTtcbiAgICAgICAgY29uc3QgYm9iMjVOb3RlID0gYXdhaXQgYXp0ZWMubm90ZS5jcmVhdGUoYm9iLnB1YmxpY0tleSwgMjUpO1xuICAgICAgICBjb25zdCBwcm9vZjIgPSBuZXcgSm9pblNwbGl0UHJvb2YoW2FsaWNlMTAwTm90ZV0sIFthbGljZTc1Tm90ZSwgYm9iMjVOb3RlXSwgYWNjb3VudHNbMF0sIDAsIGFjY291bnRzWzBdKTtcbiAgICAgICAgY29uc3QgZGF0YTIgPSBwcm9vZjIuZW5jb2RlQUJJKFprQXNzZXRNaW50YWJsZUluc3RhbmNlLmFkZHJlc3MpO1xuICAgICAgICBjb25zdCBzaWduYXR1cmVzMiA9IHByb29mMi5jb25zdHJ1Y3RTaWduYXR1cmVzKFprQXNzZXRNaW50YWJsZUluc3RhbmNlLmFkZHJlc3MsIFthbGljZV0pO1xuICAgICAgICBhd2FpdCBaa0Fzc2V0TWludGFibGVJbnN0YW5jZS5jb25maWRlbnRpYWxUcmFuc2ZlcihkYXRhMiwgc2lnbmF0dXJlczIpO1xuICAgIH0pO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "testAztecProtocol.js"
      ],
      "names": [
        "aztec",
        "require",
        "secp256k1",
        "ZkAssetMintable",
        "artifacts",
        "MINT_PROOF",
        "utils",
        "proofs",
        "JoinSplitProof",
        "MintProof",
        "contract",
        "accounts",
        "alice",
        "generateAccount",
        "bob",
        "it",
        "deployed",
        "ZkAssetMintableInstance",
        "console",
        "log",
        "note",
        "createZeroValueNote",
        "zeroValueNote",
        "create",
        "publicKey",
        "alice100Note",
        "proof1",
        "address",
        "data1",
        "encodeABI",
        "confidentialMint",
        "alice75Note",
        "bob25Note",
        "proof2",
        "data2",
        "signatures2",
        "constructSignatures",
        "confidentialTransfer"
      ],
      "mappings": ";;;;;;;;AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AAEA,IAAME,eAAe,GAAGC,SAAS,CAACH,OAAV,CAAkB,uBAAlB,CAAxB;;IAEiBI,U,GAAeC,oB,CAAzBC,M,CAAUF,U;IACVG,c,GAA6BR,K,CAA7BQ,c;IAAgBC,S,GAAaT,K,CAAbS,S;AAEvBC,QAAQ,CAAC,6BAAD,EAAgC,UAAAC,QAAQ,EAAI;AAChD,MAAMC,KAAK,GAAGV,SAAS,CAACW,eAAV,EAAd;AACA,MAAMC,GAAG,GAAGZ,SAAS,CAACW,eAAV,EAAZ;AAEAE,EAAAA,EAAE,CAAC,+CAAD;AAAA;AAAA;AAAA;AAAA,+BAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACVZ,eAAe,CAACa,QAAhB,EADU;;AAAA;AAC1CC,YAAAA,uBAD0C;AAGhDC,YAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AAHgD;AAAA,mBAIpBnB,KAAK,CAACoB,IAAN,CAAWC,mBAAX,EAJoB;;AAAA;AAI1CC,YAAAA,aAJ0C;AAAA;AAAA,mBAKrBtB,KAAK,CAACoB,IAAN,CAAWG,MAAX,CAAkBX,KAAK,CAACY,SAAxB,EAAmC,GAAnC,CALqB;;AAAA;AAK1CC,YAAAA,YAL0C;AAM1CC,YAAAA,MAN0C,GAMjC,IAAIjB,SAAJ,CAAca,aAAd,EAA6BG,YAA7B,EAA2C,CAACA,YAAD,CAA3C,EAA2DR,uBAAuB,CAACU,OAAnF,CANiC;AAO1CC,YAAAA,KAP0C,GAOlCF,MAAM,CAACG,SAAP,EAPkC;AAAA;AAAA,mBAQ1CZ,uBAAuB,CAACa,gBAAxB,CAAyCzB,UAAzC,EAAqDuB,KAArD,CAR0C;;AAAA;AAUhDV,YAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AAVgD;AAAA,mBAWtBnB,KAAK,CAACoB,IAAN,CAAWG,MAAX,CAAkBX,KAAK,CAACY,SAAxB,EAAmC,EAAnC,CAXsB;;AAAA;AAW1CO,YAAAA,WAX0C;AAAA;AAAA,mBAYxB/B,KAAK,CAACoB,IAAN,CAAWG,MAAX,CAAkBT,GAAG,CAACU,SAAtB,EAAiC,EAAjC,CAZwB;;AAAA;AAY1CQ,YAAAA,SAZ0C;AAa1CC,YAAAA,MAb0C,GAajC,IAAIzB,cAAJ,CAAmB,CAACiB,YAAD,CAAnB,EAAmC,CAACM,WAAD,EAAcC,SAAd,CAAnC,EAA6DrB,QAAQ,CAAC,CAAD,CAArE,EAA0E,CAA1E,EAA6EA,QAAQ,CAAC,CAAD,CAArF,CAbiC;AAc1CuB,YAAAA,KAd0C,GAclCD,MAAM,CAACJ,SAAP,CAAiBZ,uBAAuB,CAACU,OAAzC,CAdkC;AAe1CQ,YAAAA,WAf0C,GAe5BF,MAAM,CAACG,mBAAP,CAA2BnB,uBAAuB,CAACU,OAAnD,EAA4D,CAACf,KAAD,CAA5D,CAf4B;AAAA;AAAA,mBAgB1CK,uBAAuB,CAACoB,oBAAxB,CAA6CH,KAA7C,EAAoDC,WAApD,CAhB0C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlD,GAAF;AAkBH,CAtBO,CAAR",
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "sourcesContent": [
        "import utils from '@aztec/dev-utils';\n\nconst aztec = require('aztec.js');\nconst secp256k1 = require('@aztec/secp256k1');\n\nconst ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\n\nconst {proofs : {MINT_PROOF}} = utils;\nconst {JoinSplitProof, MintProof} = aztec;\n\ncontract('Test Aztec Privacy Protocol', accounts => {\n    const alice = secp256k1.generateAccount();\n    const bob = secp256k1.generateAccount();\n\n    it('Test Unilateral Transfer using Aztec protocol', async() => {\n        const ZkAssetMintableInstance = await ZkAssetMintable.deployed();\n  \n        console.log('Mint Aztec Note worth 100 for Alice');\n        const zeroValueNote = await aztec.note.createZeroValueNote();\n        const alice100Note = await aztec.note.create(alice.publicKey, 100);\n        const proof1 = new MintProof(zeroValueNote, alice100Note, [alice100Note], ZkAssetMintableInstance.address);\n        const data1 = proof1.encodeABI();\n        await ZkAssetMintableInstance.confidentialMint(MINT_PROOF, data1);\n\n        console.log('Transfer Aztec Note worth 25 from Alice to Bob');\n        const alice75Note = await aztec.note.create(alice.publicKey, 75);\n        const bob25Note = await aztec.note.create(bob.publicKey, 25);\n        const proof2 = new JoinSplitProof([alice100Note], [alice75Note, bob25Note], accounts[0], 0, accounts[0]);\n        const data2 = proof2.encodeABI(ZkAssetMintableInstance.address);\n        const signatures2 = proof2.constructSignatures(ZkAssetMintableInstance.address, [alice]);\n        await ZkAssetMintableInstance.confidentialTransfer(data2, signatures2);\n    });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571126124900
  },
  "{\"sourceRoot\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"filename\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocolWithERC20.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocolWithERC20.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocolWithERC20.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocolWithERC20.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
        "sourceFileName": "testAztecProtocolWithERC20.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _devUtils = _interopRequireDefault(require(\"@aztec/dev-utils\"));\n\nvar aztec = require('aztec.js');\n\nvar secp256k1 = require('@aztec/secp256k1');\n\nvar Ace = artifacts.require('./Ace.sol');\n\nvar ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\n\nvar ERC20Mintable = artifacts.require('./ERC20Mintable.sol');\n\nvar MINT_PROOF = _devUtils[\"default\"].proofs.MINT_PROOF;\nvar JoinSplitProof = aztec.JoinSplitProof,\n    MintProof = aztec.MintProof;\ncontract('Test Aztec Privacy Protocol with ERC20 tokens', function (accounts) {\n  it('Test Unilateral Transfer of ERC20 tokens using Aztec protocol',\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee() {\n    var AceInstance, ZkAssetMintableInstance, ERC20MintableInstance, alice, bob, amount, zeroValueNote, alice0Note, proof1, data1, alice25Note, proof2, data2, signatures2, bob0Note, proof3, data3, signatures3;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Ace.deployed();\n\n          case 2:\n            AceInstance = _context.sent;\n            _context.next = 5;\n            return ZkAssetMintable.deployed();\n\n          case 5:\n            ZkAssetMintableInstance = _context.sent;\n            _context.next = 8;\n            return ERC20Mintable.deployed();\n\n          case 8:\n            ERC20MintableInstance = _context.sent;\n            alice = secp256k1.generateAccount();\n            bob = secp256k1.generateAccount();\n            _context.next = 13;\n            return ERC20MintableInstance.mint(accounts[1], 100);\n\n          case 13:\n            _context.next = 15;\n            return ERC20MintableInstance.mint(accounts[2], 0);\n\n          case 15:\n            amount = 25;\n            _context.t0 = console;\n            _context.next = 19;\n            return ERC20MintableInstance.balanceOf(accounts[1]);\n\n          case 19:\n            _context.t1 = _context.sent;\n            _context.t2 = 'Alice\\'s balance : ' + _context.t1;\n\n            _context.t0.log.call(_context.t0, _context.t2);\n\n            _context.t3 = console;\n            _context.next = 25;\n            return ERC20MintableInstance.balanceOf(accounts[2]);\n\n          case 25:\n            _context.t4 = _context.sent;\n            _context.t5 = 'Bob\\'s balance : ' + _context.t4;\n\n            _context.t3.log.call(_context.t3, _context.t5);\n\n            console.log('Mint Aztec Note worth 0 for Alice');\n            _context.next = 31;\n            return aztec.note.createZeroValueNote();\n\n          case 31:\n            zeroValueNote = _context.sent;\n            _context.next = 34;\n            return aztec.note.create(alice.publicKey, 0);\n\n          case 34:\n            alice0Note = _context.sent;\n            proof1 = new MintProof(zeroValueNote, alice0Note, [alice0Note], ZkAssetMintableInstance.address);\n            data1 = proof1.encodeABI();\n            _context.next = 39;\n            return ZkAssetMintableInstance.confidentialMint(MINT_PROOF, data1);\n\n          case 39:\n            console.log('Convert Alice\\'s ERC20 Tokens worth ' + amount + ' to Alice\\'s Aztec Note worth ' + amount);\n            _context.next = 42;\n            return aztec.note.create(alice.publicKey, amount);\n\n          case 42:\n            alice25Note = _context.sent;\n            proof2 = new JoinSplitProof([alice0Note], [alice25Note], accounts[0], -amount, accounts[1]);\n            data2 = proof2.encodeABI(ZkAssetMintableInstance.address);\n            signatures2 = proof2.constructSignatures(ZkAssetMintableInstance.address, [alice]);\n            _context.next = 48;\n            return ERC20MintableInstance.approve(AceInstance.address, amount, {\n              from: accounts[1]\n            });\n\n          case 48:\n            _context.next = 50;\n            return AceInstance.publicApprove(ZkAssetMintableInstance.address, proof2.hash, amount, {\n              from: accounts[1]\n            });\n\n          case 50:\n            _context.next = 52;\n            return ZkAssetMintableInstance.confidentialTransfer(data2, signatures2);\n\n          case 52:\n            _context.t6 = console;\n            _context.next = 55;\n            return ERC20MintableInstance.balanceOf(accounts[1]);\n\n          case 55:\n            _context.t7 = _context.sent;\n            _context.t8 = 'Alice\\'s balance : ' + _context.t7;\n\n            _context.t6.log.call(_context.t6, _context.t8);\n\n            _context.t9 = console;\n            _context.next = 61;\n            return ERC20MintableInstance.balanceOf(accounts[2]);\n\n          case 61:\n            _context.t10 = _context.sent;\n            _context.t11 = 'Bob\\'s balance : ' + _context.t10;\n\n            _context.t9.log.call(_context.t9, _context.t11);\n\n            console.log('Convert Alice\\'s Aztec Note worth ' + amount + ' to Bob\\'s ERC20 Tokens worth ' + amount);\n            _context.next = 67;\n            return aztec.note.create(bob.publicKey, 0);\n\n          case 67:\n            bob0Note = _context.sent;\n            proof3 = new JoinSplitProof([alice25Note], [bob0Note], accounts[0], amount, accounts[2]);\n            data3 = proof3.encodeABI(ZkAssetMintableInstance.address);\n            signatures3 = proof3.constructSignatures(ZkAssetMintableInstance.address, [alice]);\n            _context.next = 73;\n            return ZkAssetMintableInstance.confidentialTransfer(data3, signatures3);\n\n          case 73:\n            _context.t12 = console;\n            _context.next = 76;\n            return ERC20MintableInstance.balanceOf(accounts[1]);\n\n          case 76:\n            _context.t13 = _context.sent;\n            _context.t14 = 'Alice\\'s balance : ' + _context.t13;\n\n            _context.t12.log.call(_context.t12, _context.t14);\n\n            _context.t15 = console;\n            _context.next = 82;\n            return ERC20MintableInstance.balanceOf(accounts[2]);\n\n          case 82:\n            _context.t16 = _context.sent;\n            _context.t17 = 'Bob\\'s balance : ' + _context.t16;\n\n            _context.t15.log.call(_context.t15, _context.t17);\n\n          case 85:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "testAztecProtocolWithERC20.js"
      ],
      "names": [
        "aztec",
        "require",
        "secp256k1",
        "Ace",
        "artifacts",
        "ZkAssetMintable",
        "ERC20Mintable",
        "MINT_PROOF",
        "utils",
        "proofs",
        "JoinSplitProof",
        "MintProof",
        "contract",
        "accounts",
        "it",
        "deployed",
        "AceInstance",
        "ZkAssetMintableInstance",
        "ERC20MintableInstance",
        "alice",
        "generateAccount",
        "bob",
        "mint",
        "amount",
        "console",
        "balanceOf",
        "log",
        "note",
        "createZeroValueNote",
        "zeroValueNote",
        "create",
        "publicKey",
        "alice0Note",
        "proof1",
        "address",
        "data1",
        "encodeABI",
        "confidentialMint",
        "alice25Note",
        "proof2",
        "data2",
        "signatures2",
        "constructSignatures",
        "approve",
        "from",
        "publicApprove",
        "hash",
        "confidentialTransfer",
        "bob0Note",
        "proof3",
        "data3",
        "signatures3"
      ],
      "mappings": ";;;;;;;;AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AAEA,IAAME,GAAG,GAAGC,SAAS,CAACH,OAAV,CAAkB,WAAlB,CAAZ;;AACA,IAAMI,eAAe,GAAGD,SAAS,CAACH,OAAV,CAAkB,uBAAlB,CAAxB;;AACA,IAAMK,aAAa,GAAGF,SAAS,CAACH,OAAV,CAAkB,qBAAlB,CAAtB;;IAEiBM,U,GAAeC,oB,CAAzBC,M,CAAUF,U;IACVG,c,GAA6BV,K,CAA7BU,c;IAAgBC,S,GAAaX,K,CAAbW,S;AAEvBC,QAAQ,CAAC,+CAAD,EAAkD,UAAAC,QAAQ,EAAI;AAElEC,EAAAA,EAAE,CAAC,+DAAD;AAAA;AAAA;AAAA;AAAA,+BAAkE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACtCX,GAAG,CAACY,QAAJ,EADsC;;AAAA;AAC1DC,YAAAA,WAD0D;AAAA;AAAA,mBAE1BX,eAAe,CAACU,QAAhB,EAF0B;;AAAA;AAE1DE,YAAAA,uBAF0D;AAAA;AAAA,mBAG5BX,aAAa,CAACS,QAAd,EAH4B;;AAAA;AAG1DG,YAAAA,qBAH0D;AAK1DC,YAAAA,KAL0D,GAKlDjB,SAAS,CAACkB,eAAV,EALkD;AAM1DC,YAAAA,GAN0D,GAMpDnB,SAAS,CAACkB,eAAV,EANoD;AAAA;AAAA,mBAO1DF,qBAAqB,CAACI,IAAtB,CAA2BT,QAAQ,CAAC,CAAD,CAAnC,EAAwC,GAAxC,CAP0D;;AAAA;AAAA;AAAA,mBAQ1DK,qBAAqB,CAACI,IAAtB,CAA2BT,QAAQ,CAAC,CAAD,CAAnC,EAAwC,CAAxC,CAR0D;;AAAA;AAS1DU,YAAAA,MAT0D,GASjD,EATiD;AAAA,0BAWhEC,OAXgE;AAAA;AAAA,mBAWtBN,qBAAqB,CAACO,SAAtB,CAAgCZ,QAAQ,CAAC,CAAD,CAAxC,CAXsB;;AAAA;AAAA;AAAA,0BAWpD,qBAXoD;;AAAA,wBAWxDa,GAXwD;;AAAA,0BAYhEF,OAZgE;AAAA;AAAA,mBAYxBN,qBAAqB,CAACO,SAAtB,CAAgCZ,QAAQ,CAAC,CAAD,CAAxC,CAZwB;;AAAA;AAAA;AAAA,0BAYpD,mBAZoD;;AAAA,wBAYxDa,GAZwD;;AAchEF,YAAAA,OAAO,CAACE,GAAR,CAAY,mCAAZ;AAdgE;AAAA,mBAepC1B,KAAK,CAAC2B,IAAN,CAAWC,mBAAX,EAfoC;;AAAA;AAe1DC,YAAAA,aAf0D;AAAA;AAAA,mBAgBvC7B,KAAK,CAAC2B,IAAN,CAAWG,MAAX,CAAkBX,KAAK,CAACY,SAAxB,EAAmC,CAAnC,CAhBuC;;AAAA;AAgB1DC,YAAAA,UAhB0D;AAiB1DC,YAAAA,MAjB0D,GAiBjD,IAAItB,SAAJ,CAAckB,aAAd,EAA6BG,UAA7B,EAAyC,CAACA,UAAD,CAAzC,EAAuDf,uBAAuB,CAACiB,OAA/E,CAjBiD;AAkB1DC,YAAAA,KAlB0D,GAkBlDF,MAAM,CAACG,SAAP,EAlBkD;AAAA;AAAA,mBAmB1DnB,uBAAuB,CAACoB,gBAAxB,CAAyC9B,UAAzC,EAAqD4B,KAArD,CAnB0D;;AAAA;AAqBhEX,YAAAA,OAAO,CAACE,GAAR,CAAY,yCAAyCH,MAAzC,GAAkD,gCAAlD,GAAqFA,MAAjG;AArBgE;AAAA,mBAsBtCvB,KAAK,CAAC2B,IAAN,CAAWG,MAAX,CAAkBX,KAAK,CAACY,SAAxB,EAAmCR,MAAnC,CAtBsC;;AAAA;AAsB1De,YAAAA,WAtB0D;AAuB1DC,YAAAA,MAvB0D,GAuBjD,IAAI7B,cAAJ,CAAmB,CAACsB,UAAD,CAAnB,EAAiC,CAACM,WAAD,CAAjC,EAAgDzB,QAAQ,CAAC,CAAD,CAAxD,EAA6D,CAACU,MAA9D,EAAsEV,QAAQ,CAAC,CAAD,CAA9E,CAvBiD;AAwB1D2B,YAAAA,KAxB0D,GAwBlDD,MAAM,CAACH,SAAP,CAAiBnB,uBAAuB,CAACiB,OAAzC,CAxBkD;AAyB1DO,YAAAA,WAzB0D,GAyB5CF,MAAM,CAACG,mBAAP,CAA2BzB,uBAAuB,CAACiB,OAAnD,EAA4D,CAACf,KAAD,CAA5D,CAzB4C;AAAA;AAAA,mBA0B1DD,qBAAqB,CAACyB,OAAtB,CAA8B3B,WAAW,CAACkB,OAA1C,EAAmDX,MAAnD,EAA2D;AAACqB,cAAAA,IAAI,EAAE/B,QAAQ,CAAC,CAAD;AAAf,aAA3D,CA1B0D;;AAAA;AAAA;AAAA,mBA2B1DG,WAAW,CAAC6B,aAAZ,CAA0B5B,uBAAuB,CAACiB,OAAlD,EAA2DK,MAAM,CAACO,IAAlE,EAAwEvB,MAAxE,EAAgF;AAACqB,cAAAA,IAAI,EAAC/B,QAAQ,CAAC,CAAD;AAAd,aAAhF,CA3B0D;;AAAA;AAAA;AAAA,mBA4B1DI,uBAAuB,CAAC8B,oBAAxB,CAA6CP,KAA7C,EAAoDC,WAApD,CA5B0D;;AAAA;AAAA,0BA8BhEjB,OA9BgE;AAAA;AAAA,mBA8BtBN,qBAAqB,CAACO,SAAtB,CAAgCZ,QAAQ,CAAC,CAAD,CAAxC,CA9BsB;;AAAA;AAAA;AAAA,0BA8BpD,qBA9BoD;;AAAA,wBA8BxDa,GA9BwD;;AAAA,0BA+BhEF,OA/BgE;AAAA;AAAA,mBA+BxBN,qBAAqB,CAACO,SAAtB,CAAgCZ,QAAQ,CAAC,CAAD,CAAxC,CA/BwB;;AAAA;AAAA;AAAA,2BA+BpD,mBA/BoD;;AAAA,wBA+BxDa,GA/BwD;;AAiChEF,YAAAA,OAAO,CAACE,GAAR,CAAY,uCAAuCH,MAAvC,GAAgD,gCAAhD,GAAmFA,MAA/F;AAjCgE;AAAA,mBAkCzCvB,KAAK,CAAC2B,IAAN,CAAWG,MAAX,CAAkBT,GAAG,CAACU,SAAtB,EAAiC,CAAjC,CAlCyC;;AAAA;AAkC1DiB,YAAAA,QAlC0D;AAmC1DC,YAAAA,MAnC0D,GAmCjD,IAAIvC,cAAJ,CAAmB,CAAC4B,WAAD,CAAnB,EAAkC,CAACU,QAAD,CAAlC,EAA8CnC,QAAQ,CAAC,CAAD,CAAtD,EAA2DU,MAA3D,EAAmEV,QAAQ,CAAC,CAAD,CAA3E,CAnCiD;AAoC1DqC,YAAAA,KApC0D,GAoClDD,MAAM,CAACb,SAAP,CAAiBnB,uBAAuB,CAACiB,OAAzC,CApCkD;AAqC1DiB,YAAAA,WArC0D,GAqC5CF,MAAM,CAACP,mBAAP,CAA2BzB,uBAAuB,CAACiB,OAAnD,EAA4D,CAACf,KAAD,CAA5D,CArC4C;AAAA;AAAA,mBAsC1DF,uBAAuB,CAAC8B,oBAAxB,CAA6CG,KAA7C,EAAoDC,WAApD,CAtC0D;;AAAA;AAAA,2BAwChE3B,OAxCgE;AAAA;AAAA,mBAwCtBN,qBAAqB,CAACO,SAAtB,CAAgCZ,QAAQ,CAAC,CAAD,CAAxC,CAxCsB;;AAAA;AAAA;AAAA,2BAwCpD,qBAxCoD;;AAAA,yBAwCxDa,GAxCwD;;AAAA,2BAyChEF,OAzCgE;AAAA;AAAA,mBAyCxBN,qBAAqB,CAACO,SAAtB,CAAgCZ,QAAQ,CAAC,CAAD,CAAxC,CAzCwB;;AAAA;AAAA;AAAA,2BAyCpD,mBAzCoD;;AAAA,yBAyCxDa,GAzCwD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlE,GAAF;AA2CH,CA7CO,CAAR",
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "sourcesContent": [
        "import utils from '@aztec/dev-utils';\n\nconst aztec = require('aztec.js');\nconst secp256k1 = require('@aztec/secp256k1');\n\nconst Ace = artifacts.require('./Ace.sol');\nconst ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\nconst ERC20Mintable = artifacts.require('./ERC20Mintable.sol');\n\nconst {proofs : {MINT_PROOF}} = utils;\nconst {JoinSplitProof, MintProof} = aztec;\n\ncontract('Test Aztec Privacy Protocol with ERC20 tokens', accounts => {\n\n    it('Test Unilateral Transfer of ERC20 tokens using Aztec protocol', async() => {\n        const AceInstance = await Ace.deployed();\n        const ZkAssetMintableInstance = await ZkAssetMintable.deployed();\n        const ERC20MintableInstance = await ERC20Mintable.deployed();\n\n        const alice = secp256k1.generateAccount();\n        const bob = secp256k1.generateAccount();\n        await ERC20MintableInstance.mint(accounts[1], 100);\n        await ERC20MintableInstance.mint(accounts[2], 0);\n        const amount = 25;\n\n        console.log('Alice\\'s balance : ' + await ERC20MintableInstance.balanceOf(accounts[1]));\n        console.log('Bob\\'s balance : ' + await ERC20MintableInstance.balanceOf(accounts[2]));\n\n        console.log('Mint Aztec Note worth 0 for Alice');\n        const zeroValueNote = await aztec.note.createZeroValueNote();\n        const alice0Note = await aztec.note.create(alice.publicKey, 0);\n        const proof1 = new MintProof(zeroValueNote, alice0Note, [alice0Note], ZkAssetMintableInstance.address);\n        const data1 = proof1.encodeABI();\n        await ZkAssetMintableInstance.confidentialMint(MINT_PROOF, data1);\n\n        console.log('Convert Alice\\'s ERC20 Tokens worth ' + amount + ' to Alice\\'s Aztec Note worth ' + amount);\n        const alice25Note = await aztec.note.create(alice.publicKey, amount);\n        const proof2 = new JoinSplitProof([alice0Note], [alice25Note], accounts[0], -amount, accounts[1]);\n        const data2 = proof2.encodeABI(ZkAssetMintableInstance.address);\n        const signatures2 = proof2.constructSignatures(ZkAssetMintableInstance.address, [alice]);\n        await ERC20MintableInstance.approve(AceInstance.address, amount, {from: accounts[1]});\n        await AceInstance.publicApprove(ZkAssetMintableInstance.address, proof2.hash, amount, {from:accounts[1]});\n        await ZkAssetMintableInstance.confidentialTransfer(data2, signatures2);\n\n        console.log('Alice\\'s balance : ' + await ERC20MintableInstance.balanceOf(accounts[1]));\n        console.log('Bob\\'s balance : ' + await ERC20MintableInstance.balanceOf(accounts[2]));\n\n        console.log('Convert Alice\\'s Aztec Note worth ' + amount + ' to Bob\\'s ERC20 Tokens worth ' + amount);\n        const bob0Note = await aztec.note.create(bob.publicKey, 0);\n        const proof3 = new JoinSplitProof([alice25Note], [bob0Note], accounts[0], amount, accounts[2]);\n        const data3 = proof3.encodeABI(ZkAssetMintableInstance.address);\n        const signatures3 = proof3.constructSignatures(ZkAssetMintableInstance.address, [alice]);\n        await ZkAssetMintableInstance.confidentialTransfer(data3, signatures3);\n\n        console.log('Alice\\'s balance : ' + await ERC20MintableInstance.balanceOf(accounts[1]));\n        console.log('Bob\\'s balance : ' + await ERC20MintableInstance.balanceOf(accounts[2]));\n    });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571127676195
  }
}