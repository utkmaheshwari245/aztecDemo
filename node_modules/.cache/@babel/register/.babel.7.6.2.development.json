{
  "{\"sourceRoot\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"filename\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test/demo.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/demo.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/demo.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/demo.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
        "sourceFileName": "demo.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _devUtils = _interopRequireDefault(require(\"@aztec/dev-utils\"));\n\nvar aztec = require('aztec.js');\n\nvar secp256k1 = require('@aztec/secp256k1');\n\nvar ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\n\nvar MINT_PROOF = _devUtils[\"default\"].proofs.MINT_PROOF;\nvar JoinSplitProof = aztec.JoinSplitProof,\n    MintProof = aztec.MintProof;\ncontract('Test Aztec Privacy Protocol', function (accounts) {\n  var bob = secp256k1.generateAccount();\n  var sally = secp256k1.generateAccount();\n  it('Simulate Minting and Unilateral Transfer',\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee() {\n    var ZkAssetMintableInstance, bobNote1, currentTotalValueNote, newTotalValueNote, mintedNotes, senderForMinting, mintProof, mintData, mint, bobNote2, sallyNote1, inputNotes, outputNotes, senderForTransfer, publicValue, publicOwner, sendProof, sendProofData, sendProofSignatures, transfer;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ZkAssetMintable.deployed();\n\n          case 2:\n            ZkAssetMintableInstance = _context.sent;\n            console.log('Give Bob notes worth 100');\n            _context.next = 6;\n            return aztec.note.create(bob.publicKey, 100);\n\n          case 6:\n            bobNote1 = _context.sent;\n            _context.next = 9;\n            return aztec.note.createZeroValueNote();\n\n          case 9:\n            currentTotalValueNote = _context.sent;\n            newTotalValueNote = bobNote1;\n            mintedNotes = [bobNote1];\n            senderForMinting = ZkAssetMintableInstance.address;\n            mintProof = new MintProof(currentTotalValueNote, newTotalValueNote, mintedNotes, senderForMinting);\n            mintData = mintProof.encodeABI();\n            _context.next = 17;\n            return ZkAssetMintableInstance.confidentialMint(MINT_PROOF, mintData);\n\n          case 17:\n            mint = _context.sent;\n            console.log(mint.logs);\n            console.log('Successfully given notes worth 100 to Bob');\n            console.log('Transfer notes worth 25 from Bob to Sally');\n            _context.next = 23;\n            return aztec.note.create(bob.publicKey, 75);\n\n          case 23:\n            bobNote2 = _context.sent;\n            _context.next = 26;\n            return aztec.note.create(sally.publicKey, 25);\n\n          case 26:\n            sallyNote1 = _context.sent;\n            inputNotes = [bobNote1];\n            outputNotes = [bobNote2, sallyNote1];\n            senderForTransfer = accounts[0];\n            publicValue = 0;\n            publicOwner = bob.address;\n            sendProof = new JoinSplitProof(inputNotes, outputNotes, senderForTransfer, publicValue, publicOwner);\n            sendProofData = sendProof.encodeABI(ZkAssetMintableInstance.address);\n            sendProofSignatures = sendProof.constructSignatures(ZkAssetMintableInstance.address, [bob]);\n            _context.next = 37;\n            return ZkAssetMintableInstance.confidentialTransfer(sendProofData, sendProofSignatures);\n\n          case 37:\n            transfer = _context.sent;\n            console.log(transfer.logs);\n            console.log('Successfully transferred notes worth 25 from Bob to Sally');\n\n          case 40:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlbW8uanMiXSwibmFtZXMiOlsiYXp0ZWMiLCJyZXF1aXJlIiwic2VjcDI1NmsxIiwiWmtBc3NldE1pbnRhYmxlIiwiYXJ0aWZhY3RzIiwiTUlOVF9QUk9PRiIsInV0aWxzIiwicHJvb2ZzIiwiSm9pblNwbGl0UHJvb2YiLCJNaW50UHJvb2YiLCJjb250cmFjdCIsImFjY291bnRzIiwiYm9iIiwiZ2VuZXJhdGVBY2NvdW50Iiwic2FsbHkiLCJpdCIsImRlcGxveWVkIiwiWmtBc3NldE1pbnRhYmxlSW5zdGFuY2UiLCJjb25zb2xlIiwibG9nIiwibm90ZSIsImNyZWF0ZSIsInB1YmxpY0tleSIsImJvYk5vdGUxIiwiY3JlYXRlWmVyb1ZhbHVlTm90ZSIsImN1cnJlbnRUb3RhbFZhbHVlTm90ZSIsIm5ld1RvdGFsVmFsdWVOb3RlIiwibWludGVkTm90ZXMiLCJzZW5kZXJGb3JNaW50aW5nIiwiYWRkcmVzcyIsIm1pbnRQcm9vZiIsIm1pbnREYXRhIiwiZW5jb2RlQUJJIiwiY29uZmlkZW50aWFsTWludCIsIm1pbnQiLCJsb2dzIiwiYm9iTm90ZTIiLCJzYWxseU5vdGUxIiwiaW5wdXROb3RlcyIsIm91dHB1dE5vdGVzIiwic2VuZGVyRm9yVHJhbnNmZXIiLCJwdWJsaWNWYWx1ZSIsInB1YmxpY093bmVyIiwic2VuZFByb29mIiwic2VuZFByb29mRGF0YSIsInNlbmRQcm9vZlNpZ25hdHVyZXMiLCJjb25zdHJ1Y3RTaWduYXR1cmVzIiwiY29uZmlkZW50aWFsVHJhbnNmZXIiLCJ0cmFuc2ZlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFFQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXJCOztBQUNBLElBQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLGtCQUFELENBQXpCOztBQUVBLElBQU1FLGVBQWUsR0FBR0MsU0FBUyxDQUFDSCxPQUFWLENBQWtCLHVCQUFsQixDQUF4Qjs7SUFDaUJJLFUsR0FBZUMsb0IsQ0FBekJDLE0sQ0FBVUYsVTtJQUNWRyxjLEdBQTZCUixLLENBQTdCUSxjO0lBQWdCQyxTLEdBQWFULEssQ0FBYlMsUztBQUV2QkMsUUFBUSxDQUFDLDZCQUFELEVBQWdDLFVBQUFDLFFBQVEsRUFBSTtBQUNoRCxNQUFNQyxHQUFHLEdBQUdWLFNBQVMsQ0FBQ1csZUFBVixFQUFaO0FBQ0EsTUFBTUMsS0FBSyxHQUFHWixTQUFTLENBQUNXLGVBQVYsRUFBZDtBQUVBRSxFQUFBQSxFQUFFLENBQUMsMENBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQkFBNkM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFDTFosZUFBZSxDQUFDYSxRQUFoQixFQURLOztBQUFBO0FBQ3JDQyxZQUFBQSx1QkFEcUM7QUFHM0NDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDBCQUFaO0FBSDJDO0FBQUEsbUJBSXBCbkIsS0FBSyxDQUFDb0IsSUFBTixDQUFXQyxNQUFYLENBQWtCVCxHQUFHLENBQUNVLFNBQXRCLEVBQWlDLEdBQWpDLENBSm9COztBQUFBO0FBSXJDQyxZQUFBQSxRQUpxQztBQUFBO0FBQUEsbUJBS1B2QixLQUFLLENBQUNvQixJQUFOLENBQVdJLG1CQUFYLEVBTE87O0FBQUE7QUFLckNDLFlBQUFBLHFCQUxxQztBQU1yQ0MsWUFBQUEsaUJBTnFDLEdBTWpCSCxRQU5pQjtBQU9yQ0ksWUFBQUEsV0FQcUMsR0FPdkIsQ0FBQ0osUUFBRCxDQVB1QjtBQVFyQ0ssWUFBQUEsZ0JBUnFDLEdBUWxCWCx1QkFBdUIsQ0FBQ1ksT0FSTjtBQVNyQ0MsWUFBQUEsU0FUcUMsR0FTekIsSUFBSXJCLFNBQUosQ0FBY2dCLHFCQUFkLEVBQXFDQyxpQkFBckMsRUFBd0RDLFdBQXhELEVBQXFFQyxnQkFBckUsQ0FUeUI7QUFVckNHLFlBQUFBLFFBVnFDLEdBVTFCRCxTQUFTLENBQUNFLFNBQVYsRUFWMEI7QUFBQTtBQUFBLG1CQVd4QmYsdUJBQXVCLENBQUNnQixnQkFBeEIsQ0FBeUM1QixVQUF6QyxFQUFxRDBCLFFBQXJELENBWHdCOztBQUFBO0FBV3JDRyxZQUFBQSxJQVhxQztBQVkzQ2hCLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZZSxJQUFJLENBQUNDLElBQWpCO0FBQ0FqQixZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwyQ0FBWjtBQUVBRCxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwyQ0FBWjtBQWYyQztBQUFBLG1CQWdCcEJuQixLQUFLLENBQUNvQixJQUFOLENBQVdDLE1BQVgsQ0FBa0JULEdBQUcsQ0FBQ1UsU0FBdEIsRUFBaUMsRUFBakMsQ0FoQm9COztBQUFBO0FBZ0JyQ2MsWUFBQUEsUUFoQnFDO0FBQUE7QUFBQSxtQkFpQmxCcEMsS0FBSyxDQUFDb0IsSUFBTixDQUFXQyxNQUFYLENBQWtCUCxLQUFLLENBQUNRLFNBQXhCLEVBQW1DLEVBQW5DLENBakJrQjs7QUFBQTtBQWlCckNlLFlBQUFBLFVBakJxQztBQWtCckNDLFlBQUFBLFVBbEJxQyxHQWtCeEIsQ0FBQ2YsUUFBRCxDQWxCd0I7QUFtQnJDZ0IsWUFBQUEsV0FuQnFDLEdBbUJ2QixDQUFDSCxRQUFELEVBQVdDLFVBQVgsQ0FuQnVCO0FBb0JyQ0csWUFBQUEsaUJBcEJxQyxHQW9CakI3QixRQUFRLENBQUMsQ0FBRCxDQXBCUztBQXFCckM4QixZQUFBQSxXQXJCcUMsR0FxQnZCLENBckJ1QjtBQXNCckNDLFlBQUFBLFdBdEJxQyxHQXNCdkI5QixHQUFHLENBQUNpQixPQXRCbUI7QUF1QnJDYyxZQUFBQSxTQXZCcUMsR0F1QnpCLElBQUluQyxjQUFKLENBQW1COEIsVUFBbkIsRUFBK0JDLFdBQS9CLEVBQTRDQyxpQkFBNUMsRUFBK0RDLFdBQS9ELEVBQTRFQyxXQUE1RSxDQXZCeUI7QUF3QnJDRSxZQUFBQSxhQXhCcUMsR0F3QnJCRCxTQUFTLENBQUNYLFNBQVYsQ0FBb0JmLHVCQUF1QixDQUFDWSxPQUE1QyxDQXhCcUI7QUF5QnJDZ0IsWUFBQUEsbUJBekJxQyxHQXlCZkYsU0FBUyxDQUFDRyxtQkFBVixDQUE4QjdCLHVCQUF1QixDQUFDWSxPQUF0RCxFQUErRCxDQUFDakIsR0FBRCxDQUEvRCxDQXpCZTtBQUFBO0FBQUEsbUJBMEJwQkssdUJBQXVCLENBQUM4QixvQkFBeEIsQ0FBNkNILGFBQTdDLEVBQTREQyxtQkFBNUQsQ0ExQm9COztBQUFBO0FBMEJyQ0csWUFBQUEsUUExQnFDO0FBMkIzQzlCLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZNkIsUUFBUSxDQUFDYixJQUFyQjtBQUNBakIsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkRBQVo7O0FBNUIyQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUE3QyxHQUFGO0FBOEJILENBbENPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3V0a21haGVzaHdhcmkyNDUvV29yay9Qcm9qZWN0cy9teUF6dGVjL3Rlc3QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXRpbHMgZnJvbSAnQGF6dGVjL2Rldi11dGlscyc7XG5cbmNvbnN0IGF6dGVjID0gcmVxdWlyZSgnYXp0ZWMuanMnKTtcbmNvbnN0IHNlY3AyNTZrMSA9IHJlcXVpcmUoJ0BhenRlYy9zZWNwMjU2azEnKTtcblxuY29uc3QgWmtBc3NldE1pbnRhYmxlID0gYXJ0aWZhY3RzLnJlcXVpcmUoJy4vWmtBc3NldE1pbnRhYmxlLnNvbCcpO1xuY29uc3Qge3Byb29mcyA6IHtNSU5UX1BST09GfX0gPSB1dGlscztcbmNvbnN0IHtKb2luU3BsaXRQcm9vZiwgTWludFByb29mfSA9IGF6dGVjO1xuXG5jb250cmFjdCgnVGVzdCBBenRlYyBQcml2YWN5IFByb3RvY29sJywgYWNjb3VudHMgPT4ge1xuICAgIGNvbnN0IGJvYiA9IHNlY3AyNTZrMS5nZW5lcmF0ZUFjY291bnQoKTtcbiAgICBjb25zdCBzYWxseSA9IHNlY3AyNTZrMS5nZW5lcmF0ZUFjY291bnQoKTtcblxuICAgIGl0KCdTaW11bGF0ZSBNaW50aW5nIGFuZCBVbmlsYXRlcmFsIFRyYW5zZmVyJywgYXN5bmMoKSA9PiB7XG4gICAgICAgIGNvbnN0IFprQXNzZXRNaW50YWJsZUluc3RhbmNlID0gYXdhaXQgWmtBc3NldE1pbnRhYmxlLmRlcGxveWVkKCk7XG4gIFxuICAgICAgICBjb25zb2xlLmxvZygnR2l2ZSBCb2Igbm90ZXMgd29ydGggMTAwJyk7XG4gICAgICAgIGNvbnN0IGJvYk5vdGUxID0gYXdhaXQgYXp0ZWMubm90ZS5jcmVhdGUoYm9iLnB1YmxpY0tleSwgMTAwKTtcbiAgICAgICAgY29uc3QgY3VycmVudFRvdGFsVmFsdWVOb3RlID0gYXdhaXQgYXp0ZWMubm90ZS5jcmVhdGVaZXJvVmFsdWVOb3RlKCk7XG4gICAgICAgIGNvbnN0IG5ld1RvdGFsVmFsdWVOb3RlID0gYm9iTm90ZTE7XG4gICAgICAgIGNvbnN0IG1pbnRlZE5vdGVzID0gW2JvYk5vdGUxXTtcbiAgICAgICAgY29uc3Qgc2VuZGVyRm9yTWludGluZyA9IFprQXNzZXRNaW50YWJsZUluc3RhbmNlLmFkZHJlc3M7XG4gICAgICAgIGNvbnN0IG1pbnRQcm9vZiA9IG5ldyBNaW50UHJvb2YoY3VycmVudFRvdGFsVmFsdWVOb3RlLCBuZXdUb3RhbFZhbHVlTm90ZSwgbWludGVkTm90ZXMsIHNlbmRlckZvck1pbnRpbmcpO1xuICAgICAgICBjb25zdCBtaW50RGF0YSA9IG1pbnRQcm9vZi5lbmNvZGVBQkkoKTtcbiAgICAgICAgY29uc3QgbWludCA9IGF3YWl0IFprQXNzZXRNaW50YWJsZUluc3RhbmNlLmNvbmZpZGVudGlhbE1pbnQoTUlOVF9QUk9PRiwgbWludERhdGEpO1xuICAgICAgICBjb25zb2xlLmxvZyhtaW50LmxvZ3MpO1xuICAgICAgICBjb25zb2xlLmxvZygnU3VjY2Vzc2Z1bGx5IGdpdmVuIG5vdGVzIHdvcnRoIDEwMCB0byBCb2InKTtcblxuICAgICAgICBjb25zb2xlLmxvZygnVHJhbnNmZXIgbm90ZXMgd29ydGggMjUgZnJvbSBCb2IgdG8gU2FsbHknKTtcbiAgICAgICAgY29uc3QgYm9iTm90ZTIgPSBhd2FpdCBhenRlYy5ub3RlLmNyZWF0ZShib2IucHVibGljS2V5LCA3NSk7XG4gICAgICAgIGNvbnN0IHNhbGx5Tm90ZTEgPSBhd2FpdCBhenRlYy5ub3RlLmNyZWF0ZShzYWxseS5wdWJsaWNLZXksIDI1KTtcbiAgICAgICAgY29uc3QgaW5wdXROb3RlcyA9IFtib2JOb3RlMV07XG4gICAgICAgIGNvbnN0IG91dHB1dE5vdGVzID0gW2JvYk5vdGUyLCBzYWxseU5vdGUxXTtcbiAgICAgICAgY29uc3Qgc2VuZGVyRm9yVHJhbnNmZXIgPSBhY2NvdW50c1swXTtcbiAgICAgICAgY29uc3QgcHVibGljVmFsdWUgPSAwO1xuICAgICAgICBjb25zdCBwdWJsaWNPd25lciA9IGJvYi5hZGRyZXNzO1xuICAgICAgICBjb25zdCBzZW5kUHJvb2YgPSBuZXcgSm9pblNwbGl0UHJvb2YoaW5wdXROb3Rlcywgb3V0cHV0Tm90ZXMsIHNlbmRlckZvclRyYW5zZmVyLCBwdWJsaWNWYWx1ZSwgcHVibGljT3duZXIpO1xuICAgICAgICBjb25zdCBzZW5kUHJvb2ZEYXRhID0gc2VuZFByb29mLmVuY29kZUFCSShaa0Fzc2V0TWludGFibGVJbnN0YW5jZS5hZGRyZXNzKTtcbiAgICAgICAgY29uc3Qgc2VuZFByb29mU2lnbmF0dXJlcyA9IHNlbmRQcm9vZi5jb25zdHJ1Y3RTaWduYXR1cmVzKFprQXNzZXRNaW50YWJsZUluc3RhbmNlLmFkZHJlc3MsIFtib2JdKTtcbiAgICAgICAgY29uc3QgdHJhbnNmZXIgPSBhd2FpdCBaa0Fzc2V0TWludGFibGVJbnN0YW5jZS5jb25maWRlbnRpYWxUcmFuc2ZlcihzZW5kUHJvb2ZEYXRhLCBzZW5kUHJvb2ZTaWduYXR1cmVzKTtcbiAgICAgICAgY29uc29sZS5sb2codHJhbnNmZXIubG9ncyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdTdWNjZXNzZnVsbHkgdHJhbnNmZXJyZWQgbm90ZXMgd29ydGggMjUgZnJvbSBCb2IgdG8gU2FsbHknKTtcbiAgICB9KTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "demo.js"
      ],
      "names": [
        "aztec",
        "require",
        "secp256k1",
        "ZkAssetMintable",
        "artifacts",
        "MINT_PROOF",
        "utils",
        "proofs",
        "JoinSplitProof",
        "MintProof",
        "contract",
        "accounts",
        "bob",
        "generateAccount",
        "sally",
        "it",
        "deployed",
        "ZkAssetMintableInstance",
        "console",
        "log",
        "note",
        "create",
        "publicKey",
        "bobNote1",
        "createZeroValueNote",
        "currentTotalValueNote",
        "newTotalValueNote",
        "mintedNotes",
        "senderForMinting",
        "address",
        "mintProof",
        "mintData",
        "encodeABI",
        "confidentialMint",
        "mint",
        "logs",
        "bobNote2",
        "sallyNote1",
        "inputNotes",
        "outputNotes",
        "senderForTransfer",
        "publicValue",
        "publicOwner",
        "sendProof",
        "sendProofData",
        "sendProofSignatures",
        "constructSignatures",
        "confidentialTransfer",
        "transfer"
      ],
      "mappings": ";;;;;;;;AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AAEA,IAAME,eAAe,GAAGC,SAAS,CAACH,OAAV,CAAkB,uBAAlB,CAAxB;;IACiBI,U,GAAeC,oB,CAAzBC,M,CAAUF,U;IACVG,c,GAA6BR,K,CAA7BQ,c;IAAgBC,S,GAAaT,K,CAAbS,S;AAEvBC,QAAQ,CAAC,6BAAD,EAAgC,UAAAC,QAAQ,EAAI;AAChD,MAAMC,GAAG,GAAGV,SAAS,CAACW,eAAV,EAAZ;AACA,MAAMC,KAAK,GAAGZ,SAAS,CAACW,eAAV,EAAd;AAEAE,EAAAA,EAAE,CAAC,0CAAD;AAAA;AAAA;AAAA;AAAA,+BAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLZ,eAAe,CAACa,QAAhB,EADK;;AAAA;AACrCC,YAAAA,uBADqC;AAG3CC,YAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAH2C;AAAA,mBAIpBnB,KAAK,CAACoB,IAAN,CAAWC,MAAX,CAAkBT,GAAG,CAACU,SAAtB,EAAiC,GAAjC,CAJoB;;AAAA;AAIrCC,YAAAA,QAJqC;AAAA;AAAA,mBAKPvB,KAAK,CAACoB,IAAN,CAAWI,mBAAX,EALO;;AAAA;AAKrCC,YAAAA,qBALqC;AAMrCC,YAAAA,iBANqC,GAMjBH,QANiB;AAOrCI,YAAAA,WAPqC,GAOvB,CAACJ,QAAD,CAPuB;AAQrCK,YAAAA,gBARqC,GAQlBX,uBAAuB,CAACY,OARN;AASrCC,YAAAA,SATqC,GASzB,IAAIrB,SAAJ,CAAcgB,qBAAd,EAAqCC,iBAArC,EAAwDC,WAAxD,EAAqEC,gBAArE,CATyB;AAUrCG,YAAAA,QAVqC,GAU1BD,SAAS,CAACE,SAAV,EAV0B;AAAA;AAAA,mBAWxBf,uBAAuB,CAACgB,gBAAxB,CAAyC5B,UAAzC,EAAqD0B,QAArD,CAXwB;;AAAA;AAWrCG,YAAAA,IAXqC;AAY3ChB,YAAAA,OAAO,CAACC,GAAR,CAAYe,IAAI,CAACC,IAAjB;AACAjB,YAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AAEAD,YAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AAf2C;AAAA,mBAgBpBnB,KAAK,CAACoB,IAAN,CAAWC,MAAX,CAAkBT,GAAG,CAACU,SAAtB,EAAiC,EAAjC,CAhBoB;;AAAA;AAgBrCc,YAAAA,QAhBqC;AAAA;AAAA,mBAiBlBpC,KAAK,CAACoB,IAAN,CAAWC,MAAX,CAAkBP,KAAK,CAACQ,SAAxB,EAAmC,EAAnC,CAjBkB;;AAAA;AAiBrCe,YAAAA,UAjBqC;AAkBrCC,YAAAA,UAlBqC,GAkBxB,CAACf,QAAD,CAlBwB;AAmBrCgB,YAAAA,WAnBqC,GAmBvB,CAACH,QAAD,EAAWC,UAAX,CAnBuB;AAoBrCG,YAAAA,iBApBqC,GAoBjB7B,QAAQ,CAAC,CAAD,CApBS;AAqBrC8B,YAAAA,WArBqC,GAqBvB,CArBuB;AAsBrCC,YAAAA,WAtBqC,GAsBvB9B,GAAG,CAACiB,OAtBmB;AAuBrCc,YAAAA,SAvBqC,GAuBzB,IAAInC,cAAJ,CAAmB8B,UAAnB,EAA+BC,WAA/B,EAA4CC,iBAA5C,EAA+DC,WAA/D,EAA4EC,WAA5E,CAvByB;AAwBrCE,YAAAA,aAxBqC,GAwBrBD,SAAS,CAACX,SAAV,CAAoBf,uBAAuB,CAACY,OAA5C,CAxBqB;AAyBrCgB,YAAAA,mBAzBqC,GAyBfF,SAAS,CAACG,mBAAV,CAA8B7B,uBAAuB,CAACY,OAAtD,EAA+D,CAACjB,GAAD,CAA/D,CAzBe;AAAA;AAAA,mBA0BpBK,uBAAuB,CAAC8B,oBAAxB,CAA6CH,aAA7C,EAA4DC,mBAA5D,CA1BoB;;AAAA;AA0BrCG,YAAAA,QA1BqC;AA2B3C9B,YAAAA,OAAO,CAACC,GAAR,CAAY6B,QAAQ,CAACb,IAArB;AACAjB,YAAAA,OAAO,CAACC,GAAR,CAAY,2DAAZ;;AA5B2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7C,GAAF;AA8BH,CAlCO,CAAR",
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "sourcesContent": [
        "import utils from '@aztec/dev-utils';\n\nconst aztec = require('aztec.js');\nconst secp256k1 = require('@aztec/secp256k1');\n\nconst ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\nconst {proofs : {MINT_PROOF}} = utils;\nconst {JoinSplitProof, MintProof} = aztec;\n\ncontract('Test Aztec Privacy Protocol', accounts => {\n    const bob = secp256k1.generateAccount();\n    const sally = secp256k1.generateAccount();\n\n    it('Simulate Minting and Unilateral Transfer', async() => {\n        const ZkAssetMintableInstance = await ZkAssetMintable.deployed();\n  \n        console.log('Give Bob notes worth 100');\n        const bobNote1 = await aztec.note.create(bob.publicKey, 100);\n        const currentTotalValueNote = await aztec.note.createZeroValueNote();\n        const newTotalValueNote = bobNote1;\n        const mintedNotes = [bobNote1];\n        const senderForMinting = ZkAssetMintableInstance.address;\n        const mintProof = new MintProof(currentTotalValueNote, newTotalValueNote, mintedNotes, senderForMinting);\n        const mintData = mintProof.encodeABI();\n        const mint = await ZkAssetMintableInstance.confidentialMint(MINT_PROOF, mintData);\n        console.log(mint.logs);\n        console.log('Successfully given notes worth 100 to Bob');\n\n        console.log('Transfer notes worth 25 from Bob to Sally');\n        const bobNote2 = await aztec.note.create(bob.publicKey, 75);\n        const sallyNote1 = await aztec.note.create(sally.publicKey, 25);\n        const inputNotes = [bobNote1];\n        const outputNotes = [bobNote2, sallyNote1];\n        const senderForTransfer = accounts[0];\n        const publicValue = 0;\n        const publicOwner = bob.address;\n        const sendProof = new JoinSplitProof(inputNotes, outputNotes, senderForTransfer, publicValue, publicOwner);\n        const sendProofData = sendProof.encodeABI(ZkAssetMintableInstance.address);\n        const sendProofSignatures = sendProof.constructSignatures(ZkAssetMintableInstance.address, [bob]);\n        const transfer = await ZkAssetMintableInstance.confidentialTransfer(sendProofData, sendProofSignatures);\n        console.log(transfer.logs);\n        console.log('Successfully transferred notes worth 25 from Bob to Sally');\n    });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570089452477
  },
  "{\"sourceRoot\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"filename\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test/temp.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/temp.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/temp.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/temp.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
        "sourceFileName": "temp.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _devUtils = _interopRequireDefault(require(\"@aztec/dev-utils\"));\n\nvar _encryption = require(\"../scripts/encryption.js\");\n\nvar aztec = require('aztec.js');\n\nvar secp256k1 = require('@aztec/secp256k1');\n\ncontract('Test Not encryption and decryption', function (accounts) {\n  var alice = secp256k1.generateAccount();\n  var bob = secp256k1.generateAccount();\n  var charlie = secp256k1.generateAccount();\n  var encryptedViewingKey;\n  it('Create and Encrypt Note',\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee() {\n    var note, viewingKey;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return aztec.note.create(alice.publicKey, 123);\n\n          case 2:\n            note = _context.sent;\n            viewingKey = note.exportNote().viewingKey;\n            console.log(viewingKey);\n            _context.next = 7;\n            return (0, _encryption.encryptMessage)(bob.publicKey, viewingKey);\n\n          case 7:\n            encryptedViewingKey = _context.sent;\n            console.log(encryptedViewingKey);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n  it('Successful Decryption of Note',\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee2() {\n    var viewingKey, note;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return (0, _encryption.decryptMessage)(bob.privateKey, encryptedViewingKey);\n\n          case 2:\n            viewingKey = _context2.sent;\n            console.log(viewingKey);\n            _context2.next = 6;\n            return aztec.note.fromViewKey(viewingKey);\n\n          case 6:\n            note = _context2.sent;\n            console.log(note.k.toNumber());\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })));\n  it('Unsuccessful Decryption of Note',\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee3() {\n    var viewingKey, note;\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return (0, _encryption.decryptMessage)(charlie.privateKey, encryptedViewingKey);\n\n          case 2:\n            viewingKey = _context3.sent;\n            console.log(viewingKey);\n            _context3.next = 6;\n            return aztec.note.fromViewKey(viewingKey);\n\n          case 6:\n            note = _context3.sent;\n            console.log(note.k.toNumber());\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlbXAuanMiXSwibmFtZXMiOlsiYXp0ZWMiLCJyZXF1aXJlIiwic2VjcDI1NmsxIiwiY29udHJhY3QiLCJhY2NvdW50cyIsImFsaWNlIiwiZ2VuZXJhdGVBY2NvdW50IiwiYm9iIiwiY2hhcmxpZSIsImVuY3J5cHRlZFZpZXdpbmdLZXkiLCJpdCIsIm5vdGUiLCJjcmVhdGUiLCJwdWJsaWNLZXkiLCJ2aWV3aW5nS2V5IiwiZXhwb3J0Tm90ZSIsImNvbnNvbGUiLCJsb2ciLCJwcml2YXRlS2V5IiwiZnJvbVZpZXdLZXkiLCJrIiwidG9OdW1iZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUFyQjs7QUFDQSxJQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxrQkFBRCxDQUF6Qjs7QUFFQUUsUUFBUSxDQUFDLG9DQUFELEVBQXVDLFVBQUFDLFFBQVEsRUFBSTtBQUN2RCxNQUFNQyxLQUFLLEdBQUdILFNBQVMsQ0FBQ0ksZUFBVixFQUFkO0FBQ0EsTUFBTUMsR0FBRyxHQUFHTCxTQUFTLENBQUNJLGVBQVYsRUFBWjtBQUNBLE1BQU1FLE9BQU8sR0FBR04sU0FBUyxDQUFDSSxlQUFWLEVBQWhCO0FBQ0EsTUFBSUcsbUJBQUo7QUFFQUMsRUFBQUEsRUFBRSxDQUFDLHlCQUFEO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBQTRCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ1BWLEtBQUssQ0FBQ1csSUFBTixDQUFXQyxNQUFYLENBQWtCUCxLQUFLLENBQUNRLFNBQXhCLEVBQW1DLEdBQW5DLENBRE87O0FBQUE7QUFDcEJGLFlBQUFBLElBRG9CO0FBRXBCRyxZQUFBQSxVQUZvQixHQUVQSCxJQUFJLENBQUNJLFVBQUwsR0FBa0JELFVBRlg7QUFHMUJFLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxVQUFaO0FBSDBCO0FBQUEsbUJBSUUsZ0NBQWVQLEdBQUcsQ0FBQ00sU0FBbkIsRUFBOEJDLFVBQTlCLENBSkY7O0FBQUE7QUFJMUJMLFlBQUFBLG1CQUowQjtBQUsxQk8sWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlSLG1CQUFaOztBQUwwQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUE1QixHQUFGO0FBUUFDLEVBQUFBLEVBQUUsQ0FBQywrQkFBRDtBQUFBO0FBQUE7QUFBQTtBQUFBLCtCQUFrQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNQLGdDQUFlSCxHQUFHLENBQUNXLFVBQW5CLEVBQStCVCxtQkFBL0IsQ0FETzs7QUFBQTtBQUMxQkssWUFBQUEsVUFEMEI7QUFFaENFLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxVQUFaO0FBRmdDO0FBQUEsbUJBR2JkLEtBQUssQ0FBQ1csSUFBTixDQUFXUSxXQUFYLENBQXVCTCxVQUF2QixDQUhhOztBQUFBO0FBRzFCSCxZQUFBQSxJQUgwQjtBQUloQ0ssWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlOLElBQUksQ0FBQ1MsQ0FBTCxDQUFPQyxRQUFQLEVBQVo7O0FBSmdDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWxDLEdBQUY7QUFPQVgsRUFBQUEsRUFBRSxDQUFDLGlDQUFEO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBQW9DO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ1QsZ0NBQWVGLE9BQU8sQ0FBQ1UsVUFBdkIsRUFBbUNULG1CQUFuQyxDQURTOztBQUFBO0FBQzVCSyxZQUFBQSxVQUQ0QjtBQUVsQ0UsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlILFVBQVo7QUFGa0M7QUFBQSxtQkFHZmQsS0FBSyxDQUFDVyxJQUFOLENBQVdRLFdBQVgsQ0FBdUJMLFVBQXZCLENBSGU7O0FBQUE7QUFHNUJILFlBQUFBLElBSDRCO0FBSWxDSyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWU4sSUFBSSxDQUFDUyxDQUFMLENBQU9DLFFBQVAsRUFBWjs7QUFKa0M7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBcEMsR0FBRjtBQU1ILENBM0JPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3V0a21haGVzaHdhcmkyNDUvV29yay9Qcm9qZWN0cy9teUF6dGVjL3Rlc3QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXRpbHMgZnJvbSAnQGF6dGVjL2Rldi11dGlscyc7XG5pbXBvcnQge2VuY3J5cHRNZXNzYWdlLCBkZWNyeXB0TWVzc2FnZX0gZnJvbSAnLi4vc2NyaXB0cy9lbmNyeXB0aW9uLmpzJztcblxuY29uc3QgYXp0ZWMgPSByZXF1aXJlKCdhenRlYy5qcycpO1xuY29uc3Qgc2VjcDI1NmsxID0gcmVxdWlyZSgnQGF6dGVjL3NlY3AyNTZrMScpO1xuXG5jb250cmFjdCgnVGVzdCBOb3QgZW5jcnlwdGlvbiBhbmQgZGVjcnlwdGlvbicsIGFjY291bnRzID0+IHtcbiAgICBjb25zdCBhbGljZSA9IHNlY3AyNTZrMS5nZW5lcmF0ZUFjY291bnQoKTtcbiAgICBjb25zdCBib2IgPSBzZWNwMjU2azEuZ2VuZXJhdGVBY2NvdW50KCk7XG4gICAgY29uc3QgY2hhcmxpZSA9IHNlY3AyNTZrMS5nZW5lcmF0ZUFjY291bnQoKTtcbiAgICBsZXQgZW5jcnlwdGVkVmlld2luZ0tleTtcblxuICAgIGl0KCdDcmVhdGUgYW5kIEVuY3J5cHQgTm90ZScsIGFzeW5jKCkgPT4ge1xuICAgICAgICBjb25zdCBub3RlID0gYXdhaXQgYXp0ZWMubm90ZS5jcmVhdGUoYWxpY2UucHVibGljS2V5LCAxMjMpO1xuICAgICAgICBjb25zdCB2aWV3aW5nS2V5ID0gbm90ZS5leHBvcnROb3RlKCkudmlld2luZ0tleTtcbiAgICAgICAgY29uc29sZS5sb2codmlld2luZ0tleSk7XG4gICAgICAgIGVuY3J5cHRlZFZpZXdpbmdLZXkgPSBhd2FpdCBlbmNyeXB0TWVzc2FnZShib2IucHVibGljS2V5LCB2aWV3aW5nS2V5KTtcbiAgICAgICAgY29uc29sZS5sb2coZW5jcnlwdGVkVmlld2luZ0tleSk7XG4gICAgfSk7XG5cbiAgICBpdCgnU3VjY2Vzc2Z1bCBEZWNyeXB0aW9uIG9mIE5vdGUnLCBhc3luYygpID0+IHtcbiAgICAgICAgY29uc3Qgdmlld2luZ0tleSA9IGF3YWl0IGRlY3J5cHRNZXNzYWdlKGJvYi5wcml2YXRlS2V5LCBlbmNyeXB0ZWRWaWV3aW5nS2V5KTtcbiAgICAgICAgY29uc29sZS5sb2codmlld2luZ0tleSk7XG4gICAgICAgIGNvbnN0IG5vdGUgPSBhd2FpdCBhenRlYy5ub3RlLmZyb21WaWV3S2V5KHZpZXdpbmdLZXkpO1xuICAgICAgICBjb25zb2xlLmxvZyhub3RlLmsudG9OdW1iZXIoKSk7XG4gICAgfSk7XG5cbiAgICBpdCgnVW5zdWNjZXNzZnVsIERlY3J5cHRpb24gb2YgTm90ZScsIGFzeW5jKCkgPT4ge1xuICAgICAgICBjb25zdCB2aWV3aW5nS2V5ID0gYXdhaXQgZGVjcnlwdE1lc3NhZ2UoY2hhcmxpZS5wcml2YXRlS2V5LCBlbmNyeXB0ZWRWaWV3aW5nS2V5KTtcbiAgICAgICAgY29uc29sZS5sb2codmlld2luZ0tleSk7XG4gICAgICAgIGNvbnN0IG5vdGUgPSBhd2FpdCBhenRlYy5ub3RlLmZyb21WaWV3S2V5KHZpZXdpbmdLZXkpO1xuICAgICAgICBjb25zb2xlLmxvZyhub3RlLmsudG9OdW1iZXIoKSk7XG4gICAgfSk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "temp.js"
      ],
      "names": [
        "aztec",
        "require",
        "secp256k1",
        "contract",
        "accounts",
        "alice",
        "generateAccount",
        "bob",
        "charlie",
        "encryptedViewingKey",
        "it",
        "note",
        "create",
        "publicKey",
        "viewingKey",
        "exportNote",
        "console",
        "log",
        "privateKey",
        "fromViewKey",
        "k",
        "toNumber"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AAEAE,QAAQ,CAAC,oCAAD,EAAuC,UAAAC,QAAQ,EAAI;AACvD,MAAMC,KAAK,GAAGH,SAAS,CAACI,eAAV,EAAd;AACA,MAAMC,GAAG,GAAGL,SAAS,CAACI,eAAV,EAAZ;AACA,MAAME,OAAO,GAAGN,SAAS,CAACI,eAAV,EAAhB;AACA,MAAIG,mBAAJ;AAEAC,EAAAA,EAAE,CAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,+BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPV,KAAK,CAACW,IAAN,CAAWC,MAAX,CAAkBP,KAAK,CAACQ,SAAxB,EAAmC,GAAnC,CADO;;AAAA;AACpBF,YAAAA,IADoB;AAEpBG,YAAAA,UAFoB,GAEPH,IAAI,CAACI,UAAL,GAAkBD,UAFX;AAG1BE,YAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAH0B;AAAA,mBAIE,gCAAeP,GAAG,CAACM,SAAnB,EAA8BC,UAA9B,CAJF;;AAAA;AAI1BL,YAAAA,mBAJ0B;AAK1BO,YAAAA,OAAO,CAACC,GAAR,CAAYR,mBAAZ;;AAL0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B,GAAF;AAQAC,EAAAA,EAAE,CAAC,+BAAD;AAAA;AAAA;AAAA;AAAA,+BAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACP,gCAAeH,GAAG,CAACW,UAAnB,EAA+BT,mBAA/B,CADO;;AAAA;AAC1BK,YAAAA,UAD0B;AAEhCE,YAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAFgC;AAAA,mBAGbd,KAAK,CAACW,IAAN,CAAWQ,WAAX,CAAuBL,UAAvB,CAHa;;AAAA;AAG1BH,YAAAA,IAH0B;AAIhCK,YAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACS,CAAL,CAAOC,QAAP,EAAZ;;AAJgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC,GAAF;AAOAX,EAAAA,EAAE,CAAC,iCAAD;AAAA;AAAA;AAAA;AAAA,+BAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACT,gCAAeF,OAAO,CAACU,UAAvB,EAAmCT,mBAAnC,CADS;;AAAA;AAC5BK,YAAAA,UAD4B;AAElCE,YAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAFkC;AAAA,mBAGfd,KAAK,CAACW,IAAN,CAAWQ,WAAX,CAAuBL,UAAvB,CAHe;;AAAA;AAG5BH,YAAAA,IAH4B;AAIlCK,YAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACS,CAAL,CAAOC,QAAP,EAAZ;;AAJkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC,GAAF;AAMH,CA3BO,CAAR",
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "sourcesContent": [
        "import utils from '@aztec/dev-utils';\nimport {encryptMessage, decryptMessage} from '../scripts/encryption.js';\n\nconst aztec = require('aztec.js');\nconst secp256k1 = require('@aztec/secp256k1');\n\ncontract('Test Not encryption and decryption', accounts => {\n    const alice = secp256k1.generateAccount();\n    const bob = secp256k1.generateAccount();\n    const charlie = secp256k1.generateAccount();\n    let encryptedViewingKey;\n\n    it('Create and Encrypt Note', async() => {\n        const note = await aztec.note.create(alice.publicKey, 123);\n        const viewingKey = note.exportNote().viewingKey;\n        console.log(viewingKey);\n        encryptedViewingKey = await encryptMessage(bob.publicKey, viewingKey);\n        console.log(encryptedViewingKey);\n    });\n\n    it('Successful Decryption of Note', async() => {\n        const viewingKey = await decryptMessage(bob.privateKey, encryptedViewingKey);\n        console.log(viewingKey);\n        const note = await aztec.note.fromViewKey(viewingKey);\n        console.log(note.k.toNumber());\n    });\n\n    it('Unsuccessful Decryption of Note', async() => {\n        const viewingKey = await decryptMessage(charlie.privateKey, encryptedViewingKey);\n        console.log(viewingKey);\n        const note = await aztec.note.fromViewKey(viewingKey);\n        console.log(note.k.toNumber());\n    });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570186679421
  },
  "{\"sourceRoot\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/scripts\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"filename\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/scripts/crypto.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/scripts",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/scripts/crypto.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/utkmaheshwari245/Work/Projects/myAztec/scripts/crypto.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/scripts/crypto.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/scripts",
        "sourceFileName": "crypto.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decryptMessage = exports.encryptMessage = exports.privateKeyToAddress = exports.privateKeyToPublicKey = exports.validatePrivateKeyFormat = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _ethCrypto = _interopRequireDefault(require(\"eth-crypto\"));\n\nvar secp256k1 = require('@aztec/secp256k1');\n\nvar validatePrivateKeyFormat = function validatePrivateKeyFormat(privateKey) {\n  var formattedKey = privateKey;\n\n  if (formattedKey.length === 64) {\n    formattedKey = \"0x\".concat(formattedKey);\n  }\n\n  if (!formattedKey.match(/^0x[a-f0-9]{64}$/i)) {\n    console.log('Private key format not valid', privateKey);\n    return '';\n  }\n\n  return formattedKey;\n};\n\nexports.validatePrivateKeyFormat = validatePrivateKeyFormat;\n\nvar privateKeyToPublicKey = function privateKeyToPublicKey(privateKey) {\n  var validPrivateKey = validatePrivateKeyFormat(privateKey);\n\n  if (!validPrivateKey) {\n    return '';\n  }\n\n  var _secp256k1$accountFro = secp256k1.accountFromPrivateKey(validPrivateKey),\n      publicKey = _secp256k1$accountFro.publicKey;\n\n  return publicKey;\n};\n\nexports.privateKeyToPublicKey = privateKeyToPublicKey;\n\nvar privateKeyToAddress = function privateKeyToAddress(privateKey) {\n  var validPrivateKey = validatePrivateKeyFormat(privateKey);\n\n  if (!validPrivateKey) {\n    return '';\n  }\n\n  var _secp256k1$accountFro2 = secp256k1.accountFromPrivateKey(validPrivateKey),\n      address = _secp256k1$accountFro2.address;\n\n  return address;\n};\n\nexports.privateKeyToAddress = privateKeyToAddress;\n\nvar encryptMessage =\n/*#__PURE__*/\nfunction () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee(publicKey, msg) {\n    var encrypted;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _ethCrypto[\"default\"].encryptWithPublicKey(publicKey.slice(4), msg);\n\n          case 2:\n            encrypted = _context.sent;\n            return _context.abrupt(\"return\", _ethCrypto[\"default\"].cipher.stringify(encrypted));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function encryptMessage(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.encryptMessage = encryptMessage;\n\nvar decryptMessage =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee2(privateKey, encryptedMsg) {\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", _ethCrypto[\"default\"].decryptWithPrivateKey(privateKey, _ethCrypto[\"default\"].cipher.stringify(encryptedMsg)));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function decryptMessage(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.decryptMessage = decryptMessage;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyeXB0by5qcyJdLCJuYW1lcyI6WyJzZWNwMjU2azEiLCJyZXF1aXJlIiwidmFsaWRhdGVQcml2YXRlS2V5Rm9ybWF0IiwicHJpdmF0ZUtleSIsImZvcm1hdHRlZEtleSIsImxlbmd0aCIsIm1hdGNoIiwiY29uc29sZSIsImxvZyIsInByaXZhdGVLZXlUb1B1YmxpY0tleSIsInZhbGlkUHJpdmF0ZUtleSIsImFjY291bnRGcm9tUHJpdmF0ZUtleSIsInB1YmxpY0tleSIsInByaXZhdGVLZXlUb0FkZHJlc3MiLCJhZGRyZXNzIiwiZW5jcnlwdE1lc3NhZ2UiLCJtc2ciLCJFdGhDcnlwdG8iLCJlbmNyeXB0V2l0aFB1YmxpY0tleSIsInNsaWNlIiwiZW5jcnlwdGVkIiwiY2lwaGVyIiwic3RyaW5naWZ5IiwiZGVjcnlwdE1lc3NhZ2UiLCJlbmNyeXB0ZWRNc2ciLCJkZWNyeXB0V2l0aFByaXZhdGVLZXkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFFQSxJQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxrQkFBRCxDQUF6Qjs7QUFFTyxJQUFNQyx3QkFBd0IsR0FBRyxTQUEzQkEsd0JBQTJCLENBQUNDLFVBQUQsRUFBZ0I7QUFDdEQsTUFBSUMsWUFBWSxHQUFHRCxVQUFuQjs7QUFDQSxNQUFJQyxZQUFZLENBQUNDLE1BQWIsS0FBd0IsRUFBNUIsRUFBZ0M7QUFDOUJELElBQUFBLFlBQVksZUFBUUEsWUFBUixDQUFaO0FBQ0Q7O0FBQ0QsTUFBSSxDQUFDQSxZQUFZLENBQUNFLEtBQWIsQ0FBbUIsbUJBQW5CLENBQUwsRUFBOEM7QUFDNUNDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDhCQUFaLEVBQTRDTCxVQUE1QztBQUNBLFdBQU8sRUFBUDtBQUNEOztBQUNELFNBQU9DLFlBQVA7QUFDRCxDQVZNOzs7O0FBWUEsSUFBTUsscUJBQXFCLEdBQUcsU0FBeEJBLHFCQUF3QixDQUFDTixVQUFELEVBQWdCO0FBQ25ELE1BQU1PLGVBQWUsR0FBR1Isd0JBQXdCLENBQUNDLFVBQUQsQ0FBaEQ7O0FBQ0EsTUFBSSxDQUFDTyxlQUFMLEVBQXNCO0FBQ3BCLFdBQU8sRUFBUDtBQUNEOztBQUprRCw4QkFRL0NWLFNBQVMsQ0FBQ1cscUJBQVYsQ0FBZ0NELGVBQWhDLENBUitDO0FBQUEsTUFPakRFLFNBUGlELHlCQU9qREEsU0FQaUQ7O0FBU25ELFNBQU9BLFNBQVA7QUFDRCxDQVZNOzs7O0FBWUEsSUFBTUMsbUJBQW1CLEdBQUcsU0FBdEJBLG1CQUFzQixDQUFDVixVQUFELEVBQWdCO0FBQ2pELE1BQU1PLGVBQWUsR0FBR1Isd0JBQXdCLENBQUNDLFVBQUQsQ0FBaEQ7O0FBQ0EsTUFBSSxDQUFDTyxlQUFMLEVBQXNCO0FBQ3BCLFdBQU8sRUFBUDtBQUNEOztBQUpnRCwrQkFRN0NWLFNBQVMsQ0FBQ1cscUJBQVYsQ0FBZ0NELGVBQWhDLENBUjZDO0FBQUEsTUFPL0NJLE9BUCtDLDBCQU8vQ0EsT0FQK0M7O0FBU2pELFNBQU9BLE9BQVA7QUFDRCxDQVZNOzs7O0FBWUEsSUFBTUMsY0FBYztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBQUcsaUJBQU9ILFNBQVAsRUFBa0JJLEdBQWxCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ0pDLHNCQUFVQyxvQkFBVixDQUN0Qk4sU0FBUyxDQUFDTyxLQUFWLENBQWdCLENBQWhCLENBRHNCLEVBRXRCSCxHQUZzQixDQURJOztBQUFBO0FBQ3RCSSxZQUFBQSxTQURzQjtBQUFBLDZDQUtyQkgsc0JBQVVJLE1BQVYsQ0FBaUJDLFNBQWpCLENBQTJCRixTQUEzQixDQUxxQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFkTCxjQUFjO0FBQUE7QUFBQTtBQUFBLEdBQXBCOzs7O0FBUUEsSUFBTVEsY0FBYztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBQUcsa0JBQU9wQixVQUFQLEVBQW1CcUIsWUFBbkI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDhDQUM1QlAsc0JBQVVRLHFCQUFWLENBQ0V0QixVQURGLEVBRUVjLHNCQUFVSSxNQUFWLENBQWlCQyxTQUFqQixDQUEyQkUsWUFBM0IsQ0FGRixDQUQ0Qjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFkRCxjQUFjO0FBQUE7QUFBQTtBQUFBLEdBQXBCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy91dGttYWhlc2h3YXJpMjQ1L1dvcmsvUHJvamVjdHMvbXlBenRlYy9zY3JpcHRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV0aENyeXB0byBmcm9tICdldGgtY3J5cHRvJztcblxuY29uc3Qgc2VjcDI1NmsxID0gcmVxdWlyZSgnQGF6dGVjL3NlY3AyNTZrMScpO1xuXG5leHBvcnQgY29uc3QgdmFsaWRhdGVQcml2YXRlS2V5Rm9ybWF0ID0gKHByaXZhdGVLZXkpID0+IHtcbiAgbGV0IGZvcm1hdHRlZEtleSA9IHByaXZhdGVLZXk7XG4gIGlmIChmb3JtYXR0ZWRLZXkubGVuZ3RoID09PSA2NCkge1xuICAgIGZvcm1hdHRlZEtleSA9IGAweCR7Zm9ybWF0dGVkS2V5fWA7XG4gIH1cbiAgaWYgKCFmb3JtYXR0ZWRLZXkubWF0Y2goL14weFthLWYwLTldezY0fSQvaSkpIHtcbiAgICBjb25zb2xlLmxvZygnUHJpdmF0ZSBrZXkgZm9ybWF0IG5vdCB2YWxpZCcsIHByaXZhdGVLZXkpO1xuICAgIHJldHVybiAnJztcbiAgfVxuICByZXR1cm4gZm9ybWF0dGVkS2V5O1xufTtcblxuZXhwb3J0IGNvbnN0IHByaXZhdGVLZXlUb1B1YmxpY0tleSA9IChwcml2YXRlS2V5KSA9PiB7XG4gIGNvbnN0IHZhbGlkUHJpdmF0ZUtleSA9IHZhbGlkYXRlUHJpdmF0ZUtleUZvcm1hdChwcml2YXRlS2V5KTtcbiAgaWYgKCF2YWxpZFByaXZhdGVLZXkpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBjb25zdCB7XG4gICAgcHVibGljS2V5LFxuICB9ID0gc2VjcDI1NmsxLmFjY291bnRGcm9tUHJpdmF0ZUtleSh2YWxpZFByaXZhdGVLZXkpO1xuICByZXR1cm4gcHVibGljS2V5O1xufTtcblxuZXhwb3J0IGNvbnN0IHByaXZhdGVLZXlUb0FkZHJlc3MgPSAocHJpdmF0ZUtleSkgPT4ge1xuICBjb25zdCB2YWxpZFByaXZhdGVLZXkgPSB2YWxpZGF0ZVByaXZhdGVLZXlGb3JtYXQocHJpdmF0ZUtleSk7XG4gIGlmICghdmFsaWRQcml2YXRlS2V5KSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgY29uc3Qge1xuICAgIGFkZHJlc3MsXG4gIH0gPSBzZWNwMjU2azEuYWNjb3VudEZyb21Qcml2YXRlS2V5KHZhbGlkUHJpdmF0ZUtleSk7XG4gIHJldHVybiBhZGRyZXNzO1xufTtcblxuZXhwb3J0IGNvbnN0IGVuY3J5cHRNZXNzYWdlID0gYXN5bmMgKHB1YmxpY0tleSwgbXNnKSA9PiB7XG4gIGNvbnN0IGVuY3J5cHRlZCA9IGF3YWl0IEV0aENyeXB0by5lbmNyeXB0V2l0aFB1YmxpY0tleShcbiAgICBwdWJsaWNLZXkuc2xpY2UoNCksXG4gICAgbXNnLFxuICApO1xuICByZXR1cm4gRXRoQ3J5cHRvLmNpcGhlci5zdHJpbmdpZnkoZW5jcnlwdGVkKTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWNyeXB0TWVzc2FnZSA9IGFzeW5jIChwcml2YXRlS2V5LCBlbmNyeXB0ZWRNc2cpID0+XG4gIEV0aENyeXB0by5kZWNyeXB0V2l0aFByaXZhdGVLZXkoXG4gICAgcHJpdmF0ZUtleSxcbiAgICBFdGhDcnlwdG8uY2lwaGVyLnN0cmluZ2lmeShlbmNyeXB0ZWRNc2cpLFxuICApO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "crypto.js"
      ],
      "names": [
        "secp256k1",
        "require",
        "validatePrivateKeyFormat",
        "privateKey",
        "formattedKey",
        "length",
        "match",
        "console",
        "log",
        "privateKeyToPublicKey",
        "validPrivateKey",
        "accountFromPrivateKey",
        "publicKey",
        "privateKeyToAddress",
        "address",
        "encryptMessage",
        "msg",
        "EthCrypto",
        "encryptWithPublicKey",
        "slice",
        "encrypted",
        "cipher",
        "stringify",
        "decryptMessage",
        "encryptedMsg",
        "decryptWithPrivateKey"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AAEO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,UAAD,EAAgB;AACtD,MAAIC,YAAY,GAAGD,UAAnB;;AACA,MAAIC,YAAY,CAACC,MAAb,KAAwB,EAA5B,EAAgC;AAC9BD,IAAAA,YAAY,eAAQA,YAAR,CAAZ;AACD;;AACD,MAAI,CAACA,YAAY,CAACE,KAAb,CAAmB,mBAAnB,CAAL,EAA8C;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CL,UAA5C;AACA,WAAO,EAAP;AACD;;AACD,SAAOC,YAAP;AACD,CAVM;;;;AAYA,IAAMK,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACN,UAAD,EAAgB;AACnD,MAAMO,eAAe,GAAGR,wBAAwB,CAACC,UAAD,CAAhD;;AACA,MAAI,CAACO,eAAL,EAAsB;AACpB,WAAO,EAAP;AACD;;AAJkD,8BAQ/CV,SAAS,CAACW,qBAAV,CAAgCD,eAAhC,CAR+C;AAAA,MAOjDE,SAPiD,yBAOjDA,SAPiD;;AASnD,SAAOA,SAAP;AACD,CAVM;;;;AAYA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACV,UAAD,EAAgB;AACjD,MAAMO,eAAe,GAAGR,wBAAwB,CAACC,UAAD,CAAhD;;AACA,MAAI,CAACO,eAAL,EAAsB;AACpB,WAAO,EAAP;AACD;;AAJgD,+BAQ7CV,SAAS,CAACW,qBAAV,CAAgCD,eAAhC,CAR6C;AAAA,MAO/CI,OAP+C,0BAO/CA,OAP+C;;AASjD,SAAOA,OAAP;AACD,CAVM;;;;AAYA,IAAMC,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,iBAAOH,SAAP,EAAkBI,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJC,sBAAUC,oBAAV,CACtBN,SAAS,CAACO,KAAV,CAAgB,CAAhB,CADsB,EAEtBH,GAFsB,CADI;;AAAA;AACtBI,YAAAA,SADsB;AAAA,6CAKrBH,sBAAUI,MAAV,CAAiBC,SAAjB,CAA2BF,SAA3B,CALqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdL,cAAc;AAAA;AAAA;AAAA,GAApB;;;;AAQA,IAAMQ,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAOpB,UAAP,EAAmBqB,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,8CAC5BP,sBAAUQ,qBAAV,CACEtB,UADF,EAEEc,sBAAUI,MAAV,CAAiBC,SAAjB,CAA2BE,YAA3B,CAFF,CAD4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdD,cAAc;AAAA;AAAA;AAAA,GAApB",
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/scripts",
      "sourcesContent": [
        "import EthCrypto from 'eth-crypto';\n\nconst secp256k1 = require('@aztec/secp256k1');\n\nexport const validatePrivateKeyFormat = (privateKey) => {\n  let formattedKey = privateKey;\n  if (formattedKey.length === 64) {\n    formattedKey = `0x${formattedKey}`;\n  }\n  if (!formattedKey.match(/^0x[a-f0-9]{64}$/i)) {\n    console.log('Private key format not valid', privateKey);\n    return '';\n  }\n  return formattedKey;\n};\n\nexport const privateKeyToPublicKey = (privateKey) => {\n  const validPrivateKey = validatePrivateKeyFormat(privateKey);\n  if (!validPrivateKey) {\n    return '';\n  }\n\n  const {\n    publicKey,\n  } = secp256k1.accountFromPrivateKey(validPrivateKey);\n  return publicKey;\n};\n\nexport const privateKeyToAddress = (privateKey) => {\n  const validPrivateKey = validatePrivateKeyFormat(privateKey);\n  if (!validPrivateKey) {\n    return '';\n  }\n\n  const {\n    address,\n  } = secp256k1.accountFromPrivateKey(validPrivateKey);\n  return address;\n};\n\nexport const encryptMessage = async (publicKey, msg) => {\n  const encrypted = await EthCrypto.encryptWithPublicKey(\n    publicKey.slice(4),\n    msg,\n  );\n  return EthCrypto.cipher.stringify(encrypted);\n};\n\nexport const decryptMessage = async (privateKey, encryptedMsg) =>\n  EthCrypto.decryptWithPrivateKey(\n    privateKey,\n    EthCrypto.cipher.stringify(encryptedMsg),\n  );\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570185441900
  },
  "{\"sourceRoot\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/scripts\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"filename\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/scripts/encryption.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/scripts",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/scripts/encryption.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/utkmaheshwari245/Work/Projects/myAztec/scripts/encryption.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/scripts/encryption.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/scripts",
        "sourceFileName": "encryption.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decryptMessage = exports.encryptMessage = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _ethCrypto = _interopRequireDefault(require(\"eth-crypto\"));\n\nvar secp256k1 = require('@aztec/secp256k1');\n\nvar encryptMessage =\n/*#__PURE__*/\nfunction () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee(publicKey, msg) {\n    var encrypted;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _ethCrypto[\"default\"].encryptWithPublicKey(publicKey.slice(4), msg);\n\n          case 2:\n            encrypted = _context.sent;\n            return _context.abrupt(\"return\", _ethCrypto[\"default\"].cipher.stringify(encrypted));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function encryptMessage(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.encryptMessage = encryptMessage;\n\nvar decryptMessage =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee2(privateKey, encryptedMsg) {\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", _ethCrypto[\"default\"].decryptWithPrivateKey(privateKey, _ethCrypto[\"default\"].cipher.stringify(encryptedMsg)));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function decryptMessage(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.decryptMessage = decryptMessage;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVuY3J5cHRpb24uanMiXSwibmFtZXMiOlsic2VjcDI1NmsxIiwicmVxdWlyZSIsImVuY3J5cHRNZXNzYWdlIiwicHVibGljS2V5IiwibXNnIiwiRXRoQ3J5cHRvIiwiZW5jcnlwdFdpdGhQdWJsaWNLZXkiLCJzbGljZSIsImVuY3J5cHRlZCIsImNpcGhlciIsInN0cmluZ2lmeSIsImRlY3J5cHRNZXNzYWdlIiwicHJpdmF0ZUtleSIsImVuY3J5cHRlZE1zZyIsImRlY3J5cHRXaXRoUHJpdmF0ZUtleSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztBQUVBLElBQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQXpCOztBQUVPLElBQU1DLGNBQWM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLCtCQUFHLGlCQUFPQyxTQUFQLEVBQWtCQyxHQUFsQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNGQyxzQkFBVUMsb0JBQVYsQ0FBK0JILFNBQVMsQ0FBQ0ksS0FBVixDQUFnQixDQUFoQixDQUEvQixFQUFtREgsR0FBbkQsQ0FERTs7QUFBQTtBQUNwQkksWUFBQUEsU0FEb0I7QUFBQSw2Q0FFbkJILHNCQUFVSSxNQUFWLENBQWlCQyxTQUFqQixDQUEyQkYsU0FBM0IsQ0FGbUI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSDs7QUFBQSxrQkFBZE4sY0FBYztBQUFBO0FBQUE7QUFBQSxHQUFwQjs7OztBQUtBLElBQU1TLGNBQWM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLCtCQUFHLGtCQUFPQyxVQUFQLEVBQW1CQyxZQUFuQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsOENBQ25CUixzQkFBVVMscUJBQVYsQ0FBZ0NGLFVBQWhDLEVBQTRDUCxzQkFBVUksTUFBVixDQUFpQkMsU0FBakIsQ0FBMkJHLFlBQTNCLENBQTVDLENBRG1COztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQWRGLGNBQWM7QUFBQTtBQUFBO0FBQUEsR0FBcEIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3V0a21haGVzaHdhcmkyNDUvV29yay9Qcm9qZWN0cy9teUF6dGVjL3NjcmlwdHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXRoQ3J5cHRvIGZyb20gJ2V0aC1jcnlwdG8nO1xuXG5jb25zdCBzZWNwMjU2azEgPSByZXF1aXJlKCdAYXp0ZWMvc2VjcDI1NmsxJyk7XG5cbmV4cG9ydCBjb25zdCBlbmNyeXB0TWVzc2FnZSA9IGFzeW5jIChwdWJsaWNLZXksIG1zZykgPT4ge1xuICAgIGNvbnN0IGVuY3J5cHRlZCA9IGF3YWl0IEV0aENyeXB0by5lbmNyeXB0V2l0aFB1YmxpY0tleShwdWJsaWNLZXkuc2xpY2UoNCksIG1zZyk7XG4gICAgcmV0dXJuIEV0aENyeXB0by5jaXBoZXIuc3RyaW5naWZ5KGVuY3J5cHRlZCk7XG59O1xuXG5leHBvcnQgY29uc3QgZGVjcnlwdE1lc3NhZ2UgPSBhc3luYyAocHJpdmF0ZUtleSwgZW5jcnlwdGVkTXNnKSA9PiB7XG4gICAgcmV0dXJuIEV0aENyeXB0by5kZWNyeXB0V2l0aFByaXZhdGVLZXkocHJpdmF0ZUtleSwgRXRoQ3J5cHRvLmNpcGhlci5zdHJpbmdpZnkoZW5jcnlwdGVkTXNnKSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "encryption.js"
      ],
      "names": [
        "secp256k1",
        "require",
        "encryptMessage",
        "publicKey",
        "msg",
        "EthCrypto",
        "encryptWithPublicKey",
        "slice",
        "encrypted",
        "cipher",
        "stringify",
        "decryptMessage",
        "privateKey",
        "encryptedMsg",
        "decryptWithPrivateKey"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AAEO,IAAMC,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,iBAAOC,SAAP,EAAkBC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFC,sBAAUC,oBAAV,CAA+BH,SAAS,CAACI,KAAV,CAAgB,CAAhB,CAA/B,EAAmDH,GAAnD,CADE;;AAAA;AACpBI,YAAAA,SADoB;AAAA,6CAEnBH,sBAAUI,MAAV,CAAiBC,SAAjB,CAA2BF,SAA3B,CAFmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdN,cAAc;AAAA;AAAA;AAAA,GAApB;;;;AAKA,IAAMS,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAOC,UAAP,EAAmBC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,8CACnBR,sBAAUS,qBAAV,CAAgCF,UAAhC,EAA4CP,sBAAUI,MAAV,CAAiBC,SAAjB,CAA2BG,YAA3B,CAA5C,CADmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdF,cAAc;AAAA;AAAA;AAAA,GAApB",
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/scripts",
      "sourcesContent": [
        "import EthCrypto from 'eth-crypto';\n\nconst secp256k1 = require('@aztec/secp256k1');\n\nexport const encryptMessage = async (publicKey, msg) => {\n    const encrypted = await EthCrypto.encryptWithPublicKey(publicKey.slice(4), msg);\n    return EthCrypto.cipher.stringify(encrypted);\n};\n\nexport const decryptMessage = async (privateKey, encryptedMsg) => {\n    return EthCrypto.decryptWithPrivateKey(privateKey, EthCrypto.cipher.stringify(encryptedMsg));\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570186679413
  }
}