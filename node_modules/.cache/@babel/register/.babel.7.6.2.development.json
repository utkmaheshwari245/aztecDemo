{
  "{\"sourceRoot\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"filename\":\"/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocol.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/utkmaheshwari245/Work/Projects/myAztec\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocol.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/utkmaheshwari245/Work/Projects/myAztec",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocol.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/utkmaheshwari245/Work/Projects/myAztec/test/testAztecProtocol.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
        "sourceFileName": "testAztecProtocol.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _devUtils = _interopRequireDefault(require(\"@aztec/dev-utils\"));\n\nvar aztec = require('aztec.js');\n\nvar secp256k1 = require('@aztec/secp256k1');\n\nvar ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\n\nvar MINT_PROOF = _devUtils[\"default\"].proofs.MINT_PROOF;\nvar JoinSplitProof = aztec.JoinSplitProof,\n    MintProof = aztec.MintProof;\ncontract('Test Aztec Privacy Protocol', function (accounts) {\n  var alice = secp256k1.generateAccount();\n  var bob = secp256k1.generateAccount();\n  it('Simulate Minting and Unilateral Transfer',\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee() {\n    var ZkAssetMintableInstance, zeroValueNote, alice100Note, mintProof, mintData, mint, alice75Note, bob25Note, sendProof, sendProofData, sendProofSignatures, transfer;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ZkAssetMintable.deployed();\n\n          case 2:\n            ZkAssetMintableInstance = _context.sent;\n            console.log('Give Alice notes worth 100');\n            _context.next = 6;\n            return aztec.note.createZeroValueNote();\n\n          case 6:\n            zeroValueNote = _context.sent;\n            _context.next = 9;\n            return aztec.note.create(alice.publicKey, 100);\n\n          case 9:\n            alice100Note = _context.sent;\n            mintProof = new MintProof(zeroValueNote, alice100Note, [alice100Note], ZkAssetMintableInstance.address);\n            mintData = mintProof.encodeABI();\n            _context.next = 14;\n            return ZkAssetMintableInstance.confidentialMint(MINT_PROOF, mintData);\n\n          case 14:\n            mint = _context.sent;\n            console.log(mint.receipt);\n            console.log('Successfully given notes worth 100 to Alice');\n            console.log('Transfer notes worth 25 from Alice to Bob');\n            _context.next = 20;\n            return aztec.note.create(alice.publicKey, 75);\n\n          case 20:\n            alice75Note = _context.sent;\n            _context.next = 23;\n            return aztec.note.create(bob.publicKey, 25);\n\n          case 23:\n            bob25Note = _context.sent;\n            sendProof = new JoinSplitProof([alice100Note], [alice75Note, bob25Note], accounts[0], 0, accounts[0]);\n            sendProofData = sendProof.encodeABI(ZkAssetMintableInstance.address);\n            sendProofSignatures = sendProof.constructSignatures(ZkAssetMintableInstance.address, [alice]);\n            _context.next = 29;\n            return ZkAssetMintableInstance.confidentialTransfer(sendProofData, sendProofSignatures);\n\n          case 29:\n            transfer = _context.sent;\n            console.log(transfer.logs);\n            console.log('Successfully transferred notes worth 25 from Alice to Bob');\n\n          case 32:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3RBenRlY1Byb3RvY29sLmpzIl0sIm5hbWVzIjpbImF6dGVjIiwicmVxdWlyZSIsInNlY3AyNTZrMSIsIlprQXNzZXRNaW50YWJsZSIsImFydGlmYWN0cyIsIk1JTlRfUFJPT0YiLCJ1dGlscyIsInByb29mcyIsIkpvaW5TcGxpdFByb29mIiwiTWludFByb29mIiwiY29udHJhY3QiLCJhY2NvdW50cyIsImFsaWNlIiwiZ2VuZXJhdGVBY2NvdW50IiwiYm9iIiwiaXQiLCJkZXBsb3llZCIsIlprQXNzZXRNaW50YWJsZUluc3RhbmNlIiwiY29uc29sZSIsImxvZyIsIm5vdGUiLCJjcmVhdGVaZXJvVmFsdWVOb3RlIiwiemVyb1ZhbHVlTm90ZSIsImNyZWF0ZSIsInB1YmxpY0tleSIsImFsaWNlMTAwTm90ZSIsIm1pbnRQcm9vZiIsImFkZHJlc3MiLCJtaW50RGF0YSIsImVuY29kZUFCSSIsImNvbmZpZGVudGlhbE1pbnQiLCJtaW50IiwicmVjZWlwdCIsImFsaWNlNzVOb3RlIiwiYm9iMjVOb3RlIiwic2VuZFByb29mIiwic2VuZFByb29mRGF0YSIsInNlbmRQcm9vZlNpZ25hdHVyZXMiLCJjb25zdHJ1Y3RTaWduYXR1cmVzIiwiY29uZmlkZW50aWFsVHJhbnNmZXIiLCJ0cmFuc2ZlciIsImxvZ3MiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBRUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUFyQjs7QUFDQSxJQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxrQkFBRCxDQUF6Qjs7QUFFQSxJQUFNRSxlQUFlLEdBQUdDLFNBQVMsQ0FBQ0gsT0FBVixDQUFrQix1QkFBbEIsQ0FBeEI7O0lBQ2lCSSxVLEdBQWVDLG9CLENBQXpCQyxNLENBQVVGLFU7SUFDVkcsYyxHQUE2QlIsSyxDQUE3QlEsYztJQUFnQkMsUyxHQUFhVCxLLENBQWJTLFM7QUFFdkJDLFFBQVEsQ0FBQyw2QkFBRCxFQUFnQyxVQUFBQyxRQUFRLEVBQUk7QUFDaEQsTUFBTUMsS0FBSyxHQUFHVixTQUFTLENBQUNXLGVBQVYsRUFBZDtBQUNBLE1BQU1DLEdBQUcsR0FBR1osU0FBUyxDQUFDVyxlQUFWLEVBQVo7QUFFQUUsRUFBQUEsRUFBRSxDQUFDLDBDQUFEO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBQTZDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ0xaLGVBQWUsQ0FBQ2EsUUFBaEIsRUFESzs7QUFBQTtBQUNyQ0MsWUFBQUEsdUJBRHFDO0FBRzNDQyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSw0QkFBWjtBQUgyQztBQUFBLG1CQUlmbkIsS0FBSyxDQUFDb0IsSUFBTixDQUFXQyxtQkFBWCxFQUplOztBQUFBO0FBSXJDQyxZQUFBQSxhQUpxQztBQUFBO0FBQUEsbUJBS2hCdEIsS0FBSyxDQUFDb0IsSUFBTixDQUFXRyxNQUFYLENBQWtCWCxLQUFLLENBQUNZLFNBQXhCLEVBQW1DLEdBQW5DLENBTGdCOztBQUFBO0FBS3JDQyxZQUFBQSxZQUxxQztBQU1yQ0MsWUFBQUEsU0FOcUMsR0FNekIsSUFBSWpCLFNBQUosQ0FBY2EsYUFBZCxFQUE2QkcsWUFBN0IsRUFBMkMsQ0FBQ0EsWUFBRCxDQUEzQyxFQUEyRFIsdUJBQXVCLENBQUNVLE9BQW5GLENBTnlCO0FBT3JDQyxZQUFBQSxRQVBxQyxHQU8xQkYsU0FBUyxDQUFDRyxTQUFWLEVBUDBCO0FBQUE7QUFBQSxtQkFReEJaLHVCQUF1QixDQUFDYSxnQkFBeEIsQ0FBeUN6QixVQUF6QyxFQUFxRHVCLFFBQXJELENBUndCOztBQUFBO0FBUXJDRyxZQUFBQSxJQVJxQztBQVMzQ2IsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlZLElBQUksQ0FBQ0MsT0FBakI7QUFDQWQsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksNkNBQVo7QUFFQUQsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkNBQVo7QUFaMkM7QUFBQSxtQkFhakJuQixLQUFLLENBQUNvQixJQUFOLENBQVdHLE1BQVgsQ0FBa0JYLEtBQUssQ0FBQ1ksU0FBeEIsRUFBbUMsRUFBbkMsQ0FiaUI7O0FBQUE7QUFhckNTLFlBQUFBLFdBYnFDO0FBQUE7QUFBQSxtQkFjbkJqQyxLQUFLLENBQUNvQixJQUFOLENBQVdHLE1BQVgsQ0FBa0JULEdBQUcsQ0FBQ1UsU0FBdEIsRUFBaUMsRUFBakMsQ0FkbUI7O0FBQUE7QUFjckNVLFlBQUFBLFNBZHFDO0FBZXJDQyxZQUFBQSxTQWZxQyxHQWV6QixJQUFJM0IsY0FBSixDQUFtQixDQUFDaUIsWUFBRCxDQUFuQixFQUFtQyxDQUFDUSxXQUFELEVBQWNDLFNBQWQsQ0FBbkMsRUFBNkR2QixRQUFRLENBQUMsQ0FBRCxDQUFyRSxFQUEwRSxDQUExRSxFQUE2RUEsUUFBUSxDQUFDLENBQUQsQ0FBckYsQ0FmeUI7QUFnQnJDeUIsWUFBQUEsYUFoQnFDLEdBZ0JyQkQsU0FBUyxDQUFDTixTQUFWLENBQW9CWix1QkFBdUIsQ0FBQ1UsT0FBNUMsQ0FoQnFCO0FBaUJyQ1UsWUFBQUEsbUJBakJxQyxHQWlCZkYsU0FBUyxDQUFDRyxtQkFBVixDQUE4QnJCLHVCQUF1QixDQUFDVSxPQUF0RCxFQUErRCxDQUFDZixLQUFELENBQS9ELENBakJlO0FBQUE7QUFBQSxtQkFrQnBCSyx1QkFBdUIsQ0FBQ3NCLG9CQUF4QixDQUE2Q0gsYUFBN0MsRUFBNERDLG1CQUE1RCxDQWxCb0I7O0FBQUE7QUFrQnJDRyxZQUFBQSxRQWxCcUM7QUFtQjNDdEIsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlxQixRQUFRLENBQUNDLElBQXJCO0FBQ0F2QixZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwyREFBWjs7QUFwQjJDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQTdDLEdBQUY7QUFzQkgsQ0ExQk8sQ0FBUiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdXRrbWFoZXNod2FyaTI0NS9Xb3JrL1Byb2plY3RzL215QXp0ZWMvdGVzdCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB1dGlscyBmcm9tICdAYXp0ZWMvZGV2LXV0aWxzJztcblxuY29uc3QgYXp0ZWMgPSByZXF1aXJlKCdhenRlYy5qcycpO1xuY29uc3Qgc2VjcDI1NmsxID0gcmVxdWlyZSgnQGF6dGVjL3NlY3AyNTZrMScpO1xuXG5jb25zdCBaa0Fzc2V0TWludGFibGUgPSBhcnRpZmFjdHMucmVxdWlyZSgnLi9aa0Fzc2V0TWludGFibGUuc29sJyk7XG5jb25zdCB7cHJvb2ZzIDoge01JTlRfUFJPT0Z9fSA9IHV0aWxzO1xuY29uc3Qge0pvaW5TcGxpdFByb29mLCBNaW50UHJvb2Z9ID0gYXp0ZWM7XG5cbmNvbnRyYWN0KCdUZXN0IEF6dGVjIFByaXZhY3kgUHJvdG9jb2wnLCBhY2NvdW50cyA9PiB7XG4gICAgY29uc3QgYWxpY2UgPSBzZWNwMjU2azEuZ2VuZXJhdGVBY2NvdW50KCk7XG4gICAgY29uc3QgYm9iID0gc2VjcDI1NmsxLmdlbmVyYXRlQWNjb3VudCgpO1xuXG4gICAgaXQoJ1NpbXVsYXRlIE1pbnRpbmcgYW5kIFVuaWxhdGVyYWwgVHJhbnNmZXInLCBhc3luYygpID0+IHtcbiAgICAgICAgY29uc3QgWmtBc3NldE1pbnRhYmxlSW5zdGFuY2UgPSBhd2FpdCBaa0Fzc2V0TWludGFibGUuZGVwbG95ZWQoKTtcbiAgXG4gICAgICAgIGNvbnNvbGUubG9nKCdHaXZlIEFsaWNlIG5vdGVzIHdvcnRoIDEwMCcpO1xuICAgICAgICBjb25zdCB6ZXJvVmFsdWVOb3RlID0gYXdhaXQgYXp0ZWMubm90ZS5jcmVhdGVaZXJvVmFsdWVOb3RlKCk7XG4gICAgICAgIGNvbnN0IGFsaWNlMTAwTm90ZSA9IGF3YWl0IGF6dGVjLm5vdGUuY3JlYXRlKGFsaWNlLnB1YmxpY0tleSwgMTAwKTtcbiAgICAgICAgY29uc3QgbWludFByb29mID0gbmV3IE1pbnRQcm9vZih6ZXJvVmFsdWVOb3RlLCBhbGljZTEwME5vdGUsIFthbGljZTEwME5vdGVdLCBaa0Fzc2V0TWludGFibGVJbnN0YW5jZS5hZGRyZXNzKTtcbiAgICAgICAgY29uc3QgbWludERhdGEgPSBtaW50UHJvb2YuZW5jb2RlQUJJKCk7XG4gICAgICAgIGNvbnN0IG1pbnQgPSBhd2FpdCBaa0Fzc2V0TWludGFibGVJbnN0YW5jZS5jb25maWRlbnRpYWxNaW50KE1JTlRfUFJPT0YsIG1pbnREYXRhKTtcbiAgICAgICAgY29uc29sZS5sb2cobWludC5yZWNlaXB0KTtcbiAgICAgICAgY29uc29sZS5sb2coJ1N1Y2Nlc3NmdWxseSBnaXZlbiBub3RlcyB3b3J0aCAxMDAgdG8gQWxpY2UnKTtcblxuICAgICAgICBjb25zb2xlLmxvZygnVHJhbnNmZXIgbm90ZXMgd29ydGggMjUgZnJvbSBBbGljZSB0byBCb2InKTtcbiAgICAgICAgY29uc3QgYWxpY2U3NU5vdGUgPSBhd2FpdCBhenRlYy5ub3RlLmNyZWF0ZShhbGljZS5wdWJsaWNLZXksIDc1KTtcbiAgICAgICAgY29uc3QgYm9iMjVOb3RlID0gYXdhaXQgYXp0ZWMubm90ZS5jcmVhdGUoYm9iLnB1YmxpY0tleSwgMjUpO1xuICAgICAgICBjb25zdCBzZW5kUHJvb2YgPSBuZXcgSm9pblNwbGl0UHJvb2YoW2FsaWNlMTAwTm90ZV0sIFthbGljZTc1Tm90ZSwgYm9iMjVOb3RlXSwgYWNjb3VudHNbMF0sIDAsIGFjY291bnRzWzBdKTtcbiAgICAgICAgY29uc3Qgc2VuZFByb29mRGF0YSA9IHNlbmRQcm9vZi5lbmNvZGVBQkkoWmtBc3NldE1pbnRhYmxlSW5zdGFuY2UuYWRkcmVzcyk7XG4gICAgICAgIGNvbnN0IHNlbmRQcm9vZlNpZ25hdHVyZXMgPSBzZW5kUHJvb2YuY29uc3RydWN0U2lnbmF0dXJlcyhaa0Fzc2V0TWludGFibGVJbnN0YW5jZS5hZGRyZXNzLCBbYWxpY2VdKTtcbiAgICAgICAgY29uc3QgdHJhbnNmZXIgPSBhd2FpdCBaa0Fzc2V0TWludGFibGVJbnN0YW5jZS5jb25maWRlbnRpYWxUcmFuc2ZlcihzZW5kUHJvb2ZEYXRhLCBzZW5kUHJvb2ZTaWduYXR1cmVzKTtcbiAgICAgICAgY29uc29sZS5sb2codHJhbnNmZXIubG9ncyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdTdWNjZXNzZnVsbHkgdHJhbnNmZXJyZWQgbm90ZXMgd29ydGggMjUgZnJvbSBBbGljZSB0byBCb2InKTtcbiAgICB9KTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "testAztecProtocol.js"
      ],
      "names": [
        "aztec",
        "require",
        "secp256k1",
        "ZkAssetMintable",
        "artifacts",
        "MINT_PROOF",
        "utils",
        "proofs",
        "JoinSplitProof",
        "MintProof",
        "contract",
        "accounts",
        "alice",
        "generateAccount",
        "bob",
        "it",
        "deployed",
        "ZkAssetMintableInstance",
        "console",
        "log",
        "note",
        "createZeroValueNote",
        "zeroValueNote",
        "create",
        "publicKey",
        "alice100Note",
        "mintProof",
        "address",
        "mintData",
        "encodeABI",
        "confidentialMint",
        "mint",
        "receipt",
        "alice75Note",
        "bob25Note",
        "sendProof",
        "sendProofData",
        "sendProofSignatures",
        "constructSignatures",
        "confidentialTransfer",
        "transfer",
        "logs"
      ],
      "mappings": ";;;;;;;;AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AAEA,IAAME,eAAe,GAAGC,SAAS,CAACH,OAAV,CAAkB,uBAAlB,CAAxB;;IACiBI,U,GAAeC,oB,CAAzBC,M,CAAUF,U;IACVG,c,GAA6BR,K,CAA7BQ,c;IAAgBC,S,GAAaT,K,CAAbS,S;AAEvBC,QAAQ,CAAC,6BAAD,EAAgC,UAAAC,QAAQ,EAAI;AAChD,MAAMC,KAAK,GAAGV,SAAS,CAACW,eAAV,EAAd;AACA,MAAMC,GAAG,GAAGZ,SAAS,CAACW,eAAV,EAAZ;AAEAE,EAAAA,EAAE,CAAC,0CAAD;AAAA;AAAA;AAAA;AAAA,+BAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLZ,eAAe,CAACa,QAAhB,EADK;;AAAA;AACrCC,YAAAA,uBADqC;AAG3CC,YAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAH2C;AAAA,mBAIfnB,KAAK,CAACoB,IAAN,CAAWC,mBAAX,EAJe;;AAAA;AAIrCC,YAAAA,aAJqC;AAAA;AAAA,mBAKhBtB,KAAK,CAACoB,IAAN,CAAWG,MAAX,CAAkBX,KAAK,CAACY,SAAxB,EAAmC,GAAnC,CALgB;;AAAA;AAKrCC,YAAAA,YALqC;AAMrCC,YAAAA,SANqC,GAMzB,IAAIjB,SAAJ,CAAca,aAAd,EAA6BG,YAA7B,EAA2C,CAACA,YAAD,CAA3C,EAA2DR,uBAAuB,CAACU,OAAnF,CANyB;AAOrCC,YAAAA,QAPqC,GAO1BF,SAAS,CAACG,SAAV,EAP0B;AAAA;AAAA,mBAQxBZ,uBAAuB,CAACa,gBAAxB,CAAyCzB,UAAzC,EAAqDuB,QAArD,CARwB;;AAAA;AAQrCG,YAAAA,IARqC;AAS3Cb,YAAAA,OAAO,CAACC,GAAR,CAAYY,IAAI,CAACC,OAAjB;AACAd,YAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AAEAD,YAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AAZ2C;AAAA,mBAajBnB,KAAK,CAACoB,IAAN,CAAWG,MAAX,CAAkBX,KAAK,CAACY,SAAxB,EAAmC,EAAnC,CAbiB;;AAAA;AAarCS,YAAAA,WAbqC;AAAA;AAAA,mBAcnBjC,KAAK,CAACoB,IAAN,CAAWG,MAAX,CAAkBT,GAAG,CAACU,SAAtB,EAAiC,EAAjC,CAdmB;;AAAA;AAcrCU,YAAAA,SAdqC;AAerCC,YAAAA,SAfqC,GAezB,IAAI3B,cAAJ,CAAmB,CAACiB,YAAD,CAAnB,EAAmC,CAACQ,WAAD,EAAcC,SAAd,CAAnC,EAA6DvB,QAAQ,CAAC,CAAD,CAArE,EAA0E,CAA1E,EAA6EA,QAAQ,CAAC,CAAD,CAArF,CAfyB;AAgBrCyB,YAAAA,aAhBqC,GAgBrBD,SAAS,CAACN,SAAV,CAAoBZ,uBAAuB,CAACU,OAA5C,CAhBqB;AAiBrCU,YAAAA,mBAjBqC,GAiBfF,SAAS,CAACG,mBAAV,CAA8BrB,uBAAuB,CAACU,OAAtD,EAA+D,CAACf,KAAD,CAA/D,CAjBe;AAAA;AAAA,mBAkBpBK,uBAAuB,CAACsB,oBAAxB,CAA6CH,aAA7C,EAA4DC,mBAA5D,CAlBoB;;AAAA;AAkBrCG,YAAAA,QAlBqC;AAmB3CtB,YAAAA,OAAO,CAACC,GAAR,CAAYqB,QAAQ,CAACC,IAArB;AACAvB,YAAAA,OAAO,CAACC,GAAR,CAAY,2DAAZ;;AApB2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7C,GAAF;AAsBH,CA1BO,CAAR",
      "sourceRoot": "/Users/utkmaheshwari245/Work/Projects/myAztec/test",
      "sourcesContent": [
        "import utils from '@aztec/dev-utils';\n\nconst aztec = require('aztec.js');\nconst secp256k1 = require('@aztec/secp256k1');\n\nconst ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\nconst {proofs : {MINT_PROOF}} = utils;\nconst {JoinSplitProof, MintProof} = aztec;\n\ncontract('Test Aztec Privacy Protocol', accounts => {\n    const alice = secp256k1.generateAccount();\n    const bob = secp256k1.generateAccount();\n\n    it('Simulate Minting and Unilateral Transfer', async() => {\n        const ZkAssetMintableInstance = await ZkAssetMintable.deployed();\n  \n        console.log('Give Alice notes worth 100');\n        const zeroValueNote = await aztec.note.createZeroValueNote();\n        const alice100Note = await aztec.note.create(alice.publicKey, 100);\n        const mintProof = new MintProof(zeroValueNote, alice100Note, [alice100Note], ZkAssetMintableInstance.address);\n        const mintData = mintProof.encodeABI();\n        const mint = await ZkAssetMintableInstance.confidentialMint(MINT_PROOF, mintData);\n        console.log(mint.receipt);\n        console.log('Successfully given notes worth 100 to Alice');\n\n        console.log('Transfer notes worth 25 from Alice to Bob');\n        const alice75Note = await aztec.note.create(alice.publicKey, 75);\n        const bob25Note = await aztec.note.create(bob.publicKey, 25);\n        const sendProof = new JoinSplitProof([alice100Note], [alice75Note, bob25Note], accounts[0], 0, accounts[0]);\n        const sendProofData = sendProof.encodeABI(ZkAssetMintableInstance.address);\n        const sendProofSignatures = sendProof.constructSignatures(ZkAssetMintableInstance.address, [alice]);\n        const transfer = await ZkAssetMintableInstance.confidentialTransfer(sendProofData, sendProofSignatures);\n        console.log(transfer.logs);\n        console.log('Successfully transferred notes worth 25 from Alice to Bob');\n    });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570798641274
  }
}